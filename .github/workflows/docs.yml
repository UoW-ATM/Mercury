name: "Sphinx: Render docs"

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: sudo apt-get install libproj-dev libgeos-dev build-essential python3-dev proj-data proj-bin
      - run: python -m pip install shapely cartopy --no-binary shapely --no-binary cartopy
      - run: pip install -r requirements.txt
      - run: git submodule update --recursive --remote --init
      - run: cd docs && python3 generate_documentation.py
      - uses: actions/checkout@v4
#      - name: Build HTML
#        uses: ammaraskar/sphinx-action@master
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: html-docs
          path: docs/build/html/
#      - name: Deploy
#        uses: peaceiris/actions-gh-pages@v3
#        if: github.ref == 'refs/heads/main'
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: docs/build/html

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v3
        #uses: sphinx-notes/pages@v3
#
#name: website
#
## build the documentation whenever there are new commits on main
#on:
##  release:
##    types: [created]
#  push:
#    branches:
##      - main
#      - documentation
#    # Alternative: only build for tags.
#    # tags:
#    #   - '*'
#  # pull_request:
#
## security: restrict permissions for CI jobs.
#permissions:
#  contents: read
#
#jobs:
#  # Build the documentation and upload the static HTML files as an artifact.
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      # ADJUST THIS: install all dependencies (including pdoc)
#      - run: sudo apt-get install libproj-dev libgeos-dev build-essential python3-dev proj-data proj-bin
#      - run: python -m pip install shapely cartopy --no-binary shapely --no-binary cartopy
#      - run: pip install -r requirements.txt
#      - run: git submodule update --recursive --remote --init
#      # ADJUST THIS: build your documentation into docs/.
#      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
#      - run: cd docs && python3 generate_documentation.py
#
#      - uses: actions/upload-pages-artifact@v2
#        with:
#          path: docs/
#
#  # Deploy the artifact to GitHub pages.
#  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    permissions:
#      pages: write
#      id-token: write
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    steps:
#      - id: deployment
#        #uses: actions/deploy-pages@v2
#        uses: sphinx-notes/pages@v3