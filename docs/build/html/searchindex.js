Search.setIndex({"docnames": ["Quickstart", "about", "api", "generated/agents", "generated/agents.agent_base", "generated/agents.agent_base.Agent", "generated/agents.agent_base.Role", "generated/agents.airline_operating_centre", "generated/agents.airline_operating_centre.AirlineFlightPlanner", "generated/agents.airline_operating_centre.AirlineOperatingCentre", "generated/agents.airline_operating_centre.AirlinePaxHandler", "generated/agents.airline_operating_centre.DynamicCostIndexComputer", "generated/agents.airline_operating_centre.FlightPlanSelector", "generated/agents.airline_operating_centre.PassengerReallocation", "generated/agents.airline_operating_centre.TurnaroundOperations", "generated/agents.aman", "generated/agents.aman.AMAN", "generated/agents.aman.ArrivalCancellationHandler", "generated/agents.aman.ArrivalQueuePlannedUpdater", "generated/agents.aman.ArrivalTacticalProvider", "generated/agents.aman.FlightInAMANHandler", "generated/agents.aman.SlotAssigner", "generated/agents.aman.StrategicArrivalQueueBuilder", "generated/agents.commodities", "generated/agents.commodities.aircraft", "generated/agents.commodities.aircraft.Aircraft", "generated/agents.commodities.alliance", "generated/agents.commodities.alliance.Alliance", "generated/agents.commodities.arrival_slot", "generated/agents.commodities.arrival_slot.ArrivalSlot", "generated/agents.commodities.atfm_delay", "generated/agents.commodities.atfm_delay.ATFMDelay", "generated/agents.commodities.atfm_regulation", "generated/agents.commodities.atfm_regulation.ATFMBooker", "generated/agents.commodities.atfm_regulation.ATFMRegulation", "generated/agents.commodities.central_registry", "generated/agents.commodities.central_registry.CentralRegistry", "generated/agents.commodities.debug_flights", "generated/agents.commodities.flight_plan", "generated/agents.commodities.flight_plan.FlightPlan", "generated/agents.commodities.flight_plan.FlightPlanPoint", "generated/agents.commodities.flight_plan.build_proj", "generated/agents.commodities.pax_itinerary_group", "generated/agents.commodities.pax_itinerary_group.PaxItineraryGroup", "generated/agents.commodities.pax_itinerary_group.func", "generated/agents.commodities.route", "generated/agents.commodities.route.Route", "generated/agents.commodities.route.RoutePoint", "generated/agents.commodities.slot_queue", "generated/agents.commodities.slot_queue.CapacityPeriod", "generated/agents.commodities.slot_queue.Slot", "generated/agents.commodities.slot_queue.SlotQueue", "generated/agents.commodities.slot_queue_eaman", "generated/agents.commodities.slot_queue_eaman.EAMANSlot", "generated/agents.commodities.slot_queue_eaman.EAMANSlotQueue", "generated/agents.dman", "generated/agents.dman.DMAN", "generated/agents.dman.DepartureCancellationHandler", "generated/agents.dman.DepartureQueueUpdater", "generated/agents.dman.DepartureSlotProvider", "generated/agents.dman.StrategicDepartureQueueBuilder", "generated/agents.eaman", "generated/agents.eaman.ArrivalPlannerProvider", "generated/agents.eaman.ArrivalQueuePlannedUpdaterE", "generated/agents.eaman.EAMAN", "generated/agents.eaman.FlightInAMANHandlerE", "generated/agents.flight", "generated/agents.flight.AircraftDepartingHandler", "generated/agents.flight.DepartureSlotRequester", "generated/agents.flight.FPInfoProvider", "generated/agents.flight.Flight", "generated/agents.flight.FlightArrivalInformationProvider", "generated/agents.flight.FlightPlanConstraintUpdater", "generated/agents.flight.FlightPlanUpdater", "generated/agents.flight.GroundArrivalHandler", "generated/agents.flight.OperateTrajectory", "generated/agents.flight.PotentialDelayRecoveryProvider", "generated/agents.ground_airport", "generated/agents.ground_airport.GroundAirport", "generated/agents.ground_airport.GroundHandler", "generated/agents.ground_airport.ProvideConnectingTime", "generated/agents.ground_airport.TaxiInProvider", "generated/agents.ground_airport.TaxiOutEstimator", "generated/agents.ground_airport.TaxiOutProvider", "generated/agents.network_manager", "generated/agents.network_manager.HotspotManager", "generated/agents.network_manager.NetworkManager", "generated/agents.network_manager.NetworkManagerAcceptAndDisseminateFP", "generated/agents.network_manager.NetworkManagerCancelFP", "generated/agents.network_manager.NetworkManagerFlightPlanProcessing", "generated/agents.radar", "generated/agents.radar.DisseminateCancellationFlightPlan", "generated/agents.radar.DisseminateFlightPlan", "generated/agents.radar.DisseminateFlightPositionUpdate", "generated/agents.radar.Radar", "generated/agents.radar.RadarAugmentFlightPlan", "generated/agents.seed", "generated/core", "generated/core.delivery_system", "generated/core.delivery_system.Letter", "generated/core.delivery_system.LetterBox", "generated/core.delivery_system.Postman", "generated/core.module_management", "generated/core.module_management.check_incompatibilities", "generated/core.module_management.find_actual_module_name", "generated/core.module_management.get_all_modules", "generated/core.module_management.get_module_paras", "generated/core.module_management.load_mercury_module", "generated/core.parametriser", "generated/core.parametriser.Parametriser", "generated/core.parametriser.ParametriserCapacity", "generated/core.parametriser.ParametriserSelector", "generated/core.parametriser.ParametriserStandard", "generated/core.read_config", "generated/core.read_config.add_output_process", "generated/core.read_config.find_paras_categories", "generated/core.read_config.flatten_paras_dict", "generated/core.read_config.read_mercury_config", "generated/core.read_config.read_scenario_config", "generated/core.read_config.read_toml", "generated/core.read_config.transform_conf_paras", "generated/core.read_config.unflatten_profiles", "generated/core.read_config.unfold_paras_dict", "generated/core.read_config.update_scenario_paras_based_on_case_study", "generated/core.results_aggregator", "generated/core.results_aggregator.ResultAggregatorAdvanced", "generated/core.results_aggregator.ResultsAggregator", "generated/core.results_aggregator.ResultsAggregatorSelector", "generated/core.results_aggregator.ResultsAggregatorSimple", "generated/core.results_aggregator.ResultsAggregatorSimpleReduced", "generated/core.scenario_loader", "generated/core.scenario_loader.ScenarioLoader", "generated/core.scenario_loader.ScenarioLoaderSelector", "generated/core.scenario_loader.ScenarioLoaderSimple", "generated/core.scenario_loader.ScenarioLoaderStandard", "generated/core.scenario_loader.ScenarioLoaderStandardLocal", "generated/core.simulation_manager", "generated/core.simulation_manager.Mercury", "generated/core.simulation_manager.build_command", "generated/core.simulation_manager.create_paras_file_from_dict", "generated/core.world_builder", "generated/core.world_builder.World", "generated/core.world_builder.trace", "generated/dashboard", "generated/dashboard.mercury_gui", "generated/libs", "generated/libs.airspace_particularities", "generated/libs.airspace_particularities.get_nas_airport", "generated/libs.airspace_particularities.is_ATFM_AREA", "generated/libs.airspace_particularities.is_ECAC", "generated/libs.db_access_functions", "generated/libs.db_access_functions.DataAccessBADA4", "generated/libs.db_access_functions.DataAccessPerformance", "generated/libs.db_access_functions.add_crco_to_flights_in_db", "generated/libs.db_access_functions.get_information_routes_o_d_generated", "generated/libs.db_access_functions.read_ATFM_at_airports", "generated/libs.db_access_functions.read_ATFM_at_airports_days", "generated/libs.db_access_functions.read_ATFM_at_airports_manual", "generated/libs.db_access_functions.read_ATFM_at_airports_old", "generated/libs.db_access_functions.read_MCT", "generated/libs.db_access_functions.read_airlines_data", "generated/libs.db_access_functions.read_airport_coords", "generated/libs.db_access_functions.read_airports_curfew_data", "generated/libs.db_access_functions.read_airports_data", "generated/libs.db_access_functions.read_airports_modif_data", "generated/libs.db_access_functions.read_airspace_static", "generated/libs.db_access_functions.read_all_regulation_days", "generated/libs.db_access_functions.read_compensation_data", "generated/libs.db_access_functions.read_coord_trajectory_route", "generated/libs.db_access_functions.read_coord_trajectory_route_based_on_id", "generated/libs.db_access_functions.read_countries_ATFM_NAS", "generated/libs.db_access_functions.read_crco", "generated/libs.db_access_functions.read_crco_charges", "generated/libs.db_access_functions.read_dict_ac_bada_code_ac_model", "generated/libs.db_access_functions.read_dict_ac_type_wtc", "generated/libs.db_access_functions.read_dict_fp_pool_ids", "generated/libs.db_access_functions.read_doc_data", "generated/libs.db_access_functions.read_eamans_data", "generated/libs.db_access_functions.read_estimated_avg_costs_curfews", "generated/libs.db_access_functions.read_extra_cruise_if_dci", "generated/libs.db_access_functions.read_flight_plan_ansps_weights_for_crco", "generated/libs.db_access_functions.read_flight_schedules", "generated/libs.db_access_functions.read_flight_schedules2", "generated/libs.db_access_functions.read_flight_set", "generated/libs.db_access_functions.read_flight_uncertainty", "generated/libs.db_access_functions.read_fp_pool", "generated/libs.db_access_functions.read_fp_pool_missing", "generated/libs.db_access_functions.read_fp_routes_without_crco", "generated/libs.db_access_functions.read_iedf_atfm", "generated/libs.db_access_functions.read_iedf_wind_dict", "generated/libs.db_access_functions.read_itineraries_data", "generated/libs.db_access_functions.read_nas_route_pool", "generated/libs.db_access_functions.read_nas_route_pool_static_o_d", "generated/libs.db_access_functions.read_non_pax_cost_data", "generated/libs.db_access_functions.read_non_pax_cost_fit_data", "generated/libs.db_access_functions.read_nonpax_cost_curfews", "generated/libs.db_access_functions.read_od_in_historic_od_computed_pool", "generated/libs.db_access_functions.read_orig_destination_via_intermediate_shortest", "generated/libs.db_access_functions.read_passenger_flows", "generated/libs.db_access_functions.read_passenger_options", "generated/libs.db_access_functions.read_perc_min_perc_max_regulations_days", "generated/libs.db_access_functions.read_prob_atfm", "generated/libs.db_access_functions.read_regulation_days_at_an_airport", "generated/libs.db_access_functions.read_route_pool", "generated/libs.db_access_functions.read_route_pool_o_d_generated", "generated/libs.db_access_functions.read_route_pool_static", "generated/libs.db_access_functions.read_scenario", "generated/libs.db_access_functions.read_scenario_paras", "generated/libs.db_access_functions.read_schedules", "generated/libs.db_access_functions.read_seed", "generated/libs.db_access_functions.read_soft_cost_date", "generated/libs.db_access_functions.read_trajectories", "generated/libs.db_access_functions.read_trajectories_dataframe", "generated/libs.db_access_functions.read_trajectories_ids", "generated/libs.db_access_functions.read_trajectories_missing", "generated/libs.db_access_functions.read_trajectories_missing_in_interval", "generated/libs.db_access_functions.read_trajectories_options", "generated/libs.db_access_functions.read_trajectories_pool", "generated/libs.db_access_functions.read_turnaround_data", "generated/libs.db_access_functions.save_trajectories_pool", "generated/libs.db_access_functions.save_trajectories_segments", "generated/libs.input_manager", "generated/libs.input_manager.Input_manager", "generated/libs.input_manager.filter_df", "generated/libs.input_manager.filter_sql", "generated/libs.input_manager.read_data_from_dict", "generated/libs.input_manager.write_toml", "generated/libs.other_tools", "generated/libs.other_tools.FlightDummy", "generated/libs.other_tools.SlotDummy", "generated/libs.other_tools.allocation_from_flights", "generated/libs.other_tools.clone_pax", "generated/libs.other_tools.compatible_slots", "generated/libs.other_tools.compute_FPFS_allocation", "generated/libs.other_tools.distance_func", "generated/libs.other_tools.flight_str", "generated/libs.performance_trajectory", "generated/libs.performance_trajectory.ac_performances", "generated/libs.performance_trajectory.ac_performances.AircraftPerformance", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP", "generated/libs.performance_trajectory.standard_atmosphere", "generated/libs.performance_trajectory.standard_atmosphere.density", "generated/libs.performance_trajectory.standard_atmosphere.pressure", "generated/libs.performance_trajectory.standard_atmosphere.sound_speed", "generated/libs.performance_trajectory.standard_atmosphere.temperature", "generated/libs.performance_trajectory.trajectory", "generated/libs.performance_trajectory.trajectory.Trajectory", "generated/libs.performance_trajectory.trajectory.TrajectoryComponent", "generated/libs.performance_trajectory.trajectory.TrajectorySegment", "generated/libs.performance_trajectory.unit_conversions", "generated/libs.performance_trajectory.unit_conversions.cas2tas", "generated/libs.performance_trajectory.unit_conversions.km2kt", "generated/libs.performance_trajectory.unit_conversions.km2m", "generated/libs.performance_trajectory.unit_conversions.kt2m", "generated/libs.performance_trajectory.unit_conversions.m2kt", "generated/libs.result_manager", "generated/libs.result_manager.Result_manager", "generated/libs.result_tools", "generated/libs.result_tools.binarise", "generated/libs.result_tools.build_aligned_pax_flight_df", "generated/libs.result_tools.build_single_iteration_df", "generated/libs.result_tools.clone_pax", "generated/libs.result_tools.compute_derived_metrics_hist_sim", "generated/libs.result_tools.compute_derived_metrics_historical", "generated/libs.result_tools.compute_derived_metrics_pax_generic", "generated/libs.result_tools.compute_derived_metrics_simulations", "generated/libs.result_tools.compute_metrics_flights", "generated/libs.result_tools.compute_metrics_pax", "generated/libs.result_tools.find_destination_generic", "generated/libs.result_tools.find_origin_generic", "generated/libs.result_tools.get_historical_flights", "generated/libs.result_tools.get_pax_schedules", "generated/libs.result_tools.merge_hist_sim", "generated/libs.result_tools.merge_pax_flights", "generated/libs.result_tools.produce_hist_sim_df", "generated/libs.result_tools.produce_historical_flight_pax_df", "generated/libs.uow_tool_belt", "generated/libs.uow_tool_belt.DTW", "generated/libs.uow_tool_belt.DTW.dtw", "generated/libs.uow_tool_belt.DTW.dtw_path", "generated/libs.uow_tool_belt.airspace_particularities", "generated/libs.uow_tool_belt.airspace_particularities.get_nas_airport", "generated/libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA", "generated/libs.uow_tool_belt.airspace_particularities.is_ECAC", "generated/libs.uow_tool_belt.connection_tools", "generated/libs.uow_tool_belt.connection_tools.EmptyConnection", "generated/libs.uow_tool_belt.connection_tools.create_indexes_in_table", "generated/libs.uow_tool_belt.connection_tools.do_query", "generated/libs.uow_tool_belt.connection_tools.extract_ssh_parameters", "generated/libs.uow_tool_belt.connection_tools.file_connection", "generated/libs.uow_tool_belt.connection_tools.generic_connection", "generated/libs.uow_tool_belt.connection_tools.load_data_infile", "generated/libs.uow_tool_belt.connection_tools.mysql_connection", "generated/libs.uow_tool_belt.connection_tools.parquet_connection", "generated/libs.uow_tool_belt.connection_tools.read_cred", "generated/libs.uow_tool_belt.connection_tools.read_csv", "generated/libs.uow_tool_belt.connection_tools.read_data", "generated/libs.uow_tool_belt.connection_tools.read_mysql", "generated/libs.uow_tool_belt.connection_tools.read_parquet", "generated/libs.uow_tool_belt.connection_tools.read_pickle", "generated/libs.uow_tool_belt.connection_tools.run_mysql_query", "generated/libs.uow_tool_belt.connection_tools.write_csv", "generated/libs.uow_tool_belt.connection_tools.write_data", "generated/libs.uow_tool_belt.connection_tools.write_mysql", "generated/libs.uow_tool_belt.connection_tools.write_pickle", "generated/libs.uow_tool_belt.general_tools", "generated/libs.uow_tool_belt.general_tools.A_B", "generated/libs.uow_tool_belt.general_tools.DummyFile", "generated/libs.uow_tool_belt.general_tools.HiddenPrints", "generated/libs.uow_tool_belt.general_tools.Paras", "generated/libs.uow_tool_belt.general_tools.TwoWayDict", "generated/libs.uow_tool_belt.general_tools.add_dicts", "generated/libs.uow_tool_belt.general_tools.alert_print", "generated/libs.uow_tool_belt.general_tools.alphabet", "generated/libs.uow_tool_belt.general_tools.apply_args_and_kwargs", "generated/libs.uow_tool_belt.general_tools.average_on_downsampled_interval", "generated/libs.uow_tool_belt.general_tools.average_on_intervals", "generated/libs.uow_tool_belt.general_tools.average_on_quantiles", "generated/libs.uow_tool_belt.general_tools.bootstrap_mean_test", "generated/libs.uow_tool_belt.general_tools.bootstrap_test", "generated/libs.uow_tool_belt.general_tools.build_col_print_func", "generated/libs.uow_tool_belt.general_tools.build_step_bivariate_function", "generated/libs.uow_tool_belt.general_tools.build_step_multi_valued_function", "generated/libs.uow_tool_belt.general_tools.build_triangular", "generated/libs.uow_tool_belt.general_tools.center_spatial_network", "generated/libs.uow_tool_belt.general_tools.clock_time", "generated/libs.uow_tool_belt.general_tools.compute_percentile_with_weight", "generated/libs.uow_tool_belt.general_tools.counter", "generated/libs.uow_tool_belt.general_tools.create_dir", "generated/libs.uow_tool_belt.general_tools.dict_depth", "generated/libs.uow_tool_belt.general_tools.distance_euclidean", "generated/libs.uow_tool_belt.general_tools.fit", "generated/libs.uow_tool_belt.general_tools.get_first_matching_element", "generated/libs.uow_tool_belt.general_tools.gini", "generated/libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval", "generated/libs.uow_tool_belt.general_tools.groupby_on_intervals", "generated/libs.uow_tool_belt.general_tools.groupby_on_quantiles", "generated/libs.uow_tool_belt.general_tools.haversine", "generated/libs.uow_tool_belt.general_tools.haversine_old", "generated/libs.uow_tool_belt.general_tools.hex_to_rgb", "generated/libs.uow_tool_belt.general_tools.human_format", "generated/libs.uow_tool_belt.general_tools.human_format_for_ticks", "generated/libs.uow_tool_belt.general_tools.intermediate_point", "generated/libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm", "generated/libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm", "generated/libs.uow_tool_belt.general_tools.inv_s_scale_lognorm", "generated/libs.uow_tool_belt.general_tools.inverted_edf", "generated/libs.uow_tool_belt.general_tools.keep_time", "generated/libs.uow_tool_belt.general_tools.loading", "generated/libs.uow_tool_belt.general_tools.logging", "generated/libs.uow_tool_belt.general_tools.loop", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick", "generated/libs.uow_tool_belt.general_tools.make_nested_dict_from_df", "generated/libs.uow_tool_belt.general_tools.mysql_server", "generated/libs.uow_tool_belt.general_tools.parallelize", "generated/libs.uow_tool_belt.general_tools.partial_corr", "generated/libs.uow_tool_belt.general_tools.percentile_10", "generated/libs.uow_tool_belt.general_tools.percentile_90", "generated/libs.uow_tool_belt.general_tools.percentile_custom", "generated/libs.uow_tool_belt.general_tools.permutation_test", "generated/libs.uow_tool_belt.general_tools.permutation_test_only_diff", "generated/libs.uow_tool_belt.general_tools.proportional", "generated/libs.uow_tool_belt.general_tools.r_squared", "generated/libs.uow_tool_belt.general_tools.read_paras", "generated/libs.uow_tool_belt.general_tools.recursive_concat", "generated/libs.uow_tool_belt.general_tools.recursive_minimization", "generated/libs.uow_tool_belt.general_tools.remove_nan_coupled_lists", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm", "generated/libs.uow_tool_belt.general_tools.set_interval", "generated/libs.uow_tool_belt.general_tools.shift_spatial_network", "generated/libs.uow_tool_belt.general_tools.show_dic", "generated/libs.uow_tool_belt.general_tools.silence", "generated/libs.uow_tool_belt.general_tools.simple_color_map_function", "generated/libs.uow_tool_belt.general_tools.simple_colormap_object", "generated/libs.uow_tool_belt.general_tools.sol_Bs", "generated/libs.uow_tool_belt.general_tools.sort_lists", "generated/libs.uow_tool_belt.general_tools.sort_paired_values", "generated/libs.uow_tool_belt.general_tools.spread_integer", "generated/libs.uow_tool_belt.general_tools.ssh_client_connection", "generated/libs.uow_tool_belt.general_tools.ssh_copy", "generated/libs.uow_tool_belt.general_tools.ssh_tunnel_connection", "generated/libs.uow_tool_belt.general_tools.starmap_with_kwargs", "generated/libs.uow_tool_belt.general_tools.strip_string", "generated/libs.uow_tool_belt.general_tools.timeit", "generated/libs.uow_tool_belt.general_tools.weight_avg", "generated/libs.uow_tool_belt.general_tools.write_on_file", "generated/libs.uow_tool_belt.general_tools.yes", "generated/libs.uow_tool_belt.logging", "generated/libs.uow_tool_belt.network_tools", "generated/libs.uow_tool_belt.plot_tools", "generated/libs.uow_tool_belt.plot_tools.bar_plot_template", "generated/libs.uow_tool_belt.plot_tools.savefig", "generated/libs.uow_tool_belt.trajectory_tools", "generated/libs.uow_tool_belt.trajectory_tools.compute_ab", "generated/libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory", "generated/libs.uow_tool_belt.trajectory_tools.detect_toc_tod", "generated/libs.uow_tool_belt.trajectory_tools.plot_traj", "generated/mercury", "generated/mercury.manual_bool_cast", "generated/modules", "generated/modules.Auction", "generated/modules.Auction.Auction", "generated/modules.Auction.module_definition", "generated/modules.Auction.paras_Auction", "generated/modules.CM", "generated/modules.CM.CM", "generated/modules.CM.CM.compute_adequate_default_parameters", "generated/modules.CM.CM.get_metric", "generated/modules.CM.CM.make_hotspot_decision_CM", "generated/modules.CM.CM.on_finalise_CM", "generated/modules.CM.CM.on_init_AOC", "generated/modules.CM.CM.on_prepare_CM", "generated/modules.CM.module_definition", "generated/modules.CM.paras_CM", "generated/modules.FAC", "generated/modules.FAC.FAC_FIFO_queue", "generated/modules.FAC.FAC_FIFO_queue.build_arrival_queue", "generated/modules.FAC.FAC_FIFO_queue.update_arrival_queue", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue", "generated/modules.FAC.FAC_total_cost", "generated/modules.FAC.FAC_total_cost.compute_cost_slots_total", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs", "generated/modules.FAC.FAC_total_cost.request_cost_delay_function", "generated/modules.FAC.FAC_total_cost.wait_for_cost_delay_function", "generated/modules.FAC.FAC_total_delay", "generated/modules.FAC.FAC_total_delay.compute_total_delay_slots", "generated/modules.FAC.FAC_total_delay.request_time_propagate_delay", "generated/modules.FAC.FAC_total_delay.wait_for_propagation_delay_time", "generated/modules.FAC.module_definition", "generated/modules.FP", "generated/modules.FP.FP_L1", "generated/modules.FP.FP_L1.consider_flight_swap_FP1", "generated/modules.FP.FP_L2", "generated/modules.FP.FP_L2.consider_flight_swap_FP2", "generated/modules.FP.module_definition", "generated/modules.HMI_HOTSPOT", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_server", "generated/modules.HMI_HOTSPOT.HMI_server.MercuryServer", "generated/modules.HMI_HOTSPOT.HMI_server.main", "generated/modules.HMI_HOTSPOT.client_test", "generated/modules.HMI_HOTSPOT.client_test.Client", "generated/modules.HMI_HOTSPOT.client_test2", "generated/modules.HMI_HOTSPOT.client_test2.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_hmi", "generated/modules.HMI_HOTSPOT.client_test_hmi.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_hmi2", "generated/modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_mercury", "generated/modules.HMI_HOTSPOT.client_test_mercury.ClientMercury", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP", "generated/modules.HMI_HOTSPOT.module_definition", "generated/modules.HMI_HOTSPOT.paras_HMI_FP_SEL", "generated/modules.HMI_HOTSPOT.paras_HMI_HOTSPOT", "generated/modules.TA", "generated/modules.TA.TA_L1", "generated/modules.TA.TA_L1.consider_waiting_pax_TA1", "generated/modules.TA.TA_L1.cost_index_assessment_TA1", "generated/modules.TA.TA_L1.wait_for_toc_reached_message_TA1", "generated/modules.TA.TA_L2", "generated/modules.TA.TA_L2.consider_waiting_pax_TA2", "generated/modules.TA.TA_L2.cost_index_assessment_TA2", "generated/modules.TA.TA_L2.wait_for_toc_reached_message_TA2", "generated/modules.TA.module_definition", "generated/modules.nostromo_EAMAN", "generated/modules.nostromo_EAMAN.module_definition", "generated/modules.nostromo_EAMAN.nostromo_EAMAN", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.get_p", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rescale", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information", "generated/modules.nostromo_EAMAN.optimiser_advanced", "generated/modules.nostromo_EAMAN.optimiser_advanced.DummyFile", "generated/modules.nostromo_EAMAN.optimiser_advanced.NoSolution", "generated/modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable", "generated/modules.nostromo_EAMAN.optimiser_advanced.clock_time", "generated/modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element", "generated/modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced", "generated/modules.nostromo_EAMAN.optimiser_advanced.silence", "generated/modules.nostromo_EAMAN.optimiser_baseline", "generated/modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline", "index"], "filenames": ["Quickstart.rst", "about.rst", "api.rst", "generated/agents.rst", "generated/agents.agent_base.rst", "generated/agents.agent_base.Agent.rst", "generated/agents.agent_base.Role.rst", "generated/agents.airline_operating_centre.rst", "generated/agents.airline_operating_centre.AirlineFlightPlanner.rst", "generated/agents.airline_operating_centre.AirlineOperatingCentre.rst", "generated/agents.airline_operating_centre.AirlinePaxHandler.rst", "generated/agents.airline_operating_centre.DynamicCostIndexComputer.rst", "generated/agents.airline_operating_centre.FlightPlanSelector.rst", "generated/agents.airline_operating_centre.PassengerReallocation.rst", "generated/agents.airline_operating_centre.TurnaroundOperations.rst", "generated/agents.aman.rst", "generated/agents.aman.AMAN.rst", "generated/agents.aman.ArrivalCancellationHandler.rst", "generated/agents.aman.ArrivalQueuePlannedUpdater.rst", "generated/agents.aman.ArrivalTacticalProvider.rst", "generated/agents.aman.FlightInAMANHandler.rst", "generated/agents.aman.SlotAssigner.rst", "generated/agents.aman.StrategicArrivalQueueBuilder.rst", "generated/agents.commodities.rst", "generated/agents.commodities.aircraft.rst", "generated/agents.commodities.aircraft.Aircraft.rst", "generated/agents.commodities.alliance.rst", "generated/agents.commodities.alliance.Alliance.rst", "generated/agents.commodities.arrival_slot.rst", "generated/agents.commodities.arrival_slot.ArrivalSlot.rst", "generated/agents.commodities.atfm_delay.rst", "generated/agents.commodities.atfm_delay.ATFMDelay.rst", "generated/agents.commodities.atfm_regulation.rst", "generated/agents.commodities.atfm_regulation.ATFMBooker.rst", "generated/agents.commodities.atfm_regulation.ATFMRegulation.rst", "generated/agents.commodities.central_registry.rst", "generated/agents.commodities.central_registry.CentralRegistry.rst", "generated/agents.commodities.debug_flights.rst", "generated/agents.commodities.flight_plan.rst", "generated/agents.commodities.flight_plan.FlightPlan.rst", "generated/agents.commodities.flight_plan.FlightPlanPoint.rst", "generated/agents.commodities.flight_plan.build_proj.rst", "generated/agents.commodities.pax_itinerary_group.rst", "generated/agents.commodities.pax_itinerary_group.PaxItineraryGroup.rst", "generated/agents.commodities.pax_itinerary_group.func.rst", "generated/agents.commodities.route.rst", "generated/agents.commodities.route.Route.rst", "generated/agents.commodities.route.RoutePoint.rst", "generated/agents.commodities.slot_queue.rst", "generated/agents.commodities.slot_queue.CapacityPeriod.rst", "generated/agents.commodities.slot_queue.Slot.rst", "generated/agents.commodities.slot_queue.SlotQueue.rst", "generated/agents.commodities.slot_queue_eaman.rst", "generated/agents.commodities.slot_queue_eaman.EAMANSlot.rst", "generated/agents.commodities.slot_queue_eaman.EAMANSlotQueue.rst", "generated/agents.dman.rst", "generated/agents.dman.DMAN.rst", "generated/agents.dman.DepartureCancellationHandler.rst", "generated/agents.dman.DepartureQueueUpdater.rst", "generated/agents.dman.DepartureSlotProvider.rst", "generated/agents.dman.StrategicDepartureQueueBuilder.rst", "generated/agents.eaman.rst", "generated/agents.eaman.ArrivalPlannerProvider.rst", "generated/agents.eaman.ArrivalQueuePlannedUpdaterE.rst", "generated/agents.eaman.EAMAN.rst", "generated/agents.eaman.FlightInAMANHandlerE.rst", "generated/agents.flight.rst", "generated/agents.flight.AircraftDepartingHandler.rst", "generated/agents.flight.DepartureSlotRequester.rst", "generated/agents.flight.FPInfoProvider.rst", "generated/agents.flight.Flight.rst", "generated/agents.flight.FlightArrivalInformationProvider.rst", "generated/agents.flight.FlightPlanConstraintUpdater.rst", "generated/agents.flight.FlightPlanUpdater.rst", "generated/agents.flight.GroundArrivalHandler.rst", "generated/agents.flight.OperateTrajectory.rst", "generated/agents.flight.PotentialDelayRecoveryProvider.rst", "generated/agents.ground_airport.rst", "generated/agents.ground_airport.GroundAirport.rst", "generated/agents.ground_airport.GroundHandler.rst", "generated/agents.ground_airport.ProvideConnectingTime.rst", "generated/agents.ground_airport.TaxiInProvider.rst", "generated/agents.ground_airport.TaxiOutEstimator.rst", "generated/agents.ground_airport.TaxiOutProvider.rst", "generated/agents.network_manager.rst", "generated/agents.network_manager.HotspotManager.rst", "generated/agents.network_manager.NetworkManager.rst", "generated/agents.network_manager.NetworkManagerAcceptAndDisseminateFP.rst", "generated/agents.network_manager.NetworkManagerCancelFP.rst", "generated/agents.network_manager.NetworkManagerFlightPlanProcessing.rst", "generated/agents.radar.rst", "generated/agents.radar.DisseminateCancellationFlightPlan.rst", "generated/agents.radar.DisseminateFlightPlan.rst", "generated/agents.radar.DisseminateFlightPositionUpdate.rst", "generated/agents.radar.Radar.rst", "generated/agents.radar.RadarAugmentFlightPlan.rst", "generated/agents.seed.rst", "generated/core.rst", "generated/core.delivery_system.rst", "generated/core.delivery_system.Letter.rst", "generated/core.delivery_system.LetterBox.rst", "generated/core.delivery_system.Postman.rst", "generated/core.module_management.rst", "generated/core.module_management.check_incompatibilities.rst", "generated/core.module_management.find_actual_module_name.rst", "generated/core.module_management.get_all_modules.rst", "generated/core.module_management.get_module_paras.rst", "generated/core.module_management.load_mercury_module.rst", "generated/core.parametriser.rst", "generated/core.parametriser.Parametriser.rst", "generated/core.parametriser.ParametriserCapacity.rst", "generated/core.parametriser.ParametriserSelector.rst", "generated/core.parametriser.ParametriserStandard.rst", "generated/core.read_config.rst", "generated/core.read_config.add_output_process.rst", "generated/core.read_config.find_paras_categories.rst", "generated/core.read_config.flatten_paras_dict.rst", "generated/core.read_config.read_mercury_config.rst", "generated/core.read_config.read_scenario_config.rst", "generated/core.read_config.read_toml.rst", "generated/core.read_config.transform_conf_paras.rst", "generated/core.read_config.unflatten_profiles.rst", "generated/core.read_config.unfold_paras_dict.rst", "generated/core.read_config.update_scenario_paras_based_on_case_study.rst", "generated/core.results_aggregator.rst", "generated/core.results_aggregator.ResultAggregatorAdvanced.rst", "generated/core.results_aggregator.ResultsAggregator.rst", "generated/core.results_aggregator.ResultsAggregatorSelector.rst", "generated/core.results_aggregator.ResultsAggregatorSimple.rst", "generated/core.results_aggregator.ResultsAggregatorSimpleReduced.rst", "generated/core.scenario_loader.rst", "generated/core.scenario_loader.ScenarioLoader.rst", "generated/core.scenario_loader.ScenarioLoaderSelector.rst", "generated/core.scenario_loader.ScenarioLoaderSimple.rst", "generated/core.scenario_loader.ScenarioLoaderStandard.rst", "generated/core.scenario_loader.ScenarioLoaderStandardLocal.rst", "generated/core.simulation_manager.rst", "generated/core.simulation_manager.Mercury.rst", "generated/core.simulation_manager.build_command.rst", "generated/core.simulation_manager.create_paras_file_from_dict.rst", "generated/core.world_builder.rst", "generated/core.world_builder.World.rst", "generated/core.world_builder.trace.rst", "generated/dashboard.rst", "generated/dashboard.mercury_gui.rst", "generated/libs.rst", "generated/libs.airspace_particularities.rst", "generated/libs.airspace_particularities.get_nas_airport.rst", "generated/libs.airspace_particularities.is_ATFM_AREA.rst", "generated/libs.airspace_particularities.is_ECAC.rst", "generated/libs.db_access_functions.rst", "generated/libs.db_access_functions.DataAccessBADA4.rst", "generated/libs.db_access_functions.DataAccessPerformance.rst", "generated/libs.db_access_functions.add_crco_to_flights_in_db.rst", "generated/libs.db_access_functions.get_information_routes_o_d_generated.rst", "generated/libs.db_access_functions.read_ATFM_at_airports.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_days.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_manual.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_old.rst", "generated/libs.db_access_functions.read_MCT.rst", "generated/libs.db_access_functions.read_airlines_data.rst", "generated/libs.db_access_functions.read_airport_coords.rst", "generated/libs.db_access_functions.read_airports_curfew_data.rst", "generated/libs.db_access_functions.read_airports_data.rst", "generated/libs.db_access_functions.read_airports_modif_data.rst", "generated/libs.db_access_functions.read_airspace_static.rst", "generated/libs.db_access_functions.read_all_regulation_days.rst", "generated/libs.db_access_functions.read_compensation_data.rst", "generated/libs.db_access_functions.read_coord_trajectory_route.rst", "generated/libs.db_access_functions.read_coord_trajectory_route_based_on_id.rst", "generated/libs.db_access_functions.read_countries_ATFM_NAS.rst", "generated/libs.db_access_functions.read_crco.rst", "generated/libs.db_access_functions.read_crco_charges.rst", "generated/libs.db_access_functions.read_dict_ac_bada_code_ac_model.rst", "generated/libs.db_access_functions.read_dict_ac_type_wtc.rst", "generated/libs.db_access_functions.read_dict_fp_pool_ids.rst", "generated/libs.db_access_functions.read_doc_data.rst", "generated/libs.db_access_functions.read_eamans_data.rst", "generated/libs.db_access_functions.read_estimated_avg_costs_curfews.rst", "generated/libs.db_access_functions.read_extra_cruise_if_dci.rst", "generated/libs.db_access_functions.read_flight_plan_ansps_weights_for_crco.rst", "generated/libs.db_access_functions.read_flight_schedules.rst", "generated/libs.db_access_functions.read_flight_schedules2.rst", "generated/libs.db_access_functions.read_flight_set.rst", "generated/libs.db_access_functions.read_flight_uncertainty.rst", "generated/libs.db_access_functions.read_fp_pool.rst", "generated/libs.db_access_functions.read_fp_pool_missing.rst", "generated/libs.db_access_functions.read_fp_routes_without_crco.rst", "generated/libs.db_access_functions.read_iedf_atfm.rst", "generated/libs.db_access_functions.read_iedf_wind_dict.rst", "generated/libs.db_access_functions.read_itineraries_data.rst", "generated/libs.db_access_functions.read_nas_route_pool.rst", "generated/libs.db_access_functions.read_nas_route_pool_static_o_d.rst", "generated/libs.db_access_functions.read_non_pax_cost_data.rst", "generated/libs.db_access_functions.read_non_pax_cost_fit_data.rst", "generated/libs.db_access_functions.read_nonpax_cost_curfews.rst", "generated/libs.db_access_functions.read_od_in_historic_od_computed_pool.rst", "generated/libs.db_access_functions.read_orig_destination_via_intermediate_shortest.rst", "generated/libs.db_access_functions.read_passenger_flows.rst", "generated/libs.db_access_functions.read_passenger_options.rst", "generated/libs.db_access_functions.read_perc_min_perc_max_regulations_days.rst", "generated/libs.db_access_functions.read_prob_atfm.rst", "generated/libs.db_access_functions.read_regulation_days_at_an_airport.rst", "generated/libs.db_access_functions.read_route_pool.rst", "generated/libs.db_access_functions.read_route_pool_o_d_generated.rst", "generated/libs.db_access_functions.read_route_pool_static.rst", "generated/libs.db_access_functions.read_scenario.rst", "generated/libs.db_access_functions.read_scenario_paras.rst", "generated/libs.db_access_functions.read_schedules.rst", "generated/libs.db_access_functions.read_seed.rst", "generated/libs.db_access_functions.read_soft_cost_date.rst", "generated/libs.db_access_functions.read_trajectories.rst", "generated/libs.db_access_functions.read_trajectories_dataframe.rst", "generated/libs.db_access_functions.read_trajectories_ids.rst", "generated/libs.db_access_functions.read_trajectories_missing.rst", "generated/libs.db_access_functions.read_trajectories_missing_in_interval.rst", "generated/libs.db_access_functions.read_trajectories_options.rst", "generated/libs.db_access_functions.read_trajectories_pool.rst", "generated/libs.db_access_functions.read_turnaround_data.rst", "generated/libs.db_access_functions.save_trajectories_pool.rst", "generated/libs.db_access_functions.save_trajectories_segments.rst", "generated/libs.input_manager.rst", "generated/libs.input_manager.Input_manager.rst", "generated/libs.input_manager.filter_df.rst", "generated/libs.input_manager.filter_sql.rst", "generated/libs.input_manager.read_data_from_dict.rst", "generated/libs.input_manager.write_toml.rst", "generated/libs.other_tools.rst", "generated/libs.other_tools.FlightDummy.rst", "generated/libs.other_tools.SlotDummy.rst", "generated/libs.other_tools.allocation_from_flights.rst", "generated/libs.other_tools.clone_pax.rst", "generated/libs.other_tools.compatible_slots.rst", "generated/libs.other_tools.compute_FPFS_allocation.rst", "generated/libs.other_tools.distance_func.rst", "generated/libs.other_tools.flight_str.rst", "generated/libs.performance_trajectory.rst", "generated/libs.performance_trajectory.ac_performances.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformance.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.rst", "generated/libs.performance_trajectory.standard_atmosphere.rst", "generated/libs.performance_trajectory.standard_atmosphere.density.rst", "generated/libs.performance_trajectory.standard_atmosphere.pressure.rst", "generated/libs.performance_trajectory.standard_atmosphere.sound_speed.rst", "generated/libs.performance_trajectory.standard_atmosphere.temperature.rst", "generated/libs.performance_trajectory.trajectory.rst", "generated/libs.performance_trajectory.trajectory.Trajectory.rst", "generated/libs.performance_trajectory.trajectory.TrajectoryComponent.rst", "generated/libs.performance_trajectory.trajectory.TrajectorySegment.rst", "generated/libs.performance_trajectory.unit_conversions.rst", "generated/libs.performance_trajectory.unit_conversions.cas2tas.rst", "generated/libs.performance_trajectory.unit_conversions.km2kt.rst", "generated/libs.performance_trajectory.unit_conversions.km2m.rst", "generated/libs.performance_trajectory.unit_conversions.kt2m.rst", "generated/libs.performance_trajectory.unit_conversions.m2kt.rst", "generated/libs.result_manager.rst", "generated/libs.result_manager.Result_manager.rst", "generated/libs.result_tools.rst", "generated/libs.result_tools.binarise.rst", "generated/libs.result_tools.build_aligned_pax_flight_df.rst", "generated/libs.result_tools.build_single_iteration_df.rst", "generated/libs.result_tools.clone_pax.rst", "generated/libs.result_tools.compute_derived_metrics_hist_sim.rst", "generated/libs.result_tools.compute_derived_metrics_historical.rst", "generated/libs.result_tools.compute_derived_metrics_pax_generic.rst", "generated/libs.result_tools.compute_derived_metrics_simulations.rst", "generated/libs.result_tools.compute_metrics_flights.rst", "generated/libs.result_tools.compute_metrics_pax.rst", "generated/libs.result_tools.find_destination_generic.rst", "generated/libs.result_tools.find_origin_generic.rst", "generated/libs.result_tools.get_historical_flights.rst", "generated/libs.result_tools.get_pax_schedules.rst", "generated/libs.result_tools.merge_hist_sim.rst", "generated/libs.result_tools.merge_pax_flights.rst", "generated/libs.result_tools.produce_hist_sim_df.rst", "generated/libs.result_tools.produce_historical_flight_pax_df.rst", "generated/libs.uow_tool_belt.rst", "generated/libs.uow_tool_belt.DTW.rst", "generated/libs.uow_tool_belt.DTW.dtw.rst", "generated/libs.uow_tool_belt.DTW.dtw_path.rst", "generated/libs.uow_tool_belt.airspace_particularities.rst", "generated/libs.uow_tool_belt.airspace_particularities.get_nas_airport.rst", "generated/libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA.rst", "generated/libs.uow_tool_belt.airspace_particularities.is_ECAC.rst", "generated/libs.uow_tool_belt.connection_tools.rst", "generated/libs.uow_tool_belt.connection_tools.EmptyConnection.rst", "generated/libs.uow_tool_belt.connection_tools.create_indexes_in_table.rst", "generated/libs.uow_tool_belt.connection_tools.do_query.rst", "generated/libs.uow_tool_belt.connection_tools.extract_ssh_parameters.rst", "generated/libs.uow_tool_belt.connection_tools.file_connection.rst", "generated/libs.uow_tool_belt.connection_tools.generic_connection.rst", "generated/libs.uow_tool_belt.connection_tools.load_data_infile.rst", "generated/libs.uow_tool_belt.connection_tools.mysql_connection.rst", "generated/libs.uow_tool_belt.connection_tools.parquet_connection.rst", "generated/libs.uow_tool_belt.connection_tools.read_cred.rst", "generated/libs.uow_tool_belt.connection_tools.read_csv.rst", "generated/libs.uow_tool_belt.connection_tools.read_data.rst", "generated/libs.uow_tool_belt.connection_tools.read_mysql.rst", "generated/libs.uow_tool_belt.connection_tools.read_parquet.rst", "generated/libs.uow_tool_belt.connection_tools.read_pickle.rst", "generated/libs.uow_tool_belt.connection_tools.run_mysql_query.rst", "generated/libs.uow_tool_belt.connection_tools.write_csv.rst", "generated/libs.uow_tool_belt.connection_tools.write_data.rst", "generated/libs.uow_tool_belt.connection_tools.write_mysql.rst", "generated/libs.uow_tool_belt.connection_tools.write_pickle.rst", "generated/libs.uow_tool_belt.general_tools.rst", "generated/libs.uow_tool_belt.general_tools.A_B.rst", "generated/libs.uow_tool_belt.general_tools.DummyFile.rst", "generated/libs.uow_tool_belt.general_tools.HiddenPrints.rst", "generated/libs.uow_tool_belt.general_tools.Paras.rst", "generated/libs.uow_tool_belt.general_tools.TwoWayDict.rst", "generated/libs.uow_tool_belt.general_tools.add_dicts.rst", "generated/libs.uow_tool_belt.general_tools.alert_print.rst", "generated/libs.uow_tool_belt.general_tools.alphabet.rst", "generated/libs.uow_tool_belt.general_tools.apply_args_and_kwargs.rst", "generated/libs.uow_tool_belt.general_tools.average_on_downsampled_interval.rst", "generated/libs.uow_tool_belt.general_tools.average_on_intervals.rst", "generated/libs.uow_tool_belt.general_tools.average_on_quantiles.rst", "generated/libs.uow_tool_belt.general_tools.bootstrap_mean_test.rst", "generated/libs.uow_tool_belt.general_tools.bootstrap_test.rst", "generated/libs.uow_tool_belt.general_tools.build_col_print_func.rst", "generated/libs.uow_tool_belt.general_tools.build_step_bivariate_function.rst", "generated/libs.uow_tool_belt.general_tools.build_step_multi_valued_function.rst", "generated/libs.uow_tool_belt.general_tools.build_triangular.rst", "generated/libs.uow_tool_belt.general_tools.center_spatial_network.rst", "generated/libs.uow_tool_belt.general_tools.clock_time.rst", "generated/libs.uow_tool_belt.general_tools.compute_percentile_with_weight.rst", "generated/libs.uow_tool_belt.general_tools.counter.rst", "generated/libs.uow_tool_belt.general_tools.create_dir.rst", "generated/libs.uow_tool_belt.general_tools.dict_depth.rst", "generated/libs.uow_tool_belt.general_tools.distance_euclidean.rst", "generated/libs.uow_tool_belt.general_tools.fit.rst", "generated/libs.uow_tool_belt.general_tools.get_first_matching_element.rst", "generated/libs.uow_tool_belt.general_tools.gini.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_intervals.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_quantiles.rst", "generated/libs.uow_tool_belt.general_tools.haversine.rst", "generated/libs.uow_tool_belt.general_tools.haversine_old.rst", "generated/libs.uow_tool_belt.general_tools.hex_to_rgb.rst", "generated/libs.uow_tool_belt.general_tools.human_format.rst", "generated/libs.uow_tool_belt.general_tools.human_format_for_ticks.rst", "generated/libs.uow_tool_belt.general_tools.intermediate_point.rst", "generated/libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inv_s_scale_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inverted_edf.rst", "generated/libs.uow_tool_belt.general_tools.keep_time.rst", "generated/libs.uow_tool_belt.general_tools.loading.rst", "generated/libs.uow_tool_belt.general_tools.logging.rst", "generated/libs.uow_tool_belt.general_tools.loop.rst", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels.rst", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick.rst", "generated/libs.uow_tool_belt.general_tools.make_nested_dict_from_df.rst", "generated/libs.uow_tool_belt.general_tools.mysql_server.rst", "generated/libs.uow_tool_belt.general_tools.parallelize.rst", "generated/libs.uow_tool_belt.general_tools.partial_corr.rst", "generated/libs.uow_tool_belt.general_tools.percentile_10.rst", "generated/libs.uow_tool_belt.general_tools.percentile_90.rst", "generated/libs.uow_tool_belt.general_tools.percentile_custom.rst", "generated/libs.uow_tool_belt.general_tools.permutation_test.rst", "generated/libs.uow_tool_belt.general_tools.permutation_test_only_diff.rst", "generated/libs.uow_tool_belt.general_tools.proportional.rst", "generated/libs.uow_tool_belt.general_tools.r_squared.rst", "generated/libs.uow_tool_belt.general_tools.read_paras.rst", "generated/libs.uow_tool_belt.general_tools.recursive_concat.rst", "generated/libs.uow_tool_belt.general_tools.recursive_minimization.rst", "generated/libs.uow_tool_belt.general_tools.remove_nan_coupled_lists.rst", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.set_interval.rst", "generated/libs.uow_tool_belt.general_tools.shift_spatial_network.rst", "generated/libs.uow_tool_belt.general_tools.show_dic.rst", "generated/libs.uow_tool_belt.general_tools.silence.rst", "generated/libs.uow_tool_belt.general_tools.simple_color_map_function.rst", "generated/libs.uow_tool_belt.general_tools.simple_colormap_object.rst", "generated/libs.uow_tool_belt.general_tools.sol_Bs.rst", "generated/libs.uow_tool_belt.general_tools.sort_lists.rst", "generated/libs.uow_tool_belt.general_tools.sort_paired_values.rst", "generated/libs.uow_tool_belt.general_tools.spread_integer.rst", "generated/libs.uow_tool_belt.general_tools.ssh_client_connection.rst", "generated/libs.uow_tool_belt.general_tools.ssh_copy.rst", "generated/libs.uow_tool_belt.general_tools.ssh_tunnel_connection.rst", "generated/libs.uow_tool_belt.general_tools.starmap_with_kwargs.rst", "generated/libs.uow_tool_belt.general_tools.strip_string.rst", "generated/libs.uow_tool_belt.general_tools.timeit.rst", "generated/libs.uow_tool_belt.general_tools.weight_avg.rst", "generated/libs.uow_tool_belt.general_tools.write_on_file.rst", "generated/libs.uow_tool_belt.general_tools.yes.rst", "generated/libs.uow_tool_belt.logging.rst", "generated/libs.uow_tool_belt.network_tools.rst", "generated/libs.uow_tool_belt.plot_tools.rst", "generated/libs.uow_tool_belt.plot_tools.bar_plot_template.rst", "generated/libs.uow_tool_belt.plot_tools.savefig.rst", "generated/libs.uow_tool_belt.trajectory_tools.rst", "generated/libs.uow_tool_belt.trajectory_tools.compute_ab.rst", "generated/libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory.rst", "generated/libs.uow_tool_belt.trajectory_tools.detect_toc_tod.rst", "generated/libs.uow_tool_belt.trajectory_tools.plot_traj.rst", "generated/mercury.rst", "generated/mercury.manual_bool_cast.rst", "generated/modules.rst", "generated/modules.Auction.rst", "generated/modules.Auction.Auction.rst", "generated/modules.Auction.module_definition.rst", "generated/modules.Auction.paras_Auction.rst", "generated/modules.CM.rst", "generated/modules.CM.CM.rst", "generated/modules.CM.CM.compute_adequate_default_parameters.rst", "generated/modules.CM.CM.get_metric.rst", "generated/modules.CM.CM.make_hotspot_decision_CM.rst", "generated/modules.CM.CM.on_finalise_CM.rst", "generated/modules.CM.CM.on_init_AOC.rst", "generated/modules.CM.CM.on_prepare_CM.rst", "generated/modules.CM.module_definition.rst", "generated/modules.CM.paras_CM.rst", "generated/modules.FAC.rst", "generated/modules.FAC.FAC_FIFO_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.build_arrival_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.update_arrival_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue.rst", "generated/modules.FAC.FAC_total_cost.rst", "generated/modules.FAC.FAC_total_cost.compute_cost_slots_total.rst", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times.rst", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs.rst", "generated/modules.FAC.FAC_total_cost.request_cost_delay_function.rst", "generated/modules.FAC.FAC_total_cost.wait_for_cost_delay_function.rst", "generated/modules.FAC.FAC_total_delay.rst", "generated/modules.FAC.FAC_total_delay.compute_total_delay_slots.rst", "generated/modules.FAC.FAC_total_delay.request_time_propagate_delay.rst", "generated/modules.FAC.FAC_total_delay.wait_for_propagation_delay_time.rst", "generated/modules.FAC.module_definition.rst", "generated/modules.FP.rst", "generated/modules.FP.FP_L1.rst", "generated/modules.FP.FP_L1.consider_flight_swap_FP1.rst", "generated/modules.FP.FP_L2.rst", "generated/modules.FP.FP_L2.consider_flight_swap_FP2.rst", "generated/modules.FP.module_definition.rst", "generated/modules.HMI_HOTSPOT.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_server.rst", "generated/modules.HMI_HOTSPOT.HMI_server.MercuryServer.rst", "generated/modules.HMI_HOTSPOT.HMI_server.main.rst", "generated/modules.HMI_HOTSPOT.client_test.rst", "generated/modules.HMI_HOTSPOT.client_test.Client.rst", "generated/modules.HMI_HOTSPOT.client_test2.rst", "generated/modules.HMI_HOTSPOT.client_test2.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi2.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_mercury.rst", "generated/modules.HMI_HOTSPOT.client_test_mercury.ClientMercury.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP.rst", "generated/modules.HMI_HOTSPOT.module_definition.rst", "generated/modules.HMI_HOTSPOT.paras_HMI_FP_SEL.rst", "generated/modules.HMI_HOTSPOT.paras_HMI_HOTSPOT.rst", "generated/modules.TA.rst", "generated/modules.TA.TA_L1.rst", "generated/modules.TA.TA_L1.consider_waiting_pax_TA1.rst", "generated/modules.TA.TA_L1.cost_index_assessment_TA1.rst", "generated/modules.TA.TA_L1.wait_for_toc_reached_message_TA1.rst", "generated/modules.TA.TA_L2.rst", "generated/modules.TA.TA_L2.consider_waiting_pax_TA2.rst", "generated/modules.TA.TA_L2.cost_index_assessment_TA2.rst", "generated/modules.TA.TA_L2.wait_for_toc_reached_message_TA2.rst", "generated/modules.TA.module_definition.rst", "generated/modules.nostromo_EAMAN.rst", "generated/modules.nostromo_EAMAN.module_definition.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.get_p.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rescale.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.DummyFile.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.NoSolution.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.clock_time.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.silence.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline.rst", "index.rst"], "titles": ["Quickstart", "About", "API", "agents", "agents.agent_base", "agents.agent_base.Agent", "agents.agent_base.Role", "agents.airline_operating_centre", "agents.airline_operating_centre.AirlineFlightPlanner", "agents.airline_operating_centre.AirlineOperatingCentre", "agents.airline_operating_centre.AirlinePaxHandler", "agents.airline_operating_centre.DynamicCostIndexComputer", "agents.airline_operating_centre.FlightPlanSelector", "agents.airline_operating_centre.PassengerReallocation", "agents.airline_operating_centre.TurnaroundOperations", "agents.aman", "agents.aman.AMAN", "agents.aman.ArrivalCancellationHandler", "agents.aman.ArrivalQueuePlannedUpdater", "agents.aman.ArrivalTacticalProvider", "agents.aman.FlightInAMANHandler", "agents.aman.SlotAssigner", "agents.aman.StrategicArrivalQueueBuilder", "agents.commodities", "agents.commodities.aircraft", "agents.commodities.aircraft.Aircraft", "agents.commodities.alliance", "agents.commodities.alliance.Alliance", "agents.commodities.arrival_slot", "agents.commodities.arrival_slot.ArrivalSlot", "agents.commodities.atfm_delay", "agents.commodities.atfm_delay.ATFMDelay", "agents.commodities.atfm_regulation", "agents.commodities.atfm_regulation.ATFMBooker", "agents.commodities.atfm_regulation.ATFMRegulation", "agents.commodities.central_registry", "agents.commodities.central_registry.CentralRegistry", "agents.commodities.debug_flights", "agents.commodities.flight_plan", "agents.commodities.flight_plan.FlightPlan", "agents.commodities.flight_plan.FlightPlanPoint", "agents.commodities.flight_plan.build_proj", "agents.commodities.pax_itinerary_group", "agents.commodities.pax_itinerary_group.PaxItineraryGroup", "agents.commodities.pax_itinerary_group.func", "agents.commodities.route", "agents.commodities.route.Route", "agents.commodities.route.RoutePoint", "agents.commodities.slot_queue", "agents.commodities.slot_queue.CapacityPeriod", "agents.commodities.slot_queue.Slot", "agents.commodities.slot_queue.SlotQueue", "agents.commodities.slot_queue_eaman", "agents.commodities.slot_queue_eaman.EAMANSlot", "agents.commodities.slot_queue_eaman.EAMANSlotQueue", "agents.dman", "agents.dman.DMAN", "agents.dman.DepartureCancellationHandler", "agents.dman.DepartureQueueUpdater", "agents.dman.DepartureSlotProvider", "agents.dman.StrategicDepartureQueueBuilder", "agents.eaman", "agents.eaman.ArrivalPlannerProvider", "agents.eaman.ArrivalQueuePlannedUpdaterE", "agents.eaman.EAMAN", "agents.eaman.FlightInAMANHandlerE", "agents.flight", "agents.flight.AircraftDepartingHandler", "agents.flight.DepartureSlotRequester", "agents.flight.FPInfoProvider", "agents.flight.Flight", "agents.flight.FlightArrivalInformationProvider", "agents.flight.FlightPlanConstraintUpdater", "agents.flight.FlightPlanUpdater", "agents.flight.GroundArrivalHandler", "agents.flight.OperateTrajectory", "agents.flight.PotentialDelayRecoveryProvider", "agents.ground_airport", "agents.ground_airport.GroundAirport", "agents.ground_airport.GroundHandler", "agents.ground_airport.ProvideConnectingTime", "agents.ground_airport.TaxiInProvider", "agents.ground_airport.TaxiOutEstimator", "agents.ground_airport.TaxiOutProvider", "agents.network_manager", "agents.network_manager.HotspotManager", "agents.network_manager.NetworkManager", "agents.network_manager.NetworkManagerAcceptAndDisseminateFP", "agents.network_manager.NetworkManagerCancelFP", "agents.network_manager.NetworkManagerFlightPlanProcessing", "agents.radar", "agents.radar.DisseminateCancellationFlightPlan", "agents.radar.DisseminateFlightPlan", "agents.radar.DisseminateFlightPositionUpdate", "agents.radar.Radar", "agents.radar.RadarAugmentFlightPlan", "agents.seed", "core", "core.delivery_system", "core.delivery_system.Letter", "core.delivery_system.LetterBox", "core.delivery_system.Postman", "core.module_management", "core.module_management.check_incompatibilities", "core.module_management.find_actual_module_name", "core.module_management.get_all_modules", "core.module_management.get_module_paras", "core.module_management.load_mercury_module", "core.parametriser", "core.parametriser.Parametriser", "core.parametriser.ParametriserCapacity", "core.parametriser.ParametriserSelector", "core.parametriser.ParametriserStandard", "core.read_config", "core.read_config.add_output_process", "core.read_config.find_paras_categories", "core.read_config.flatten_paras_dict", "core.read_config.read_mercury_config", "core.read_config.read_scenario_config", "core.read_config.read_toml", "core.read_config.transform_conf_paras", "core.read_config.unflatten_profiles", "core.read_config.unfold_paras_dict", "core.read_config.update_scenario_paras_based_on_case_study", "core.results_aggregator", "core.results_aggregator.ResultAggregatorAdvanced", "core.results_aggregator.ResultsAggregator", "core.results_aggregator.ResultsAggregatorSelector", "core.results_aggregator.ResultsAggregatorSimple", "core.results_aggregator.ResultsAggregatorSimpleReduced", "core.scenario_loader", "core.scenario_loader.ScenarioLoader", "core.scenario_loader.ScenarioLoaderSelector", "core.scenario_loader.ScenarioLoaderSimple", "core.scenario_loader.ScenarioLoaderStandard", "core.scenario_loader.ScenarioLoaderStandardLocal", "core.simulation_manager", "core.simulation_manager.Mercury", "core.simulation_manager.build_command", "core.simulation_manager.create_paras_file_from_dict", "core.world_builder", "core.world_builder.World", "core.world_builder.trace", "dashboard", "dashboard.mercury_gui", "libs", "libs.airspace_particularities", "libs.airspace_particularities.get_nas_airport", "libs.airspace_particularities.is_ATFM_AREA", "libs.airspace_particularities.is_ECAC", "libs.db_access_functions", "libs.db_access_functions.DataAccessBADA4", "libs.db_access_functions.DataAccessPerformance", "libs.db_access_functions.add_crco_to_flights_in_db", "libs.db_access_functions.get_information_routes_o_d_generated", "libs.db_access_functions.read_ATFM_at_airports", "libs.db_access_functions.read_ATFM_at_airports_days", "libs.db_access_functions.read_ATFM_at_airports_manual", "libs.db_access_functions.read_ATFM_at_airports_old", "libs.db_access_functions.read_MCT", "libs.db_access_functions.read_airlines_data", "libs.db_access_functions.read_airport_coords", "libs.db_access_functions.read_airports_curfew_data", "libs.db_access_functions.read_airports_data", "libs.db_access_functions.read_airports_modif_data", "libs.db_access_functions.read_airspace_static", "libs.db_access_functions.read_all_regulation_days", "libs.db_access_functions.read_compensation_data", "libs.db_access_functions.read_coord_trajectory_route", "libs.db_access_functions.read_coord_trajectory_route_based_on_id", "libs.db_access_functions.read_countries_ATFM_NAS", "libs.db_access_functions.read_crco", "libs.db_access_functions.read_crco_charges", "libs.db_access_functions.read_dict_ac_bada_code_ac_model", "libs.db_access_functions.read_dict_ac_type_wtc", "libs.db_access_functions.read_dict_fp_pool_ids", "libs.db_access_functions.read_doc_data", "libs.db_access_functions.read_eamans_data", "libs.db_access_functions.read_estimated_avg_costs_curfews", "libs.db_access_functions.read_extra_cruise_if_dci", "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco", "libs.db_access_functions.read_flight_schedules", "libs.db_access_functions.read_flight_schedules2", "libs.db_access_functions.read_flight_set", "libs.db_access_functions.read_flight_uncertainty", "libs.db_access_functions.read_fp_pool", "libs.db_access_functions.read_fp_pool_missing", "libs.db_access_functions.read_fp_routes_without_crco", "libs.db_access_functions.read_iedf_atfm", "libs.db_access_functions.read_iedf_wind_dict", "libs.db_access_functions.read_itineraries_data", "libs.db_access_functions.read_nas_route_pool", "libs.db_access_functions.read_nas_route_pool_static_o_d", "libs.db_access_functions.read_non_pax_cost_data", "libs.db_access_functions.read_non_pax_cost_fit_data", "libs.db_access_functions.read_nonpax_cost_curfews", "libs.db_access_functions.read_od_in_historic_od_computed_pool", "libs.db_access_functions.read_orig_destination_via_intermediate_shortest", "libs.db_access_functions.read_passenger_flows", "libs.db_access_functions.read_passenger_options", "libs.db_access_functions.read_perc_min_perc_max_regulations_days", "libs.db_access_functions.read_prob_atfm", "libs.db_access_functions.read_regulation_days_at_an_airport", "libs.db_access_functions.read_route_pool", "libs.db_access_functions.read_route_pool_o_d_generated", "libs.db_access_functions.read_route_pool_static", "libs.db_access_functions.read_scenario", "libs.db_access_functions.read_scenario_paras", "libs.db_access_functions.read_schedules", "libs.db_access_functions.read_seed", "libs.db_access_functions.read_soft_cost_date", "libs.db_access_functions.read_trajectories", "libs.db_access_functions.read_trajectories_dataframe", "libs.db_access_functions.read_trajectories_ids", "libs.db_access_functions.read_trajectories_missing", "libs.db_access_functions.read_trajectories_missing_in_interval", "libs.db_access_functions.read_trajectories_options", "libs.db_access_functions.read_trajectories_pool", "libs.db_access_functions.read_turnaround_data", "libs.db_access_functions.save_trajectories_pool", "libs.db_access_functions.save_trajectories_segments", "libs.input_manager", "libs.input_manager.Input_manager", "libs.input_manager.filter_df", "libs.input_manager.filter_sql", "libs.input_manager.read_data_from_dict", "libs.input_manager.write_toml", "libs.other_tools", "libs.other_tools.FlightDummy", "libs.other_tools.SlotDummy", "libs.other_tools.allocation_from_flights", "libs.other_tools.clone_pax", "libs.other_tools.compatible_slots", "libs.other_tools.compute_FPFS_allocation", "libs.other_tools.distance_func", "libs.other_tools.flight_str", "libs.performance_trajectory", "libs.performance_trajectory.ac_performances", "libs.performance_trajectory.ac_performances.AircraftPerformance", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP", "libs.performance_trajectory.standard_atmosphere", "libs.performance_trajectory.standard_atmosphere.density", "libs.performance_trajectory.standard_atmosphere.pressure", "libs.performance_trajectory.standard_atmosphere.sound_speed", "libs.performance_trajectory.standard_atmosphere.temperature", "libs.performance_trajectory.trajectory", "libs.performance_trajectory.trajectory.Trajectory", "libs.performance_trajectory.trajectory.TrajectoryComponent", "libs.performance_trajectory.trajectory.TrajectorySegment", "libs.performance_trajectory.unit_conversions", "libs.performance_trajectory.unit_conversions.cas2tas", "libs.performance_trajectory.unit_conversions.km2kt", "libs.performance_trajectory.unit_conversions.km2m", "libs.performance_trajectory.unit_conversions.kt2m", "libs.performance_trajectory.unit_conversions.m2kt", "libs.result_manager", "libs.result_manager.Result_manager", "libs.result_tools", "libs.result_tools.binarise", "libs.result_tools.build_aligned_pax_flight_df", "libs.result_tools.build_single_iteration_df", "libs.result_tools.clone_pax", "libs.result_tools.compute_derived_metrics_hist_sim", "libs.result_tools.compute_derived_metrics_historical", "libs.result_tools.compute_derived_metrics_pax_generic", "libs.result_tools.compute_derived_metrics_simulations", "libs.result_tools.compute_metrics_flights", "libs.result_tools.compute_metrics_pax", "libs.result_tools.find_destination_generic", "libs.result_tools.find_origin_generic", "libs.result_tools.get_historical_flights", "libs.result_tools.get_pax_schedules", "libs.result_tools.merge_hist_sim", "libs.result_tools.merge_pax_flights", "libs.result_tools.produce_hist_sim_df", "libs.result_tools.produce_historical_flight_pax_df", "libs.uow_tool_belt", "libs.uow_tool_belt.DTW", "libs.uow_tool_belt.DTW.dtw", "libs.uow_tool_belt.DTW.dtw_path", "libs.uow_tool_belt.airspace_particularities", "libs.uow_tool_belt.airspace_particularities.get_nas_airport", "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA", "libs.uow_tool_belt.airspace_particularities.is_ECAC", "libs.uow_tool_belt.connection_tools", "libs.uow_tool_belt.connection_tools.EmptyConnection", "libs.uow_tool_belt.connection_tools.create_indexes_in_table", "libs.uow_tool_belt.connection_tools.do_query", "libs.uow_tool_belt.connection_tools.extract_ssh_parameters", "libs.uow_tool_belt.connection_tools.file_connection", "libs.uow_tool_belt.connection_tools.generic_connection", "libs.uow_tool_belt.connection_tools.load_data_infile", "libs.uow_tool_belt.connection_tools.mysql_connection", "libs.uow_tool_belt.connection_tools.parquet_connection", "libs.uow_tool_belt.connection_tools.read_cred", "libs.uow_tool_belt.connection_tools.read_csv", "libs.uow_tool_belt.connection_tools.read_data", "libs.uow_tool_belt.connection_tools.read_mysql", "libs.uow_tool_belt.connection_tools.read_parquet", "libs.uow_tool_belt.connection_tools.read_pickle", "libs.uow_tool_belt.connection_tools.run_mysql_query", "libs.uow_tool_belt.connection_tools.write_csv", "libs.uow_tool_belt.connection_tools.write_data", "libs.uow_tool_belt.connection_tools.write_mysql", "libs.uow_tool_belt.connection_tools.write_pickle", "libs.uow_tool_belt.general_tools", "libs.uow_tool_belt.general_tools.A_B", "libs.uow_tool_belt.general_tools.DummyFile", "libs.uow_tool_belt.general_tools.HiddenPrints", "libs.uow_tool_belt.general_tools.Paras", "libs.uow_tool_belt.general_tools.TwoWayDict", "libs.uow_tool_belt.general_tools.add_dicts", "libs.uow_tool_belt.general_tools.alert_print", "libs.uow_tool_belt.general_tools.alphabet", "libs.uow_tool_belt.general_tools.apply_args_and_kwargs", "libs.uow_tool_belt.general_tools.average_on_downsampled_interval", "libs.uow_tool_belt.general_tools.average_on_intervals", "libs.uow_tool_belt.general_tools.average_on_quantiles", "libs.uow_tool_belt.general_tools.bootstrap_mean_test", "libs.uow_tool_belt.general_tools.bootstrap_test", "libs.uow_tool_belt.general_tools.build_col_print_func", "libs.uow_tool_belt.general_tools.build_step_bivariate_function", "libs.uow_tool_belt.general_tools.build_step_multi_valued_function", "libs.uow_tool_belt.general_tools.build_triangular", "libs.uow_tool_belt.general_tools.center_spatial_network", "libs.uow_tool_belt.general_tools.clock_time", "libs.uow_tool_belt.general_tools.compute_percentile_with_weight", "libs.uow_tool_belt.general_tools.counter", "libs.uow_tool_belt.general_tools.create_dir", "libs.uow_tool_belt.general_tools.dict_depth", "libs.uow_tool_belt.general_tools.distance_euclidean", "libs.uow_tool_belt.general_tools.fit", "libs.uow_tool_belt.general_tools.get_first_matching_element", "libs.uow_tool_belt.general_tools.gini", "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval", "libs.uow_tool_belt.general_tools.groupby_on_intervals", "libs.uow_tool_belt.general_tools.groupby_on_quantiles", "libs.uow_tool_belt.general_tools.haversine", "libs.uow_tool_belt.general_tools.haversine_old", "libs.uow_tool_belt.general_tools.hex_to_rgb", "libs.uow_tool_belt.general_tools.human_format", "libs.uow_tool_belt.general_tools.human_format_for_ticks", "libs.uow_tool_belt.general_tools.intermediate_point", "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm", "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm", "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm", "libs.uow_tool_belt.general_tools.inverted_edf", "libs.uow_tool_belt.general_tools.keep_time", "libs.uow_tool_belt.general_tools.loading", "libs.uow_tool_belt.general_tools.logging", "libs.uow_tool_belt.general_tools.loop", "libs.uow_tool_belt.general_tools.make_df_with_3_levels", "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick", "libs.uow_tool_belt.general_tools.make_nested_dict_from_df", "libs.uow_tool_belt.general_tools.mysql_server", "libs.uow_tool_belt.general_tools.parallelize", "libs.uow_tool_belt.general_tools.partial_corr", "libs.uow_tool_belt.general_tools.percentile_10", "libs.uow_tool_belt.general_tools.percentile_90", "libs.uow_tool_belt.general_tools.percentile_custom", "libs.uow_tool_belt.general_tools.permutation_test", "libs.uow_tool_belt.general_tools.permutation_test_only_diff", "libs.uow_tool_belt.general_tools.proportional", "libs.uow_tool_belt.general_tools.r_squared", "libs.uow_tool_belt.general_tools.read_paras", "libs.uow_tool_belt.general_tools.recursive_concat", "libs.uow_tool_belt.general_tools.recursive_minimization", "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists", "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm", "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm", "libs.uow_tool_belt.general_tools.set_interval", "libs.uow_tool_belt.general_tools.shift_spatial_network", "libs.uow_tool_belt.general_tools.show_dic", "libs.uow_tool_belt.general_tools.silence", "libs.uow_tool_belt.general_tools.simple_color_map_function", "libs.uow_tool_belt.general_tools.simple_colormap_object", "libs.uow_tool_belt.general_tools.sol_Bs", "libs.uow_tool_belt.general_tools.sort_lists", "libs.uow_tool_belt.general_tools.sort_paired_values", "libs.uow_tool_belt.general_tools.spread_integer", "libs.uow_tool_belt.general_tools.ssh_client_connection", "libs.uow_tool_belt.general_tools.ssh_copy", "libs.uow_tool_belt.general_tools.ssh_tunnel_connection", "libs.uow_tool_belt.general_tools.starmap_with_kwargs", "libs.uow_tool_belt.general_tools.strip_string", "libs.uow_tool_belt.general_tools.timeit", "libs.uow_tool_belt.general_tools.weight_avg", "libs.uow_tool_belt.general_tools.write_on_file", "libs.uow_tool_belt.general_tools.yes", "libs.uow_tool_belt.logging", "libs.uow_tool_belt.network_tools", "libs.uow_tool_belt.plot_tools", "libs.uow_tool_belt.plot_tools.bar_plot_template", "libs.uow_tool_belt.plot_tools.savefig", "libs.uow_tool_belt.trajectory_tools", "libs.uow_tool_belt.trajectory_tools.compute_ab", "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory", "libs.uow_tool_belt.trajectory_tools.detect_toc_tod", "libs.uow_tool_belt.trajectory_tools.plot_traj", "mercury", "mercury.manual_bool_cast", "modules", "modules.Auction", "modules.Auction.Auction", "modules.Auction.module_definition", "modules.Auction.paras_Auction", "modules.CM", "modules.CM.CM", "modules.CM.CM.compute_adequate_default_parameters", "modules.CM.CM.get_metric", "modules.CM.CM.make_hotspot_decision_CM", "modules.CM.CM.on_finalise_CM", "modules.CM.CM.on_init_AOC", "modules.CM.CM.on_prepare_CM", "modules.CM.module_definition", "modules.CM.paras_CM", "modules.FAC", "modules.FAC.FAC_FIFO_queue", "modules.FAC.FAC_FIFO_queue.build_arrival_queue", "modules.FAC.FAC_FIFO_queue.update_arrival_queue", "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue", "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time", "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue", "modules.FAC.FAC_total_cost", "modules.FAC.FAC_total_cost.compute_cost_slots_total", "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times", "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs", "modules.FAC.FAC_total_cost.request_cost_delay_function", "modules.FAC.FAC_total_cost.wait_for_cost_delay_function", "modules.FAC.FAC_total_delay", "modules.FAC.FAC_total_delay.compute_total_delay_slots", "modules.FAC.FAC_total_delay.request_time_propagate_delay", "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time", "modules.FAC.module_definition", "modules.FP", "modules.FP.FP_L1", "modules.FP.FP_L1.consider_flight_swap_FP1", "modules.FP.FP_L2", "modules.FP.FP_L2.consider_flight_swap_FP2", "modules.FP.module_definition", "modules.HMI_HOTSPOT", "modules.HMI_HOTSPOT.HMI_FP_SEL", "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer", "modules.HMI_HOTSPOT.HMI_HOTSPOT", "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision", "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient", "modules.HMI_HOTSPOT.HMI_server", "modules.HMI_HOTSPOT.HMI_server.MercuryServer", "modules.HMI_HOTSPOT.HMI_server.main", "modules.HMI_HOTSPOT.client_test", "modules.HMI_HOTSPOT.client_test.Client", "modules.HMI_HOTSPOT.client_test2", "modules.HMI_HOTSPOT.client_test2.ClientHMI", "modules.HMI_HOTSPOT.client_test_hmi", "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI", "modules.HMI_HOTSPOT.client_test_hmi2", "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI", "modules.HMI_HOTSPOT.client_test_mercury", "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP", "modules.HMI_HOTSPOT.module_definition", "modules.HMI_HOTSPOT.paras_HMI_FP_SEL", "modules.HMI_HOTSPOT.paras_HMI_HOTSPOT", "modules.TA", "modules.TA.TA_L1", "modules.TA.TA_L1.consider_waiting_pax_TA1", "modules.TA.TA_L1.cost_index_assessment_TA1", "modules.TA.TA_L1.wait_for_toc_reached_message_TA1", "modules.TA.TA_L2", "modules.TA.TA_L2.consider_waiting_pax_TA2", "modules.TA.TA_L2.cost_index_assessment_TA2", "modules.TA.TA_L2.wait_for_toc_reached_message_TA2", "modules.TA.module_definition", "modules.nostromo_EAMAN", "modules.nostromo_EAMAN.module_definition", "modules.nostromo_EAMAN.nostromo_EAMAN", "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices", "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation", "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen", "modules.nostromo_EAMAN.nostromo_EAMAN.get_p", "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon", "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing", "modules.nostromo_EAMAN.nostromo_EAMAN.on_init", "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent", "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced", "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline", "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages", "modules.nostromo_EAMAN.nostromo_EAMAN.rescale", "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function", "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request", "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information", "modules.nostromo_EAMAN.optimiser_advanced", "modules.nostromo_EAMAN.optimiser_advanced.DummyFile", "modules.nostromo_EAMAN.optimiser_advanced.NoSolution", "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable", "modules.nostromo_EAMAN.optimiser_advanced.clock_time", "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element", "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced", "modules.nostromo_EAMAN.optimiser_advanced.silence", "modules.nostromo_EAMAN.optimiser_baseline", "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline", "modules.nostromo_EAMAN.optimiser_baseline_fast", "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline", "Mercury\u2019s documentation"], "terms": {"i": [0, 1, 8, 9, 10, 11, 12, 13, 14, 18, 19, 22, 25, 27, 33, 34, 36, 39, 41, 43, 49, 51, 54, 56, 58, 59, 60, 62, 63, 68, 70, 71, 73, 74, 76, 78, 79, 85, 86, 89, 92, 94, 95, 96, 99, 101, 104, 112, 133, 134, 135, 137, 142, 151, 152, 238, 239, 240, 241, 245, 287, 291, 294, 295, 298, 299, 300, 302, 305, 311, 312, 320, 321, 329, 333, 334, 350, 351, 356, 358, 362, 377, 382, 392, 415, 485, 505, 531, 533, 540], "love": [], "hola": [], "api": 540, "index": [1, 9, 11, 49, 229, 281, 288, 305, 333, 540], "modul": [1, 3, 5, 9, 12, 16, 23, 56, 62, 64, 70, 71, 78, 86, 94, 97, 102, 104, 106, 107, 143, 145, 236, 278, 307, 540], "search": 540, "page": 540, "core": [], "ar": [8, 9, 10, 13, 25, 27, 33, 36, 39, 41, 49, 56, 67, 71, 72, 91, 93, 99, 101, 102, 106, 115, 137, 151, 152, 232, 238, 239, 240, 241, 287, 294, 299, 307, 311, 312, 321, 333, 343, 362, 370, 485], "add": [9, 39, 72, 81, 92, 101, 102, 238, 239, 240, 241, 313, 534], "ons": 102, "model": [0, 5, 6, 102, 137, 415], "chang": [8, 11, 34, 71, 73, 76, 102, 238, 239, 240, 241, 311], "its": [0, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 36, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 102, 107, 115, 142, 438], "behaviour": [78, 102], "thei": [8, 10, 36, 39, 41, 49, 93, 94, 102, 137], "declar": [102, 350], "name": [0, 39, 40, 41, 102, 104, 106, 107, 115, 137, 185, 228, 298, 299, 304, 305, 330, 475, 477, 479, 481, 483], "should": [8, 9, 13, 14, 34, 36, 39, 49, 86, 92, 102, 104, 106, 137, 298, 299, 304, 307, 311, 333, 345, 350, 534], "contain": [39, 102, 238, 239, 240, 241, 358], "short": [8, 102], "descript": [8, 10, 11, 13, 14, 17, 18, 19, 20, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93, 95, 102], "file": [0, 9, 56, 70, 78, 94, 102, 104, 106, 119, 133, 134, 135, 137, 291, 292, 294, 295, 298, 300, 304, 307, 350, 366, 392, 540], "modifi": [0, 11, 34, 73, 94, 102, 112], "method": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 31, 33, 34, 36, 39, 40, 41, 43, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 109, 110, 111, 112, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 142, 151, 152, 222, 228, 229, 238, 239, 240, 241, 248, 249, 250, 258, 287, 309, 310, 311, 312, 313, 401, 464, 465, 467, 468, 470, 472, 475, 477, 479, 481, 483, 485, 486, 529], "function": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 38, 42, 49, 51, 54, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 102, 106, 113, 136, 140, 142, 146, 150, 221, 227, 238, 239, 240, 241, 242, 251, 259, 279, 280, 282, 286, 300, 302, 307, 311, 327, 333, 334, 342, 347, 348, 357, 372, 376, 377, 393, 396, 401, 409, 419, 425, 431, 437, 439, 443, 452, 471, 491, 495, 502, 528, 532, 533, 536, 538], "list_modul": 103, "module_nam": [104, 106, 107], "becaus": [41, 104, 238, 239, 240, 241, 392, 414], "can": [0, 1, 8, 9, 11, 25, 39, 56, 71, 73, 76, 92, 94, 104, 106, 107, 115, 136, 137, 238, 239, 240, 241, 291, 294, 295, 298, 299, 333, 350, 351, 401, 414, 540], "have": [0, 8, 9, 10, 13, 39, 51, 54, 56, 71, 73, 81, 101, 104, 115, 238, 239, 240, 241, 280, 298, 304, 320, 333, 350, 363, 414, 505, 534], "differ": [8, 12, 39, 78, 96, 104, 115, 238, 239, 240, 241, 320, 321, 358, 362, 363, 509], "flavour": [104, 106, 107], "doe": [12, 27, 39, 51, 54, 79, 99, 104, 141, 238, 239, 240, 241, 287, 311, 312, 414, 485], "alwai": [11, 104, 137, 415], "match": [104, 137, 280, 281, 299, 305, 334, 533, 534], "definin": 104, "For": [8, 9, 104, 112, 136, 166, 202, 238, 239, 240, 241], "instanc": [0, 8, 104, 137, 142, 238, 239, 240, 241], "fp": [8, 9, 12, 68, 69, 73, 86, 89, 91, 92, 94, 95, 104, 106, 107, 185], "defin": [50, 53, 104, 106, 115, 238, 239, 240, 241, 304], "two": [9, 78, 104, 280, 320, 321, 339, 340, 343, 350, 362, 363, 376], "l1": [104, 106, 107], "l2": 104, "mai": 104, "chosen": 104, "from": [0, 5, 6, 10, 11, 12, 13, 18, 20, 25, 27, 36, 40, 49, 56, 63, 65, 69, 76, 83, 86, 99, 104, 106, 116, 134, 135, 185, 238, 239, 240, 241, 287, 299, 304, 311, 312, 321, 335, 348, 350, 362, 415, 485], "like": [27, 99, 104, 287, 300, 311, 312, 358, 485], "thi": [0, 8, 9, 10, 12, 13, 14, 27, 33, 34, 36, 39, 43, 49, 51, 54, 56, 59, 70, 71, 72, 73, 74, 78, 86, 89, 94, 95, 99, 101, 104, 106, 115, 116, 133, 134, 135, 137, 141, 166, 202, 232, 238, 239, 240, 241, 287, 292, 298, 300, 302, 307, 311, 312, 321, 350, 377, 382, 392, 401, 414, 415, 485, 505, 540], "In": [0, 8, 27, 76, 81, 99, 101, 104, 151, 152, 238, 239, 240, 241, 287, 311, 312, 320, 485], "case": [0, 8, 12, 14, 27, 49, 73, 89, 99, 104, 137, 238, 239, 240, 241, 287, 311, 312, 350, 351, 363, 485], "correspond": [8, 27, 86, 99, 104, 238, 239, 240, 241, 287, 291, 294, 295, 311, 312, 485], "fp_l1": 104, "py": [0, 104, 133, 137, 291, 294, 295], "note": [0, 8, 9, 10, 13, 14, 22, 36, 39, 49, 51, 54, 71, 73, 81, 86, 104, 116, 137, 238, 239, 240, 241, 298, 311, 321, 333, 345, 365, 382], "ha": [0, 1, 12, 13, 14, 17, 20, 27, 57, 65, 73, 74, 76, 86, 91, 93, 99, 104, 287, 311, 312, 334, 415, 485, 533], "specifi": [27, 49, 86, 99, 104, 134, 135, 287, 298, 311, 312, 339, 340, 485], "string": [104, 106, 107, 291, 294, 295, 298, 299, 304, 305, 311, 350, 402], "form": [104, 106, 107, 135], "name_bas": 104, "base": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 31, 33, 34, 36, 39, 40, 41, 43, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 104, 109, 110, 111, 112, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 151, 152, 222, 228, 229, 238, 239, 240, 241, 248, 249, 250, 258, 287, 298, 299, 305, 309, 310, 311, 312, 464, 465, 467, 468, 470, 472, 475, 477, 479, 481, 483, 485, 486, 529], "e": [8, 9, 12, 18, 27, 41, 63, 70, 71, 73, 74, 78, 91, 92, 94, 95, 96, 99, 104, 238, 239, 240, 241, 287, 302, 311, 312, 357, 485, 531], "cm": [104, 106, 107, 325], "name_fil": [104, 389], "which": [5, 6, 8, 9, 12, 27, 39, 60, 71, 72, 85, 94, 104, 115, 151, 152, 238, 239, 240, 241, 304, 311, 350, 351], "definit": [8, 104], "li": [104, 372], "path_modul": [106, 107], "none": [5, 8, 9, 13, 16, 25, 27, 29, 31, 34, 36, 39, 40, 43, 46, 49, 50, 51, 53, 54, 56, 64, 78, 85, 86, 94, 96, 99, 101, 106, 107, 128, 129, 131, 133, 134, 135, 137, 141, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 173, 176, 177, 178, 179, 184, 188, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 214, 215, 216, 218, 222, 228, 229, 239, 240, 241, 250, 258, 262, 272, 273, 277, 280, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 323, 324, 327, 328, 333, 334, 335, 349, 352, 354, 356, 357, 366, 372, 382, 388, 389, 400, 420, 485, 509, 532, 533, 534, 537, 539], "us": [1, 8, 9, 11, 12, 13, 22, 25, 33, 36, 39, 41, 43, 50, 53, 56, 60, 73, 74, 76, 85, 89, 96, 101, 106, 107, 116, 133, 134, 135, 137, 238, 239, 240, 241, 243, 244, 245, 246, 252, 299, 302, 305, 307, 311, 321, 333, 348, 350, 362, 363, 377, 382, 401, 414, 540], "get": [0, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 25, 27, 33, 49, 51, 54, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 95, 99, 106, 238, 239, 240, 241, 287, 299, 304, 311, 312, 485], "all": [0, 1, 5, 6, 8, 9, 10, 27, 36, 40, 86, 99, 106, 112, 115, 133, 134, 135, 137, 141, 166, 202, 238, 239, 240, 241, 287, 294, 307, 311, 312, 485, 534], "valu": [9, 27, 92, 96, 99, 106, 115, 137, 238, 239, 240, 241, 280, 287, 298, 299, 311, 312, 313, 321, 333, 341, 343, 348, 365, 372, 379, 485], "given": [8, 9, 10, 11, 12, 27, 71, 72, 73, 76, 79, 96, 99, 106, 135, 166, 202, 238, 239, 240, 241, 245, 252, 280, 281, 287, 299, 305, 311, 312, 321, 334, 345, 346, 356, 382, 485, 505, 533], "toml": [106, 117], "format": [106, 116, 134, 298, 300, 342], "under": [0, 1, 56, 106], "para": [5, 16, 64, 106, 115, 116, 134, 141, 352], "flag": 106, "posix": [106, 107], "path": [106, 107, 137, 226, 297, 301, 303, 306, 350], "without": [9, 36, 39, 73, 106, 107, 414], "see": [12, 49, 106, 107, 137], "find_actual_module_nam": [106, 107], "more": [8, 11, 106, 107, 238, 239, 240, 241, 299, 311, 335], "detail": [106, 107, 238, 239, 240, 241], "module_para": 106, "dict": [27, 78, 99, 106, 115, 137, 287, 311, 312, 485], "kei": [9, 27, 78, 99, 106, 115, 137, 225, 287, 298, 299, 304, 305, 311, 312, 349, 485], "warn": [8, 10, 106, 115], "take": [9, 12, 59, 75, 79, 92, 106, 280, 311], "first": [9, 10, 11, 18, 27, 39, 58, 63, 99, 106, 115, 134, 135, 287, 311, 312, 333, 334, 485, 533], "start": [0, 68, 106, 238, 239, 240, 241, 329], "paras_": 106, "teh": [], "todo": [9, 39, 50, 51, 53, 54, 106, 137, 239, 240, 241, 305, 321, 350, 534], "fix": [8, 19, 96, 106, 137], "load": [5, 9, 16, 56, 64, 70, 78, 86, 94, 107, 133, 134, 135], "mercuri": [1, 5, 6, 107], "cred": 107, "attribut": [5, 9, 16, 25, 33, 56, 64, 70, 78, 86, 94, 101, 107, 134, 135, 141, 238, 239, 240, 241, 248, 249, 250, 299, 311, 414], "__getattribute__": 107, "attribute_nam": 107, "mercury_conf": [114, 120, 121], "paras_dict": [115, 139], "invert": [115, 348], "dictionari": [9, 27, 92, 99, 115, 116, 122, 151, 152, 225, 238, 239, 240, 241, 287, 298, 304, 311, 312, 485, 531], "allow": [11, 115, 238, 239, 240, 241, 300], "find": [115, 372], "categori": [79, 115], "particular": 115, "live": [8, 115], "thu": [19, 115], "henc": 115, "you": [0, 8, 49, 115, 350, 363, 540], "know": [49, 115], "do": [9, 11, 12, 21, 36, 51, 54, 67, 74, 79, 94, 115, 238, 239, 240, 241, 299, 302, 305, 377], "cat_dict": 115, "value_para": 115, "value_nam": 115, "also": [1, 11, 39, 71, 86, 94, 115], "easili": 115, "look": [0, 115], "assum": [8, 9, 10, 36, 39, 51, 54, 73, 101, 112, 115, 232, 298, 370, 371, 415], "THAT": [11, 101, 115], "A": [11, 39, 40, 62, 69, 72, 115, 357], "across": [94, 115], "level": [9, 11, 115, 116, 136, 238, 239, 240, 241, 254, 255, 256, 311, 352], "second": [9, 115, 134, 135, 311], "paras_unflatten": 116, "convert": [116, 253, 254, 255, 256], "paramet": [0, 8, 9, 39, 73, 104, 106, 107, 115, 116, 136, 137, 238, 239, 240, 241, 243, 244, 245, 246, 252, 253, 254, 255, 256, 294, 298, 299, 304, 305, 311, 325, 333, 346, 348, 357, 365, 366], "airports__sig_ct": 116, "0": [8, 11, 31, 39, 40, 41, 49, 54, 71, 78, 85, 112, 116, 183, 186, 198, 208, 214, 215, 238, 239, 240, 241, 248, 319, 320, 321, 323, 324, 325, 326, 329, 331, 333, 334, 338, 352, 356, 362, 363, 368, 370, 371, 373, 376, 377, 384, 397, 398, 475, 477, 479, 481, 483, 504, 505, 509, 533], "10": [0, 116, 238, 239, 240, 241, 317, 336, 352, 398, 505], "work": [116, 304, 372, 540], "onli": [8, 9, 11, 12, 13, 14, 22, 36, 39, 49, 73, 86, 116, 238, 239, 240, 241, 302, 304, 307, 363], "one": [8, 9, 11, 13, 39, 51, 54, 76, 86, 116, 238, 239, 240, 241, 280, 311, 321, 382, 415], "config_fil": 117, "config": 117, "mercury_config": 117, "return_paras_format": 117, "true": [5, 8, 10, 11, 16, 51, 54, 64, 73, 76, 117, 162, 185, 238, 239, 240, 241, 269, 280, 301, 303, 306, 320, 321, 322, 333, 342, 350, 362, 363, 375, 535], "case_study_id": 118, "scenario_id": [118, 181, 182, 198, 199, 209, 216], "input_path": 118, "data_path": [122, 225], "posixpath": 122, "scenario_para": 123, "case_study_para": 123, "architectur": 136, "iter": [27, 99, 136, 137, 141, 287, 311, 312, 333, 334, 357, 365, 414, 415, 485, 533], "scenario": [0, 136, 137, 155, 156, 157, 158, 160, 162, 163, 164, 166, 167, 173, 176, 177, 178, 179, 184, 185, 186, 188, 190, 193, 194, 195, 200, 201, 206, 207, 208, 210, 214, 215, 217, 218, 298, 300], "same": [8, 11, 81, 135, 136, 238, 239, 240, 241, 320, 321, 334, 362, 415, 533], "last": [8, 9, 10, 27, 39, 43, 73, 99, 136, 280, 287, 311, 312, 333, 334, 485, 533], "hard": [9, 136], "reboot": 136, "simul": [22, 70, 75, 94, 96, 136, 137, 311, 366, 540], "everi": [136, 141], "n": [41, 136, 239, 240, 241, 317, 325, 336, 358, 361, 368, 381, 398, 505], "batch": 136, "within": [9, 49, 56, 62, 70, 73, 78, 94, 136], "parallelis": 136, "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 150, 151, 152, 221, 222, 227, 228, 229, 237, 238, 239, 240, 241, 247, 248, 249, 250, 257, 258, 286, 287, 307, 309, 310, 312, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 528, 529], "paras_simul": 137, "object": [0, 5, 6, 27, 29, 31, 34, 36, 39, 40, 43, 46, 47, 49, 50, 51, 99, 100, 101, 109, 111, 126, 127, 131, 132, 137, 141, 151, 152, 222, 228, 229, 238, 239, 240, 241, 249, 258, 281, 287, 299, 304, 305, 309, 310, 311, 312, 401, 464, 465, 467, 468, 470, 472, 475, 477, 479, 481, 483, 485, 486, 529], "__init__": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 31, 33, 34, 36, 39, 40, 43, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 109, 110, 111, 112, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 151, 152, 222, 228, 229, 238, 239, 240, 241, 248, 249, 250, 258, 287, 309, 310, 311, 312, 464, 465, 467, 468, 470, 472, 475, 477, 479, 481, 483, 485, 486, 529], "build_ag": 137, "parametris": 137, "world": 137, "log_fil": [5, 9, 16, 56, 64, 70, 78, 94, 131, 133, 134, 135, 137, 141], "stream": [137, 351], "compute_path": 137, "n_iter": [137, 209, 262, 414], "info_scenario": [131, 133, 134, 135, 137, 141], "paras_scenario": [131, 133, 134, 135, 137, 141], "info_case_studi": 137, "comput": [8, 9, 10, 11, 14, 36, 67, 68, 69, 73, 74, 76, 89, 137, 238, 239, 240, 241, 243, 244, 245, 246, 280, 281, 311, 321, 350, 362, 531], "where": [9, 12, 18, 63, 72, 87, 137, 185, 188, 201, 304, 311, 333, 350, 372], "result": [137, 238, 239, 240, 241, 299], "save": [68, 73, 137, 350], "either": [27, 56, 99, 137, 287, 298, 304, 305, 311, 312, 485], "databas": [134, 137, 292, 299, 300, 305, 356], "rel": [137, 311], "base_path": [137, 291, 295], "profil": [137, 262, 272, 273, 277, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "connect": [9, 10, 13, 36, 78, 80, 133, 134, 135, 137, 141, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 288, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 382], "run": [137, 540], "case_studi": 137, "paras_sc_fix": 137, "paras_sc_iter": 137, "arg": [9, 25, 33, 51, 54, 56, 68, 70, 78, 86, 94, 137, 138, 234, 311, 312, 314, 316, 343, 352, 357, 395], "results_aggreg": 137, "default": [0, 11, 27, 41, 62, 71, 76, 85, 99, 137, 238, 239, 240, 241, 287, 305, 311, 312, 334, 350, 485, 533], "connection_read": 137, "connection_writ": 137, "main": [56, 137], "entri": [12, 71, 72, 74, 75, 76, 137, 311], "point": [12, 18, 39, 40, 63, 71, 72, 74, 75, 76, 87, 92, 93, 94, 95, 137, 238, 239, 240, 241, 280, 298, 333, 339, 340, 365, 400, 414], "through": 137, "ask": [13, 56, 76, 137], "link": 137, "how": [10, 11, 13, 137, 238, 239, 240, 241, 303, 304, 305, 306, 350], "list": [0, 8, 9, 12, 13, 25, 33, 39, 43, 71, 137, 151, 152, 280, 281, 299, 305, 311, 333, 350, 357], "id": [0, 39, 137, 142, 185, 305], "folder": [0, 137], "input": [0, 73, 137, 280, 281, 298, 304, 348, 357], "studi": [0, 137], "iterated_paras_sc": 137, "swept": 137, "combin": 137, "addit": [137, 298, 304, 350], "argument": [0, 9, 137, 291, 294, 295, 298, 304, 311, 334, 401, 533], "configur": 137, "read": [0, 135, 137, 151, 152, 298, 299, 300, 350, 366], "data": [0, 133, 134, 135, 137, 238, 239, 240, 241, 293, 298, 302, 303, 304, 305, 306, 350], "connection_tool": 137, "write": [137, 304, 305], "resultsaggreg": [125, 128, 137], "lib": 137, "regist": [9, 22, 36, 56, 78, 86, 94, 137], "If": [8, 9, 10, 11, 18, 27, 36, 39, 49, 56, 58, 63, 73, 86, 96, 99, 137, 238, 239, 240, 241, 287, 298, 299, 305, 311, 312, 333, 334, 356, 357, 362, 382, 485, 533, 540], "aggreg": 137, "done": [8, 11, 12, 39, 56, 70, 72, 75, 137, 238, 239, 240, 241, 299, 307], "someth": [137, 294, 298, 299, 350], "even": [137, 414], "empti": [27, 99, 137, 287, 294, 311, 312, 334, 485, 533], "name_file_output": 139, "kwarg": [9, 25, 33, 39, 56, 68, 70, 78, 86, 94, 99, 234, 291, 292, 294, 295, 298, 304, 312, 314, 316, 357, 395, 485], "clear": [27, 99, 287, 311, 312, 485], "remov": [27, 39, 56, 86, 99, 287, 311, 312, 485], "item": [27, 99, 287, 311, 312, 334, 485, 533], "d": [0, 27, 99, 238, 239, 240, 241, 243, 281, 287, 311, 312, 331, 357, 399, 485, 505, 509], "copi": [0, 27, 40, 99, 287, 311, 312, 485], "shallow": [27, 99, 287, 311, 312, 485], "fromkei": [27, 99, 287, 311, 312, 485], "creat": [0, 13, 27, 56, 86, 95, 99, 101, 133, 141, 151, 152, 287, 294, 299, 305, 311, 312, 357, 485], "new": [0, 11, 27, 39, 86, 94, 95, 99, 133, 134, 135, 287, 311, 312, 485], "set": [0, 9, 27, 40, 56, 70, 71, 78, 94, 99, 238, 239, 240, 241, 287, 299, 311, 312, 485], "return": [8, 9, 12, 13, 27, 36, 71, 87, 89, 99, 104, 106, 107, 115, 137, 166, 202, 238, 239, 240, 241, 243, 244, 245, 246, 252, 253, 254, 255, 256, 280, 287, 298, 299, 302, 311, 312, 320, 325, 333, 334, 339, 340, 345, 346, 348, 351, 352, 358, 365, 382, 485, 533], "els": [25, 27, 99, 287, 311, 312, 485], "provid": [5, 6, 8, 12, 13, 18, 27, 34, 56, 59, 63, 69, 71, 73, 74, 76, 78, 79, 80, 81, 82, 83, 99, 238, 239, 240, 241, 287, 300, 311, 312, 485], "view": [27, 99, 287, 311, 312, 485], "": [0, 27, 39, 58, 73, 99, 185, 238, 239, 240, 241, 245, 252, 287, 305, 311, 312, 346, 386, 485], "pop": [27, 99, 287, 311, 312, 485], "k": [27, 44, 99, 239, 240, 241, 245, 246, 253, 287, 311, 312, 320, 321, 362, 363, 377, 485], "v": [27, 99, 287, 311, 312, 485, 505], "found": [0, 1, 27, 99, 287, 311, 312, 334, 485, 533], "otherwis": [8, 27, 49, 76, 99, 287, 298, 304, 311, 312, 485], "rais": [27, 99, 287, 311, 312, 334, 485, 533], "keyerror": [27, 99, 287, 311, 312, 485], "popitem": [27, 99, 287, 311, 312, 485], "pair": [27, 99, 287, 311, 312, 358, 485], "2": [13, 27, 49, 67, 68, 73, 74, 99, 239, 240, 241, 287, 311, 312, 319, 325, 334, 338, 339, 340, 352, 398, 485, 509, 533], "tupl": [27, 99, 281, 287, 311, 312, 485], "lifo": [27, 99, 287, 311, 312, 485], "out": [11, 27, 59, 67, 68, 75, 78, 81, 82, 83, 99, 287, 311, 312, 485], "order": [8, 25, 27, 51, 54, 59, 81, 99, 185, 232, 287, 307, 311, 312, 485], "setdefault": [27, 99, 287, 311, 312, 485], "insert": [27, 99, 287, 311, 312, 485], "updat": [0, 8, 11, 12, 14, 17, 18, 27, 39, 51, 54, 56, 57, 58, 62, 63, 67, 68, 70, 72, 73, 74, 86, 93, 94, 95, 99, 287, 304, 305, 311, 312, 485], "f": [27, 99, 185, 238, 239, 240, 241, 280, 287, 311, 312, 357, 368, 383, 387, 485], "present": [27, 99, 287, 298, 311, 312, 350, 485, 509], "lack": [27, 99, 287, 311, 312, 485], "follow": [0, 8, 9, 13, 27, 99, 134, 135, 238, 239, 240, 241, 287, 311, 312, 415, 485], "an": [0, 8, 9, 12, 22, 27, 40, 51, 54, 60, 73, 78, 79, 82, 86, 89, 99, 101, 142, 281, 287, 294, 300, 311, 312, 348, 414, 485, 505], "postman": [5, 16, 64, 100], "count_messag": 101, "fals": [8, 10, 11, 31, 40, 76, 101, 128, 129, 185, 186, 188, 191, 208, 214, 215, 216, 217, 232, 233, 238, 239, 240, 241, 280, 293, 305, 320, 327, 350, 356, 362, 363, 379, 384, 397, 399, 532], "env": [5, 16, 25, 33, 34, 64, 101, 142], "hmi": 101, "port_hmi": [101, 464, 467, 470, 472, 473, 485], "5555": [101, 472, 473, 475, 481], "port_hmi_cli": 101, "5556": [101, 472, 473, 477, 479, 483], "simpl": [101, 311, 333, 376, 400], "address": [101, 299], "uniqu": 101, "identifi": [101, 151, 152], "agent": [101, 414], "register_ag": [36, 101], "automat": [101, 298, 300], "need": [0, 8, 10, 11, 12, 14, 17, 18, 39, 51, 54, 56, 57, 63, 71, 73, 78, 87, 89, 92, 101, 141, 238, 239, 240, 241, 311, 399, 540], "unique_id": [39, 101], "attr": 101, "letterbox": 101, "The": [0, 1, 8, 9, 11, 12, 56, 59, 60, 62, 71, 94, 101, 134, 135, 238, 239, 240, 241, 298, 300, 307, 311, 334, 343, 348, 382, 533], "minimum": [8, 76, 101, 238, 239, 240, 241], "requir": [0, 8, 14, 20, 65, 82, 101, 307, 392], "receiv": [9, 56, 67, 68, 70, 72, 78, 94, 101], "send_hmi": 101, "msg": [6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 101, 422, 423, 424, 430, 434, 446, 451, 457, 458, 459, 494, 498, 517, 522, 523, 524, 525, 526, 527], "refactor": 101, "far": 101, "too": [1, 8, 101, 238, 239, 240, 241], "much": [10, 11, 101, 134, 135, 362], "relat": [8, 9, 101], "hotspot": [1, 85, 86, 101], "beacon": 101, "apply_alpha_compensation_magnitud": 112, "alpha": 112, "increas": [11, 76, 112], "compens": [8, 9, 13, 112, 323], "ratio": 112, "apply_alpha_doc_magnitud": 112, "duti": [8, 10, 112], "care": [8, 10, 13, 112], "apply_alpha_mct": 112, "now": [0, 8, 9, 10, 14, 86, 112, 304], "push": [67, 112], "distribut": [9, 11, 56, 70, 78, 81, 83, 94, 112, 321, 345, 346, 362, 505], "via": 112, "loc": [112, 346, 370, 371], "apply_alpha_non_atfm": 112, "locat": [0, 34, 72, 112], "apply_alpha_tat_mean": 112, "we": [1, 10, 11, 39, 67, 81, 112, 321, 414], "mean": [8, 112, 128, 129, 317, 318, 319, 320, 338, 345, 346, 362, 370, 388], "so": [9, 10, 39, 56, 73, 91, 92, 94, 112, 238, 239, 240, 241, 325], "sig": [112, 345, 346, 370, 505, 509], "constant": 112, "expo": 112, "x": [8, 44, 86, 112, 238, 239, 240, 241, 243, 244, 246, 260, 270, 271, 333, 334, 335, 343, 348, 359, 360, 372, 380, 397, 531, 533], "lambda": [112, 334, 533], "sdt": [112, 370], "apply_anchor": 112, "anchor": 112, "apply_dci_max_threshold": 112, "threshold": [112, 438, 440], "apply_dci_min_threshold": 112, "apply_delta_mct": 112, "delta": [112, 238, 239, 240, 241], "metric": [69, 125, 128, 129], "agg": 125, "paras_to_monitor": [128, 129], "stat": [128, 129, 388], "std": [128, 129, 345], "no_percentile_for_pax": [128, 129], "resultsaggregatorsimpl": 129, "case_study_conf": [131, 133, 134, 135, 141], "data_scenario": [131, 133, 134, 135, 141], "print_color_info": [131, 133, 134, 135], "scenarioload": [133, 134], "loader": [133, 134, 135], "pickl": [133, 298, 304], "download_t": 133, "script": [0, 133, 401], "reload": [133, 134, 135], "draw": [133, 134, 135], "some": [0, 5, 6, 8, 39, 133, 134, 135, 238, 239, 240, 241], "variabl": [133, 134, 135, 311, 333, 358], "random": [9, 96, 133, 134, 135], "thing": [134, 135], "csv": [134, 298, 304], "create_flight_plan": [134, 135], "loop": [134, 135], "longer": [73, 134, 135], "than": [8, 11, 12, 134, 135, 238, 239, 240, 241, 298, 362, 401], "scenarioloaderstandard": 135, "parquet": [0, 135, 298, 300], "structur": [0, 135], "openmercuri": 135, "It": [5, 6, 8, 11, 12, 39, 71, 86, 89, 93, 135, 238, 239, 240, 241, 311], "inherit": [5, 6, 135], "simplifi": [8, 11, 135], "version": [8, 95, 135, 185, 540], "step": [135, 142, 238, 239, 240, 241], "pre": [8, 11, 56, 135], "arrang": 135, "load_scenario": 141, "call": [8, 12, 39, 49, 141, 142, 311, 334, 350, 357, 533], "callback": 142, "replac": [142, 303, 304, 305, 306, 320], "event": [25, 33, 40, 67, 70, 73, 74, 75, 86, 94, 95, 142, 412, 453, 454, 460, 461, 462], "time": [8, 9, 10, 11, 14, 18, 29, 36, 39, 49, 50, 51, 53, 54, 58, 59, 63, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 92, 142, 229, 232, 250, 505], "prioriti": [142, 311], "just": [0, 8, 10, 25, 49, 73, 142], "befor": [8, 9, 10, 14, 39, 86, 142, 238, 239, 240, 241, 311, 333], "process": [9, 13, 25, 33, 70, 78, 79, 89, 142, 311, 357], "create_aman": 141, "aman": [63, 64, 65, 78, 91, 92, 94, 95, 141], "includ": [8, 9, 43, 70, 72, 73, 78, 141, 166, 202, 401], "eaman": [71, 78, 141], "acolor": [5, 16, 64], "red": [5, 16, 64], "mcolor": [5, 16, 64], "white": [5, 16, 64], "uid": [5, 8, 16, 25, 27, 34, 46, 56, 64, 78], "idd": [5, 16, 43, 64], "verbos": [5, 16, 64, 322, 350], "common": [5, 6], "apply_agent_modif": [5, 9, 16, 56, 64, 70, 78, 86, 94], "modif": [5, 9, 16, 56, 64, 70, 78, 86, 94], "role": [5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95], "On": [6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95], "initialis": [6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 414], "pointer": [6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95], "belong": [1, 6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95], "send": [6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95], "messag": [6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 95, 329], "own": [6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 95, 438], "icao": [27, 148, 149, 284, 285], "place": [27, 79], "holder": 27, "rememb": [27, 320, 321, 362], "airlin": [8, 9, 10, 13, 27, 70, 79, 94, 160, 415], "slot_num": [29, 50, 53], "reason": [31, 34, 238, 239, 240, 241], "regul": [31, 86, 166, 202, 420], "r": [0, 9, 31, 43, 365], "slot": [8, 19, 21, 31, 49, 51, 53, 54, 56, 59, 60, 68, 70, 71, 72, 91, 232, 508, 531, 534, 537, 539], "excepmt": 31, "access": [36, 71, 363], "flight": [8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 25, 36, 39, 40, 43, 51, 54, 56, 57, 58, 59, 60, 62, 63, 65, 78, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 190, 230, 238, 239, 240, 241, 254, 255, 256, 438, 440, 504, 509, 531, 534], "up": [1, 8, 9, 10, 11, 14, 36, 39, 41, 76], "date": [9, 14, 36], "inform": [8, 9, 18, 36, 39, 40, 56, 62, 63, 68, 69, 70, 71, 73, 74, 76, 78, 91, 94, 540], "get_average_price_on_leg": [9, 36], "flight_uid": [8, 9, 10, 11, 12, 13, 14, 25, 36, 39, 43, 49, 51, 54, 86, 92, 93, 233, 235, 421, 438, 440, 447, 448, 449, 450, 492, 493, 496, 497, 503, 511, 512, 515, 516, 519, 520, 521], "price": [9, 36], "paid": [9, 10, 36], "passeng": [8, 9, 10, 13, 14, 36, 43, 78, 80], "possibl": [0, 8, 9, 11, 12, 36, 78, 238, 239, 240, 241], "number": [8, 9, 25, 33, 36, 49, 238, 239, 240, 241, 253, 254, 255, 256, 325, 342, 357], "leg": [9, 36], "weight": [9, 36, 40, 185, 238, 239, 240, 241, 328, 335, 388], "get_reactionary_buff": [9, 36], "cancel": [8, 17, 36, 56, 57, 73, 88, 91, 94], "consid": [8, 12, 13, 36, 39, 56, 62, 69, 71, 73, 76, 238, 239, 240, 241, 333, 438, 440], "absent": 36, "aircraft": [8, 9, 14, 36, 67, 68, 70, 79, 151, 152, 238, 239, 240, 241, 505], "queue": [17, 18, 19, 21, 22, 25, 33, 34, 36, 51, 54, 56, 57, 58, 59, 60, 62, 63], "get_tat": [9, 36], "airport_uid": [9, 36, 56], "typic": [9, 36, 352], "turnaround": [9, 14, 36, 78, 79], "type": [8, 9, 36, 78, 79, 92, 107, 115, 137, 151, 152, 238, 239, 240, 241, 243, 244, 245, 246, 252, 253, 254, 255, 256, 294, 298, 299, 311, 325, 339, 340, 358, 365], "get_total_travelling_tim": [9, 36], "itinerari": [8, 9, 13, 36, 43], "feasibl": [9, 36], "most": [9, 14, 36, 334, 533], "theori": [14, 36], "register_airlin": 36, "aoc": [9, 13, 18, 36, 63, 70, 94], "after": [8, 9, 36, 39, 49], "register_network_manag": 36, "nm": [8, 9, 36, 89, 238, 239, 240, 241, 253, 255, 256], "FOR": [11, 36], "test": [0, 1, 36, 320, 321, 362], "purpos": [25, 36], "fp_pool_id": [39, 185], "crco_cost_eur": 39, "fuel_pric": 39, "destination_airport_uid": 39, "origin_airport_uid": 39, "eobt": [8, 14, 39, 58, 68, 73], "sobt": [8, 39], "sibt": [8, 39], "statu": [8, 9, 39], "non": [8, 14, 39, 291, 294, 295, 534], "submit": [8, 39, 89, 94], "origin_icao": 39, "destination_icao": 39, "flighplan": 39, "plan": [8, 9, 11, 12, 18, 39, 40, 60, 62, 63, 69, 70, 72, 73, 75, 76, 86, 87, 88, 89, 91, 92, 93, 94, 95], "gener": [0, 9, 11, 14, 39, 73, 94, 96, 298, 362, 509], "compos": [39, 238, 239, 240, 241], "flightpoint": 39, "realis": 39, "realiti": 39, "keep": [8, 14, 39, 321], "track": [39, 94], "both": [39, 313, 320], "trajectori": [8, 9, 39, 73, 75, 238, 239, 240, 241, 400], "ahead": 39, "could": [39, 311], "uncertainti": 39, "onc": [22, 39, 67, 71, 311], "flown": [39, 94], "dure": [39, 321], "futur": [0, 39], "disentangl": 39, "element": [39, 40, 96, 350], "add_point_original_plan": 39, "suppos": 39, "end": [10, 14, 39, 49, 238, 239, 240, 241, 329], "sort_point": 39, "find_intersecting_point": 39, "typ": [39, 292], "radiu": 39, "geom": 39, "coordin": [39, 41, 62, 333, 339, 340], "lat": [39, 185], "lon": [39, 185], "get_estimated_fuel_consumpt": 39, "takeoff": [39, 67], "land": [39, 71, 72, 74, 75, 76, 92, 238, 239, 240, 241], "been": [1, 12, 13, 14, 17, 39, 57, 91, 93], "alreadi": [8, 10, 39, 51, 54, 76, 350], "get_eta_wo_atfm": 39, "estim": [8, 9, 11, 39, 68, 71, 76, 78, 81, 82, 92, 238, 239, 240, 241], "arriv": [8, 10, 11, 14, 17, 18, 19, 21, 22, 25, 39, 56, 62, 63, 67, 68, 70, 71, 74, 505], "atfm": [8, 14, 39, 86, 89], "delai": [8, 9, 11, 14, 39, 56, 62, 71, 72, 76, 89, 438, 440], "get_planned_flying_time_to_land": 39, "length": [39, 315], "minut": [8, 9, 11, 14, 39, 86], "name_point": 39, "idx": [39, 510], "sort": [39, 311, 379], "delet": 39, "ad": [8, 10, 13, 14, 39, 58, 68, 70, 94, 95, 304], "avoid": [34, 39, 307], "recompute_speeds_new_point": 39, "recomput": [8, 39, 51, 54, 73, 76], "speed": [8, 9, 11, 39, 73, 76, 238, 239, 240, 241, 245, 252, 253, 254, 255, 256, 505, 534], "next": [8, 39], "exist": [39, 51, 54], "coord": [40, 47, 185, 326, 373], "alt_ft": [40, 185], "time_min": [40, 185], "dist_from_orig_nm": [40, 47, 185], "dist_to_dest_nm": [40, 47, 185], "wind": [40, 185, 238, 239, 240, 241], "ansp": [40, 47, 185], "fuel": [8, 11, 40, 76, 185, 238, 239, 240, 241, 250], "number_ord": 40, "planned_segment_speed_kt": 40, "segment_max_speed_kt": 40, "segment_min_speed_kt": 40, "segment_mrc_speed_kt": 40, "my_deep_copi": 40, "normal_copi": 40, "waypoint": [40, 93, 94, 95], "flightplan": 40, "deepcopi": 40, "print_ful": [40, 70], "print": [40, 50, 53, 70, 327, 532], "full": [40, 70, 238, 239, 240, 241, 280, 299], "set_ev": 40, "set_nam": 40, "central_longitud": 41, "central_latitud": 41, "proj_typ": 41, "cartopi": [0, 41], "cr": 41, "azimuthalequidist": 41, "proj_initi": 41, "project": [41, 238, 239, 240, 241], "proj": [0, 41], "eqc": 41, "ellp": 41, "wgs84": 41, "6378137": 41, "lon_0": 41, "unknown": 41, "axi": 41, "info": [41, 68, 73], "cartesian": 41, "east": 41, "north": 41, "h": [0, 41, 243, 244, 245, 246, 252, 253, 254, 255, 256], "ellipsoid": 41, "height": 41, "metr": 41, "area": 41, "undefin": 41, "oper": [9, 12, 41, 75, 78, 94], "equidist": 41, "cylindr": 41, "datum": 41, "wg": 41, "84": 41, "prime": 41, "meridian": 41, "greenwich": 41, "scale": [41, 346], "1000": [41, 320, 321, 362, 363], "here": [0, 13, 41, 49, 414], "conveni": [41, 86], "big": [8, 41, 342], "meter": [41, 325], "durat": [50, 53], "capacity_period": [34, 50, 51, 53, 54], "print_info": [50, 53], "below": [50, 53], "wa": [50, 53, 311], "previous": [50, 53, 311], "self": [9, 50, 53, 311, 410, 412, 413, 414, 415, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 492, 493, 494, 496, 497, 498, 503, 504, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527], "mprint": [50, 51, 53, 54], "instead": [50, 53, 71, 85, 311], "capac": [25, 33, 34, 49, 51, 54, 56], "slot_planning_oversubscript": 54, "slotqueu": [54, 60], "manag": [9, 13, 51, 54, 56, 60, 94], "assign_to_slot": [51, 54], "eta": [49, 51, 54, 228, 232, 233, 504, 508, 509, 531, 534, 537, 539], "known": [51, 54, 86], "consolidate_queu": [51, 54], "remove_lingering_slot": [51, 54], "tri": [8, 51, 54], "re": [51, 54], "assign": [19, 51, 54, 56, 60, 73], "sure": [14, 51, 54, 56, 86, 534], "NOT": [51, 54, 321, 362], "give": [51, 54], "fpf": [51, 54, 89], "why": [51, 54], "get_slots_avail": [51, 54], "t1": [51, 54], "t2": [51, 54], "between": [8, 9, 11, 12, 51, 54, 73, 238, 239, 240, 241, 280, 281, 311, 339, 340, 358, 376], "print_selector": [51, 54], "karg": [51, 54], "aprint": [51, 54], "swap_flight": [51, 54], "f1": [51, 54], "f2": [51, 54], "throw": [51, 54], "except": [1, 51, 54, 86, 294, 307, 528, 530], "cta": [51, 54], "update_arrival_assign": [51, 54], "slot_tim": [49, 51, 54, 233, 504, 509], "time_before_resolut": 85, "120": 85, "solver": 85, "udpp_merg": 85, "archetype_cost_funct": 85, "hm": 85, "swap": [8, 85, 438, 440], "processor": 85, "solv": [62, 85, 86], "singl": [78, 85, 311, 366], "shot": 85, "By": [0, 62, 85], "librari": [0, 1, 85, 307], "resolut": 85, "algorithm": [85, 89], "udpp": 85, "register_atfm_regul": 86, "atfm_regul": 86, "mainli": 86, "remove_regulation_slots_except": 86, "current": [14, 25, 33, 76, 86, 95], "attach": [49, 86], "latest": 86, "pass": [8, 9, 86, 291, 294, 295, 298, 299, 304, 320, 401], "destin": [9, 13, 86, 185], "airport": [9, 22, 56, 60, 74, 78, 79, 80, 86, 94, 162, 163, 164, 166, 202], "nmad": 87, "request": [0, 8, 10, 12, 14, 18, 25, 33, 34, 59, 62, 63, 67, 68, 70, 71, 72, 73, 74, 76, 87, 88, 94, 95], "dissemin": [87, 88, 91, 92, 93, 94], "entiti": [78, 87, 91, 92, 93], "interest": [56, 87, 91, 92, 93, 94, 95], "notifi": [17, 18, 20, 57, 63, 65, 87, 92, 93, 94], "when": [8, 9, 10, 12, 13, 14, 18, 19, 22, 25, 43, 56, 58, 59, 62, 63, 67, 68, 73, 74, 87, 92, 93, 94, 95, 238, 239, 240, 241, 311, 350], "reach": [9, 87, 238, 239, 240, 241], "them": [0, 8, 13, 56, 87, 95, 281, 321], "nmc": 88, "nmfpp": 89, "check": [8, 13, 89, 540], "compute_atfm_delai": 89, "stochast": 96, "reproduc": 96, "randomli": 96, "each": [8, 76, 94, 96, 281, 311, 321, 358, 415], "ach": 17, "aqpu": [18, 63], "eibt": [18, 63], "asp": 19, "enter": [19, 20, 62, 65], "execut": [8, 10, 19, 69, 73, 327, 415, 532], "horizon": 19, "fiah": [20, 65], "move": [20, 65], "servic": [20, 65], "eaman_solv": 21, "google_or": 21, "sa": 21, "optimis": [21, 62, 238, 239, 240, 241], "assig": [21, 34, 73], "saqb": 22, "build": [0, 8, 22, 25, 56, 60, 62, 325, 376], "schedul": [8, 11, 22, 58, 60], "begin": [22, 311, 415], "afp": [0, 8], "planner": 8, "select": [8, 9, 12, 73, 185, 238, 239, 240, 241, 298, 299], "4d": 8, "depart": [8, 10, 14, 56, 67, 68, 70], "g": [8, 12, 70, 71, 302, 325, 326, 357, 373], "wait": [8, 10, 13, 25, 67, 68, 71, 73, 74, 75, 94], "possibli": 8, "decid": [8, 11, 12, 13], "readi": [8, 10, 11, 14, 59, 68, 75], "departur": [8, 10, 11, 14, 56, 57, 58, 59, 60, 68], "less": [8, 298, 311, 362], "3": [0, 8, 73, 153, 187, 243, 253, 254, 255, 256, 319, 334, 338, 398, 399, 533], "hour": [8, 76], "might": [0, 8, 9, 238, 239, 240, 241, 350], "lead": 8, "option": [8, 11, 12, 298, 299, 302, 333], "cost": [1, 8, 9, 10, 11, 12, 62, 71, 438, 440], "tactic": 8, "depend": [8, 11, 62, 238, 239, 240, 241, 311], "mechan": 8, "4dt": 8, "implement": [8, 56, 62, 71], "action": 8, "requestatfmslot": 8, "fp_0": 8, "fp_1": 8, "fp_2": 8, "prioritis": 8, "decideopt": 8, "4dt_0": 8, "rule": [8, 11, 307], "thumb": [8, 11], "4dt_1": 8, "4dt_2": 8, "checkfpopt": 8, "build_delay_cost_functions_advanc": 8, "factor_in": 8, "diff": [8, 11], "up_to_date_baselin": [8, 11], "respect": [1, 8, 238, 239, 240, 241, 379], "avail": [8, 9, 25, 238, 239, 240, 241], "explicit": [8, 298], "knock": 8, "effect": [8, 49], "To": [0, 8, 94, 291, 295, 377], "facilit": 8, "factorbuild_delay_cost_functions": 8, "fly": [8, 9], "likewis": 8, "taken": [8, 311, 358], "account": [8, 12, 59], "pax": [8, 9, 10, 13, 231, 263], "output": [0, 8, 280, 281, 302, 333], "factor": 8, "want": [8, 11, 94, 350], "slow": [8, 11], "put": [8, 13, 25, 33, 298, 305, 414], "statement": 8, "outsid": [0, 8], "probabl": [8, 13, 321, 505, 509], "build_delay_cost_functions_air_heurist": 8, "missed_connect": 8, "build_delay_cost_functions_heurist": [8, 11], "total": [8, 71, 238, 239, 240, 241, 325], "build_delay_cost_functions_dci_l2": 8, "waited_pax": 8, "assess": [8, 11, 78], "recov": [8, 11, 76], "coupl": [8, 281], "pushback_readi": [8, 11], "5": [8, 9, 11, 319, 334, 338, 368, 397, 533], "go": [8, 415], "better": [8, 362], "those": [8, 94, 311], "board": [8, 9, 10, 13], "built": [8, 307, 327, 532], "segment": 8, "potenti": [8, 13, 71, 76], "dep": 8, "group": [8, 9, 13], "build_delay_cost_functions_dci_l2_old": 8, "potentit": 8, "up_to_date_baseline_obt": 8, "multiply_flights_aft": 8, "heurist": [8, 11], "miss": [8, 9, 13, 299, 305], "other": [8, 71, 78, 294, 298, 307, 320, 321, 415, 440], "build_delay_cost_functions_heuristic_flight": 8, "WITH": 8, "build_delay_cost_functions_heuristic_pax": 8, "compute_reactionary_delai": 8, "dai": [8, 155, 166, 202], "int": [8, 25, 33, 305, 325, 333, 357], "float": [8, 25, 33, 280, 305, 325, 365], "primari": [8, 288], "amount": [8, 11], "These": [8, 9, 238, 239, 240, 241], "buffer": [8, 9], "larg": 8, "enough": [8, 11, 311], "recoveri": [8, 11, 76], "strategi": 8, "cost_not_wait_for_pax_group": 8, "missing_pax": [8, 492, 496], "pax_delai": 8, "don": [8, 311], "t": [8, 245, 246, 252, 311, 334, 383, 414, 505, 533], "deal": 8, "rebook": [8, 10, 13], "transfer": 8, "soft": 8, "cost_wait_for_pax_group": 8, "decide_options_altern": 8, "fp_option": 8, "current_opt": 8, "consumpt": [8, 238, 239, 240, 241], "reassess_departure_turnaround": 8, "ac_ready_at_tim": 8, "black": 8, "magic": 8, "tricki": 8, "understand": 8, "lightli": 8, "ac_ready_tim": 8, "pull": 8, "close": 8, "inde": [8, 302], "anoth": [8, 13], "got": 8, "complet": 8, "30": [8, 357, 398, 537, 539], "resubmit": 8, "ani": [8, 49, 59, 73, 291, 294, 295, 311, 440], "repres": [9, 56, 70, 78, 94], "centr": 9, "fleet": 9, "dynam": [1, 9, 11], "adjust": [9, 76], "realloc": [9, 14], "handler": [9, 57, 67, 74, 79], "decis": [9, 11], "mostli": 9, "driven": 9, "expect": [9, 12, 62, 71], "average_cost_funct": 9, "veri": [9, 335], "high": 9, "averag": [9, 238, 239, 240, 241, 337, 338], "rough": 9, "code": [1, 9, 307, 392], "least": [9, 399], "average_missed_pax_cost": 9, "obtain": [9, 95, 238, 239, 240, 241], "get_airline_of_flight": 9, "central": 9, "registri": 9, "get_airlines_in_alli": 9, "allianc": 9, "get_all_airlin": 9, "get_curfew_buff": 9, "curfew": [9, 162], "get_destin": 9, "get_first_obt": 9, "fist": 9, "obt": 9, "get_flight": 9, "aoc_uid": [9, 13], "get_ibt": 9, "ibt": 9, "get_last_ibt": 9, "get_mct": 9, "flight_uid1": 9, "flight_uid2": 9, "pax_typ": [9, 43, 78], "mct": 9, "get_n_pax_to_board": 9, "get_number_seats_flight": 9, "seat": 9, "get_number_seats_itinerari": 9, "get_obt": 9, "get_origin": 9, "origin": [9, 185], "get_pax_to_board": 9, "reactionari": [9, 71], "propag": 9, "trigger": [9, 33, 71, 73, 75, 93, 94], "breach": 9, "get_statu": 9, "give_compensation_func": 9, "compensation_func": 9, "give_delay_distr": 9, "dist": [9, 78, 280], "drawn": 9, "rv": 9, "random_st": 9, "give_duty_of_care_func": 9, "duty_of_care_func": 9, "give_non_pax_cost_delai": 9, "dict_np_cost": 9, "dict_np_cost_fit": 9, "phase": [9, 184, 238, 239, 240, 241], "at_gat": 9, "taxi": [9, 59, 67, 68, 74, 75, 78, 81, 82, 83], "airborn": [9, 73], "euro": 9, "per": [0, 9, 56, 76], "b": [9, 44, 280, 281, 333, 357], "coeffici": [9, 321, 333, 335, 358, 365], "sqrt": 9, "mtow": [9, 238, 239, 240, 241], "c": [9, 34, 44, 252, 357, 358], "mtwo": 9, "abov": [9, 377], "own_flight": 9, "register_aircraft": 9, "register_airport": [9, 56, 94], "design": [9, 298, 304, 372, 377], "aoc_airports_info": 9, "aoc_flights_info": 9, "intern": [9, 56, 78], "register_flight": [9, 78], "register_fp_pool": 9, "fp_pool": [9, 186], "poool": 9, "register_list_aircraft": 9, "register_nm": 9, "networkmanag": 9, "register_pax_itinerary_group": 9, "register_trajectories_pool": 9, "trajectory_pool": [9, 153, 185, 186, 187, 213, 214, 215, 217, 219], "pool": [9, 385], "set_log_fil": [9, 56, 70, 78, 94], "log": [9, 56, 70, 78, 94], "tbc": [9, 56, 70, 78, 94], "system": [9, 56, 70, 78, 94], "aph": 10, "direct": [10, 13], "left": [10, 13, 238, 239, 240, 241, 505], "d4": 10, "1": [0, 10, 11, 13, 34, 67, 68, 73, 74, 186, 238, 239, 240, 241, 245, 248, 319, 320, 321, 325, 333, 334, 338, 339, 340, 348, 352, 362, 368, 376, 377, 398, 533, 534, 537, 539], "embark": 10, "arrive_pax": 10, "overnight": 10, "night": 10, "exactli": [10, 14], "block": [10, 79], "board_pax": 10, "coincid": 10, "off": [10, 75, 92], "long": [10, 75], "until": [10, 67, 68, 75, 93], "real": 10, "ta": [11, 238, 239, 240, 241, 252], "dcic": 11, "commun": 11, "potentialdelayrecoveryprovid": 11, "pdrp": [11, 76], "build_delay_cost_functions_dci_l1": 11, "slightli": 11, "fnc": 11, "fit": [11, 365], "dci": [11, 73, 76], "build_delay_cost_functions_dci_l1_old": 11, "cost_index_assess": 11, "push_back_ready_ev": [11, 73, 493, 497], "ci": [11, 76], "pushback": [11, 67, 68], "top": [11, 83, 238, 239, 240, 241], "climb": [11, 184, 238, 239, 240, 241], "therefor": 11, "Or": 11, "IF": 11, "turn": 11, "AT": 11, "decide_if_delay_recovery_perform": 11, "probabilist": 11, "whether": 11, "perform": [0, 11, 238, 239, 240, 241], "static": [11, 238, 239, 240, 241], "plot_costs_dci": 11, "x_cont": [11, 333], "plot": [11, 333, 400], "make": [11, 14, 238, 239, 240, 241, 298, 377], "reassess_cost_index_ta0": 11, "OF": 11, "greater": 11, "60": [11, 14], "try": [11, 238, 239, 240, 241], "amortis": 11, "lower": [11, 238, 239, 240, 241], "15": [11, 245], "never": 11, "made": 11, "accord": [11, 92, 151, 152], "linear": [11, 238, 239, 240, 241, 333, 348, 358, 376], "prob": 11, "20": [11, 238, 239, 240, 241, 357, 398], "min": [11, 238, 239, 240, 241, 333], "As": 11, "reduc": [11, 216], "max_fuel": 11, "achiev": 11, "maximum": [11, 25, 33, 76, 238, 239, 240, 241], "reduct": 11, "reassess_cost_index_ta1": 11, "deliver": 11, "At": 11, "toc": [11, 238, 239, 240, 241, 400], "choos": 11, "cheapest": 11, "reassess_cost_index_ta2": 11, "down": [11, 294], "earlier": 11, "send_speed_up_msg_to_fpu": 11, "perc_select": [11, 73], "change_tod_dci": [11, 73], "who": [11, 92, 311], "selector": 12, "altern": [0, 12], "dispatch": 12, "extract": 12, "extern": 12, "decide_fp": 12, "select_fp": 12, "back": [12, 67], "cost_opt": [12, 447, 448, 449, 450], "yield": [12, 93, 356], "rather": 12, "asynchronu": 12, "human": 12, "hmi_fp_sel": 12, "send_option_select": 12, "option_selected_fp": 12, "repli": [12, 71, 76], "wait_for_fp_selection_request": 12, "noth": 12, "pr": 13, "onto": 13, "compute_missed_connecting_paxand": 13, "pai": 13, "hotel": 13, "prefer": [13, 453], "compute_reallocation_opt": 13, "from_tim": 13, "from_airport": 13, "do_realloc": 13, "answer": 13, "reallocate_pax": 13, "reallocation_opt": 13, "send_allocation_pax_request": 13, "wait_for_allocation_pax_request": 13, "come": [13, 238, 239, 240, 241], "wait_for_reallocation_pax_request": 13, "ok": 13, "wait_for_remove_pax_from_boarding_list_request": 13, "tro": 14, "gate": [14, 59, 74], "subsequ": [1, 14], "due": [14, 73], "caus": 14, "reassess": [14, 238, 239, 240, 241], "extra": 14, "incur": 14, "check_arriv": 14, "arrival_ev": 14, "releas": [1, 14, 25, 33, 56, 91], "check_delay_estim": 14, "delay_estimation_ev": 14, "happen": [14, 79], "There": 56, "ensur": [0, 56], "runwai": [56, 59], "demand": 56, "kept": 56, "baselin": 56, "fifo": 56, "airport_coord": 56, "seem": 56, "departu": 56, "capacityperiod": 56, "period": [49, 56], "directli": [25, 56, 71, 298, 299, 401], "final": [56, 59, 74, 238, 239, 240, 241], "strategicqueuedeparturebuild": 56, "sqdb": 56, "register_radar": 56, "radar": 56, "ld": 56, "Not": [25, 56], "radar_uid": 56, "knowledg": 56, "dch": 57, "dqu": 58, "posit": [58, 62, 76, 93, 343, 345], "fligth": [58, 238, 239, 240, 241], "seen": 58, "dsp": 59, "waitfordeparturerequest": 59, "sequenc": [59, 71, 185, 280, 363], "ctot": 59, "assing": 59, "sdqb": 60, "strateg": 60, "builder": 60, "build_departure_queu": 60, "app": 62, "scope": 62, "wai": [62, 71, 311], "domain": 62, "sent": 62, "arrivalqueueplannedupdat": 63, "flightinamanhandl": 65, "captur": 78, "ground": [74, 78, 79, 238, 239, 240, 241], "side": [78, 325, 377], "air": [78, 243, 244, 245, 246], "actual": [74, 78, 81, 83, 350], "evolut": [70, 78], "separ": 78, "respons": 78, "give_connecting_time_dist": 78, "mct_q": 78, "95": 78, "layer": 78, "vari": 78, "nation": 78, "give_taxi_in_time_estimation_dist": 78, "ac_typ": [78, 81, 83], "ao_typ": [78, 79, 81, 83], "give_taxi_out_time_estimation_dist": 78, "give_taxi_time_add_dist": 78, "nois": 78, "give_turnaround_time_dist": 78, "register_dman": 78, "dman": [78, 91, 92, 94, 95], "register_eaman": 78, "gh": 79, "resourc": [25, 33, 79], "while": [79, 94], "compute_turnaround_tim": 79, "ac_wak": 79, "wake": [79, 151, 152], "turbul": 79, "fsc": 79, "lcc": 79, "etc": [0, 79, 307, 325, 333], "do_turnaround": 79, "tt": 79, "wait_for_turnaround_request": 79, "pct": 80, "tip": 81, "compute_taxi_in_tim": 81, "disrupt": 81, "toe": 82, "compute_taxi_out_tim": 83, "taxi_out_time_estim": 83, "sampl": [0, 83, 320, 321, 358], "adh": 67, "check_push_back": 67, "moment": 67, "do_taxi_out": 67, "succe": 67, "wait_for_taxi_out_tim": 67, "atot": 67, "dsr": [68, 73], "aobt": 68, "check_push_back_readi": [68, 73], "wait_for_departure_slot": 68, "wait_for_taxi_out_time_estim": 68, "fpip": 69, "wrap": 69, "around": 69, "state": 69, "inforamt": 69, "compute_fp_metr": 69, "initi": [70, 333, 365], "crew": 70, "constraint": [70, 72], "hold": 70, "integr": [70, 75], "itself": 70, "over": [70, 75, 438, 440], "summari": 70, "reschedule_fai_request": 70, "reschedul": 70, "fai": [70, 71], "transfer_to_aoc": 70, "relai": 70, "fac": 71, "faip": 71, "generalis": 71, "check_fai_request": 71, "fai_request_ev": 71, "wait_for_flight_arrival_information_request": 71, "compute_cost_slot": 71, "elt": [71, 421, 426, 427, 428, 432, 521], "slots_tim": [71, 426, 427, 428, 432], "provide_flight_arrival_inform": 71, "eaman_uid": 71, "provide_flight_estimated_landing_tim": 71, "wait_for_flight_estimated_landing_time_request": 71, "what": [71, 304], "fo": 71, "2nd": 71, "fpcu": 72, "control": [72, 311, 358], "issu": 72, "update_flight_plan_constraint_controlled_landing_tim": 72, "delay_need": 72, "clt": 72, "location_request": 72, "neeed": 72, "wait_for_flight_plan_controlled_landing_time_constraint_update_request": 72, "fpu": 73, "report": [73, 93], "assing_fp_no_comput": 73, "would": 73, "overrid": 73, "store": 73, "exampl": [0, 73, 91, 238, 239, 240, 241, 243, 244, 245, 246, 252, 348], "update_fp_inform": 73, "But": 73, "extens": [73, 298], "update_eobt": 73, "pusbh_back_ready_ev": 73, "push_bac_ready_ev": 73, "push_back": 73, "update_spe": 73, "percentag": 73, "mrc": 73, "mmo": 73, "descent": [73, 76, 238, 239, 240, 241], "whole": 73, "steeper": 73, "cruis": [73, 238, 239, 240, 241], "bit": 73, "wait_for_fp_assigment_no_comput": 73, "wait_for_fp_upd": 73, "wait_for_eobt_upd": 73, "wait_for_speed_upd": 73, "tod": [73, 400], "gah": 74, "aibt": 74, "check_land": 74, "do_taxi_in": 74, "request_taxi_in_tim": 74, "wait_for_taxi_in_tim": 74, "otl": 75, "cross": [75, 93, 94], "check_taxi_out_don": 75, "compute_potential_delay_recoveri": 76, "force_comput": 76, "use_dci_land": 76, "forc": [76, 350], "past": [76, 238, 239, 240, 241], "estimate_time_fuel_at_speed_chang": 76, "speed_change_perc": 76, "speed_kt": 76, "min_kt": 76, "max_kt": 76, "knot": 76, "mrc_kt": 76, "rang": [76, 238, 239, 240, 241, 334, 533], "unit": [76, 534], "distanc": [76, 238, 239, 240, 241, 250, 280, 281, 339, 340, 505, 534], "estimate_time_fuel_speed_chang": 76, "from_posit": 76, "provide_potential_delay_recover_inform": 76, "potential_delay_recoveri": 76, "to_uid": 76, "wait_for_potential_delay_recover_request": 76, "dcfp": 91, "dfp": 92, "add_subscript": 92, "agent_uid": [92, 93], "update_schedul": 92, "subscrib": [92, 93, 94, 95], "being": [92, 334, 414, 509, 533], "about": [92, 93], "unique_id_from_ag": 92, "disseminate_flight_plan": 92, "dfpu": 93, "parti": [0, 93, 94], "check_flight_crossing_point": 93, "p": [93, 244, 321, 358, 364], "update_id": 93, "progress": [94, 540], "along": [94, 325], "rout": 94, "augment": [94, 95], "hoc": 94, "flightplancross": 94, "network": 94, "observ": 94, "rafp": 95, "impli": 95, "augment_flight_plan": 95, "deriv": 25, "simpi": [25, 33], "previou": [25, 239, 240, 241], "getqueu": [25, 33], "alia": [25, 33], "putqueu": [25, 33], "add_flight": 25, "properti": [25, 33], "count": [25, 33], "user": [25, 33, 34, 299], "get_queu": [25, 33], "pend": [25, 33], "put_queu": [25, 33], "usag": [33, 294, 352], "grant": 33, "immedi": 33, "subclass": 33, "booker": 34, "concurr": 34, "anyth": 34, "n_pax": 43, "origin_uid": 43, "destination_uid": 43, "fare": 43, "dic_soft_cost": 43, "get_itinerary_so_far": 43, "unsaf": 43, "still": 43, "plane": 43, "give_itinerari": 43, "must": [43, 298], "give_new_itinerary_from_last_flight": 43, "k_p": 44, "origin_airport": 46, "destination_airport": 46, "start_tim": 49, "end_tim": 49, "get_slot_from_tim": 49, "flight_info": 49, "slot_typ": 49, "overlap": [49, 325], "get_slot_numb": 49, "ep": [49, 325], "0001": 49, "fall": 49, "increment": [49, 238, 239, 240, 241], "max": [49, 333, 357, 534], "window": 49, "strictli": [49, 345], "counter": 49, "act": 49, "roud": 49, "error": [49, 238, 239, 240, 241], "floor": 49, "get_time_from_slot_numb": 49, "explan": 49, "wsf": [464, 467, 485], "ports_mercuri": [472, 473], "async": 473, "port": [356, 384, 475, 477, 479, 481, 483], "letter": 485, "max_fuel_cost": 504, "10000": [238, 239, 240, 241, 504], "100": [238, 239, 240, 241, 254, 255, 256, 333, 334, 368, 377, 399, 505, 533], "200": [505, 509], "pdf": 505, "normal": [345, 505], "idx_flight": 506, "matrix_cost": [506, 507], "matrix_prob": [506, 507], "alloc": [455, 460, 506, 507, 531], "initial_alloc": [506, 507], "fncd": [508, 531], "current_tim": 509, "mu": [345, 370, 509], "tol": [368, 509], "01": 509, "min_tim": 509, "max_tim": 509, "pp": 510, "indx": 518, "df_costs_slot": 521, "df_delay_slot": 521, "cost_funct": 521, "etas2": 531, "message_befor": [327, 532], "message_aft": [327, 532], "print_funct": [327, 532], "onelin": [327, 532], "condit": [168, 204, 299, 333, 334, 533], "satisfi": [334, 533], "stopiter": [334, 533], "doesn": [334, 533], "traceback": [334, 533], "recent": [334, 533], "actual_spe": 534, "index_fixed_flight": [534, 537, 539], "index_commanded_flight": [534, 537, 539], "nominal_spe": [534, 537, 539], "min_spe": [534, 537, 539], "max_spe": [534, 537, 539], "margin": 534, "jump": 534, "cost_matrix": 534, "probabilities_matrix": 534, "dhd": [534, 537, 539], "chd": [534, 537, 539], "thd": [534, 537, 539], "bigm": [534, 537, 539], "100000": [534, 537, 539], "time_curr": 534, "threshold_valu": 534, "max_holding_tim": 534, "90": 534, "variou": 534, "clip": 534, "command": [0, 534], "silent": [375, 535], "maxnumberflights_eachslot": [537, 539], "maxholiding_min": [537, 539], "regulation_info": [410, 412, 453, 454, 455, 460, 462], "world_build": 411, "credit": 414, "sever": [238, 239, 240, 241, 414], "reinitialis": 414, "import": [307, 392, 415], "airline_uid": 460, "msg_to_hmi": [461, 462], "regulation_id": 461, "engin": [151, 152, 154, 161, 165, 169, 170, 171, 180, 191, 192, 196, 197, 200, 204, 205, 211, 212, 216, 262, 272, 273, 277, 291, 293, 294, 295, 299, 305, 356, 401], "similar": 401, "fashion": 401, "orient": 401, "interact": 401, "session": 401, "notebook": [0, 401], "welcom": 540, "open": [0, 1, 294, 540], "sourc": [1, 540], "mobil": 540, "readm": 540, "contact": 540, "univers": [1, 540], "westminst": [1, 540], "atm": [0, 1, 540], "team": 540, "quickstart": 540, "clone": 0, "repositori": 0, "commandlin": [], "git": 0, "http": [0, 1, 335], "github": [0, 1], "com": [0, 1, 335], "uow": [0, 1], "download": 0, "third": 0, "cd": [0, 238, 239, 240, 241], "submodul": 0, "recurs": 0, "remot": [0, 292], "init": 0, "fresh": 0, "python": [0, 335], "environ": 0, "instal": 540, "packag": 0, "sudo": 0, "apt": 0, "libproj": 0, "dev": 0, "libgeo": 0, "essenti": 0, "python3": 0, "bin": 0, "m": [0, 238, 239, 240, 241, 243, 245, 252, 254, 255, 256, 371], "pip": 0, "shape": [0, 358], "binari": 0, "txt": [0, 1], "zenodo": 0, "org": 0, "doi": 0, "5281": 0, "10211704": 0, "root": 0, "directori": 0, "bada": [0, 238, 239, 240, 241], "4": [0, 311, 319, 325, 338, 352], "support": [0, 298], "licenc": 0, "eurocontrol": 0, "generate_bada3_input": 0, "transform": [0, 252], "ofp": 0, "ptd": [0, 238, 239, 240, 241], "tabl": [0, 159, 167, 173, 174, 176, 179, 181, 182, 184, 188, 189, 190, 192, 193, 194, 198, 200, 201, 208, 209, 210, 238, 239, 240, 241, 288, 293, 299, 302, 304, 305], "help": 0, "path_to": 0, "bada3_fil": 0, "processed_bada3_fil": 0, "ac_perform": 0, "bada3": [0, 151, 152], "your": 0, "openap": 0, "develop": 0, "jupyt": 0, "ipynb": 0, "graphic": 540, "interfac": 540, "gui": [0, 1], "explor": 0, "dashboard": 0, "mercury_gui": 0, "programmat": 540, "show": 0, "term": 0, "testtest": [], "written": [1, 304], "g\u00e9rald": 1, "gurtner": 1, "lui": 1, "delgado": 1, "damir": 1, "valput": 1, "michal": 1, "weiszer": 1, "thank": [1, 321], "tanja": 1, "bolic": 1, "mani": 1, "wave": 1, "gpl": 1, "v3": 1, "andygaspar": 1, "belt": 1, "tool": 1, "uow_tool_belt": 1, "2023": 1, "innaxi": 1, "contributor": 1, "cli": 540, "if_abs": [], "modelstructur": [], "get_new_flight_list": [], "newslot": 230, "former": [], "old": [], "alternative_allocation_rul": 233, "airline_nam": [], "offer": [], "max_off": [], "time_limit": [], "mip_gap": [], "num": 342, "tripl": [], "archetypecostfunct": [], "kind": 311, "flight_nam": [], "delay_cost_vect": [], "arrai": [238, 239, 240, 241, 319, 333, 338, 348, 358], "cost_vect": [], "garbag": [300, 301], "update_slot": [], "latter": 382, "alternative_rul": 232, "ly": [], "bracket": [], "04": [], "00": [], "05": [320, 321, 325, 362, 363], "altervative_rul": [], "air_ctor": [], "slot_index": [], "str": 185, "udpp_prior": [], "tna": [], "slope": [397, 399], "margin_1": [], "jump_1": [], "margin_2": [], "jump_2": [], "empty_slot": [], "xp_problem": [], "schedule_mat": [], "offers_convenience_tol": [], "air_pair": [], "air_tripl": [], "line": [], "df": [219, 220, 223, 224, 261, 262, 267, 268, 298, 299, 317, 318, 319, 323, 324, 328, 336, 337, 338, 355, 372, 388], "datafram": [298, 299, 304, 305, 399], "flight_list": [], "num_flight": [], "num_airlin": [], "uniform": [298, 304], "new_capac": [], "n_flights_first_airlin": [], "custom": 311, "min_margin": [], "max_margin": [], "45": [], "min_jump": [], "max_jump": [], "slot_list": [], "auslot": [], "costvect": [], "vector": [238, 239, 240, 241, 333], "cost_func_archetyp": [], "default_paramet": [], "compute_r_squar": [], "algo_fit": [], "l": [], "bfg": [], "y": [333, 365, 380, 397], "max_delai": [], "fixed_para": [], "8": [319, 338], "approx_fun": [], "powel": [], "best": 281, "val": [], "y_test": [], "y_train": [], "n_point": [], "param": [311, 339, 340, 358], "fixed_param": [], "y_fit": 365, "determin": [298, 365], "iteratbl": 365, "discard": [333, 365], "nan": [321, 333, 365], "list1": [369, 379], "list2": [369, 379], "sorted_flight": [], "hfe": [], "collect": 307, "usual": [], "comin": [], "local": 292, "global": [], "udpploc": [], "udppmerg": [], "easi": [], "sometim": [], "combinedmodel": [], "models_list": [], "assign_slots_after_model": [], "sequential_requir": [], "sequenti": [], "kwargs_init": [], "kwargs_run": [], "nfp": [], "nn": [], "128": [], "n_h": [], "v1": 364, "nf_tot_gam": [], "n_a": [], "game_typ": [], "game": [], "n_f_player": [], "jp": [], "root_dir": [], "allocation1": [], "allocation2": [], "parass": 352, "ret": 352, "thing_to_do": 352, "pouet": [350, 352], "pouic": 352, "11": 352, "def": [350, 352], "yep": 352, "remove_nan": [333, 379], "ith": 379, "cv": [], "cost_coeffici": [], "algo": [], "globaloptimum": [], "wrapper": [292, 298, 304], "n_f": [], "50": [238, 239, 240, 241], "istop": [], "equival": [], "udppprior": [], "sens": [], "merg": 311, "idem": 347, "strong": [], "paradigm": [], "istop_tot": [], "ones": [299, 311], "approxim": [], "archetyp": [], "nn_bound_tot": [], "featur": [], "computaion": [], "rl": [], "matrix": [280, 281, 333], "slote": [], "airport_icao": [147, 202, 283], "db": [151, 152], "bada4_2": 151, "read_dict_wtc_engine_model": [151, 152], "bada4": 151, "ac": [151, 152, 238, 239, 240, 241], "synonim": [151, 152], "ac_model": [151, 238, 248], "bada_cod": 152, "d_crco": 153, "fp_pool_tabl": [153, 175, 185, 186, 187], "fp_pool_m": [153, 187], "trajectory_pool_t": [153, 185, 186, 187, 213, 214, 215, 217, 219], "trajectories_vers": [153, 185, 186, 187, 213, 214, 215, 217], "icao_orig": [154, 168, 185, 197], "icao_dest": [154, 168, 185, 197], "route_pool_o_d_t": [154, 196, 204], "route_pool_o_d_gener": [154, 196, 204], "regulation_at_airport_t": [155, 157, 166, 202], "regulation_at_airport_stat": [155, 166, 202], "regulation_at_airport_days_t": 156, "regulation_at_airport_days_stat": 156, "regulation_at_airport_manu": 157, "regulation_t": 158, "atfm_regulation_at_airport": 158, "regulation_capacity_t": 158, "regulation_capacity_period": 158, "airport_stat": 159, "airline_t": 160, "airline_stat": 160, "airport_t": [161, 162, 163, 164, 170], "airport_info_stat": [161, 162, 163, 170], "icao_id": [161, 162], "airport_curfew": 162, "icao_airport_nam": 162, "curfew_airport_nam": 162, "curfews_db_t": 162, "curfews_db_table2": 162, "only_ecac": 162, "airport_info_t": 162, "curfew_extra_time_t": 162, "taxi_in_t": 163, "taxi_in_stat": 163, "taxi_out_t": 163, "taxi_out_stat": 163, "airport_modif_cap": 164, "airspace_t": [165, 168, 191], "airspace_stat": [165, 168, 191], "appli": [166, 202, 372], "passenger_compensation_stat": 167, "route_pool_t": [168, 185, 186, 191, 196, 197, 203, 205, 214, 215, 217], "route_pool": [168, 185, 186, 191, 203, 214, 215, 217], "route_pool_has_airspace_t": [168, 191], "route_pool_has_airspace_stat": [168, 191], "rps_id": 169, "table_pool": 169, "route_pool_stat": [169, 196, 197, 205], "table_airspac": 169, "route_pool_static_has_airspace_stat": [169, 192], "crco_vat_t": [171, 172], "crco_vat_stat": [171, 172], "crco_fix_t": [171, 172], "crco_fix_stat": [171, 172], "crco_overfly_t": [171, 172], "crco_overfly_stat": [171, 172], "crco_weight_t": [171, 172], "crco_weight_stat": [171, 172], "crco_charges_t": 172, "crco_charges_stat": 172, "ac_eq_badacomputed_stat": [173, 174, 214, 215], "duty_of_care_stat": 176, "eaman_t": 177, "eaman_definit": 177, "uptak": 177, "curfew_estimated_avg_t": 178, "curfew_costs_estim": 178, "increment_cruise_dci_stat": 179, "schedule_run": [181, 182], "flight_schedul": [181, 182, 185, 186, 208, 214, 215, 217], "subset_t": [183, 186, 208, 214, 215], "flight_subset": [183, 185, 186, 208, 214, 215, 217], "set_id": 183, "flight_uncertainties_stat": 184, "fp_pool_point_t": [185, 187], "flight_schedule_t": [185, 186, 214, 215, 217], "flight_subset_t": [185, 217], "scenario_t": [185, 206, 207, 208, 217], "read_spe": 185, "scenario_in_schedul": [185, 186, 208, 214, 215, 217], "sql": [185, 289, 299, 300], "trajectory_pool_id": 185, "route_pool_id": 185, "bada_code_ac_model": 185, "fp_distance_nm": 185, "fpp": 185, "st_x": 185, "st_y": 185, "join": 185, "tp": 185, "rp": 185, "ON": 185, "fsb": 185, "flight_id": 185, "nid": 185, "flight_set": 185, "subset": 185, "AND": 185, "BY": [185, 321], "fp_pool_point_m": 187, "iedf_atfm_stat": 188, "scipy_distr": 188, "iedf_wind_stat": 189, "type_wind": 189, "pax_itinerari": 190, "fab_tabl": 191, "fab_stat": 191, "include_fab": 191, "only_fid": 192, "non_pax_delay_stat": 193, "non_pax_delay_fit_stat": 194, "curfew_cost_t": 195, "curfew_non_pax_cost": 195, "itinerary_flow": [198, 199], "po_run": 199, "possible_itineraries_t": 199, "possible_options_itinerari": 199, "pax_flow_t": 199, "perc_day_min_max_reg_airport": 200, "prob_atfm": 201, "condition_sourc": 203, "delay_paras_t": 207, "output_rng": 209, "model_vers": 209, "soft_cost_delay_stat": 210, "condition_trajectory_id": [211, 212], "ac_eq_badacomputed_static_t": [214, 215], "number_trajectori": [214, 215], "minimum_trajectori": 215, "maximum_trajectori": 215, "tg_run": 216, "sm_run": 216, "rg_run": 216, "field": 216, "trajectory_segments_t": [217, 220], "trajectory_seg": [217, 220, 238, 239, 240, 241], "turnaround_t": 218, "mtt_static": 218, "scenario_path": 222, "queri": [223, 298, 299, 300, 302], "sql_queri": 224, "toml_dict": 226, "filenam": [226, 351], "name_slot": 230, "new_n_pax": [231, 263], "ac_icao": [238, 239, 240, 241, 248], "wtc": [238, 239, 240, 241], "wref": [238, 239, 240, 241], "m_nom": [238, 239, 240, 241], "oew": [238, 239, 240, 241, 248], "mpl": [238, 239, 240, 241, 248], "vfe": [238, 239, 240, 241], "m_max": [238, 239, 240, 241], "hmo": [238, 239, 240, 241], "abc": 238, "apu_fuel_flow": [238, 239, 240, 241], "cc": [238, 239, 240, 241], "apu": [238, 239, 240, 241], "arrival_costs_per_minut": [238, 239, 240, 241], "at_gate_costs_per_minut": [238, 239, 240, 241], "avg_climb_descent_ff": [238, 239, 240, 241], "flv": [238, 239, 240, 241], "ffv": [238, 239, 240, 241], "from_fl": [238, 239, 240, 241], "to_fl": [238, 239, 240, 241], "flow": [238, 239, 240, 241], "fl": [238, 239, 240, 241, 254, 255, 256], "align": [238, 239, 240, 241], "ff": [238, 239, 240, 241], "ft": [238, 239, 240, 241, 243, 244, 245, 246, 252, 254, 255, 256], "kg": [238, 239, 240, 241, 243], "compute_sr": [238, 239, 240, 241], "mass": [238, 239, 240, 241], "cruise_wind": [238, 239, 240, 241], "bank": [238, 239, 240, 241], "specif": [238, 239, 240, 241], "mach": [238, 239, 240, 241, 254, 255, 256], "angl": [238, 239, 240, 241], "tail": [238, 239, 240, 241, 320, 321], "rad": [238, 239, 240, 241], "sr": [238, 239, 240, 241], "specifc": [238, 239, 240, 241], "en_route_costs_per_minut": [238, 239, 240, 241], "error_climb_weight_from_toc": [238, 239, 240, 241], "idea": [238, 239, 240, 241], "minimize_scalar": [238, 239, 240, 241], "weigh": [238, 239, 240, 241], "99999": [238, 239, 240, 241, 323, 324], "ct": [238, 239, 240, 241], "fl_0": [238, 239, 240, 241, 250], "heavi": [238, 239, 240, 241], "minim": [238, 239, 240, 241], "largest": [238, 239, 240, 241], "cover": [238, 239, 240, 241], "altitud": [238, 239, 240, 241, 243, 244, 245, 246, 252], "error_extra_cruis": [238, 239, 240, 241], "weight_1": [238, 239, 240, 241, 250], "distance_to_cov": [238, 239, 240, 241], "fl_cruis": [238, 239, 240, 241], "avg_cruise_wind": [238, 239, 240, 241], "fl0": [238, 239, 240, 241], "whe": [238, 239, 240, 241], "ab": [238, 239, 240, 241], "estimate_climb_fuel_flow": [238, 239, 240, 241], "320": [238, 239, 240, 241], "estimate_descent_fuel_flow": [238, 239, 240, 241], "descend": [238, 239, 240, 241], "interpolate_climb_perform": [238, 239, 240, 241], "ptf": [238, 239, 240, 241], "interpol": [238, 239, 240, 241, 348, 376], "rocd": [238, 239, 240, 241], "gamma": [238, 239, 240, 241], "intepol": [238, 239, 240, 241], "set_climb_fuel_flow_detailled_rate_perform": [238, 239, 240, 241], "griddata": [238, 239, 240, 241], "nearest": [238, 239, 240, 241], "cubic": [238, 239, 240, 241], "climb_perf": [238, 239, 240, 241], "interpolate_cruise_nominal_mach": [238, 239, 240, 241], "nomin": [238, 239, 240, 241], "set_descent_fuel_flow_detailled_rate_perform": [238, 239, 240, 241], "interpolate_descent_perform": [238, 239, 240, 241], "descent_perf": [238, 239, 240, 241], "set_climb_descent_fuel_flow_perform": [238, 239, 240, 241], "climb_ff": [238, 239, 240, 241], "descent_ff": [238, 239, 240, 241], "roc": [238, 239, 240, 241], "funcion": [238, 239, 240, 241], "u": [238, 239, 240, 241], "massess": [238, 239, 240, 241], "rate": [238, 239, 240, 241], "kt": [238, 239, 240, 241, 253, 255, 256], "set_detailled_mach_nomin": [238, 239, 240, 241], "low": [238, 239, 240, 241], "altidu": [238, 239, 240, 241], "fl360": [238, 239, 240, 241], "higher": [238, 239, 240, 241], "trajectory_cruise_estimation_with_fl_chang": [238, 239, 240, 241], "fl_1": [238, 239, 240, 241, 250], "cruise_dist": [238, 239, 240, 241], "use_mref": [238, 239, 240, 241], "max_step": [238, 239, 240, 241], "min_d_dist": [238, 239, 240, 241], "climb_step": [238, 239, 240, 241], "max_climb": [238, 239, 240, 241], "min_dist_remaining_fl": [238, 239, 240, 241], "considereng": [238, 239, 240, 241], "cruise_fl": [238, 239, 240, 241], "360": [238, 239, 240, 241], "everytim": [238, 239, 240, 241], "divis": [238, 239, 240, 241], "trajectory_segment_climb_estimation_from_to": [238, 239, 240, 241], "weight_0": [238, 239, 240, 241, 250], "d_fl": [238, 239, 240, 241], "altitdu": [238, 239, 240, 241], "delta_fl": [238, 239, 240, 241], "trajectory_segment_climb_estimation_from_toc": [238, 239, 240, 241], "trajectory_segment_cruise_estim": [238, 239, 240, 241], "trajectory_segment_descent_estimation_from_lnd": [238, 239, 240, 241], "weight_lnd": [238, 239, 240, 241], "decent_perf": [238, 239, 240, 241], "v_stall": [239, 240, 241], "clbo_mo": [239, 240, 241], "aircraftperform": [239, 240, 241], "compute_drag": [239, 240, 241], "drag": [239, 240, 241], "340": [239, 240, 241], "67010": [239, 240, 241], "78": [239, 240, 241], "estimate_holding_fuel_flow": [239, 240, 241], "m_min": [239, 240, 241], "compute_min_max": [239, 240, 241], "aircraftperformancebada3": [240, 241], "34000": [243, 244, 245, 246, 252], "pa": 244, "288": 245, "sound": 245, "temperatur": 245, "kelvin": [245, 246], "feet": 245, "270": 245, "bada_vers": 248, "distance_orig_fp": 248, "trajectorycompon": [248, 250], "segment_typ": 250, "avg_wind": 250, "ca": 252, "451": 252, "precis": [253, 254, 255, 256], "km": [253, 254, 339, 340], "decim": [253, 254, 255, 256, 339, 340], "result_path": 258, "df_pax_a": 261, "remote_direct": [262, 272, 273, 277], "df_pf": [264, 266, 269], "df_hist": 265, "arrival_delay_label": 269, "tot_arrival_delai": 269, "do_single_valu": 269, "df_f": 275, "df_p": 275, "st": [280, 281], "d_full": 280, "matric": 280, "realt": 281, "con": 289, "path_profil": [291, 292, 294, 295, 296], "uniformis": [291, 292, 295], "mysql": [291, 294, 295, 298, 304, 305], "db_profile_credenti": [291, 294, 295], "ignor": [291, 294, 295, 299, 350], "column": [293, 324, 337, 338, 358, 399], "drop_tabl": 293, "create_t": 293, "deactivate_checks_kei": 293, "usernam": [294, 356], "password": [294, 299, 356], "ssh_tunnel": [294, 356, 382], "file_nam": [297, 298, 301, 303, 306], "other_para": [297, 303, 306], "fmt": [298, 304], "infer": 298, "One": 298, "kwargs_mysql": [298, 304], "read_mysql": [298, 302], "panda": [298, 299, 304, 305, 307, 399], "detect": [298, 311, 325], "fromm": 299, "index_col": 299, "quick": 299, "dirti": 299, "complex": [299, 311], "dictionnari": [299, 311, 313], "sqlalchemi": [299, 305], "db_name": 299, "db_connect": 299, "cnvert": 300, "duckdb": 300, "byte": [301, 306], "whould": 302, "creation": 302, "unstructur": 302, "contrari": 302, "create_fold": [303, 306], "append": [304, 305], "right": [304, 377], "write_sql": 304, "table_nam": 305, "key_for_upd": 305, "keys_for_upd": 305, "primary_dict": 305, "hard_upd": 305, "use_temp_csv": 305, "stuff": 305, "row": 305, "harmonis": 305, "insid": 307, "bloat": [307, 392], "sy": 307, "o": 307, "contextlib": 307, "numpi": [307, 333], "scipi": [307, 346, 347], "matplotlib": 307, "sig_p": [308, 345, 346, 347, 371, 378], "m_p": [308, 346, 378], "dic": [311, 367, 374], "multipl": 311, "sweep": 311, "interdepend": 311, "utilis": 311, "update_prior": 311, "to_upd": 311, "later": 311, "elsa": 311, "abm": 311, "analyse_depend": 311, "hit": 311, "finish": 311, "whose": 311, "indic": 311, "update_with_level": 311, "name_para": 311, "new_valu": 311, "label": 311, "9": [311, 319, 338], "d1": 313, "d2": 313, "fn": [316, 385], "col": [317, 318, 319, 328, 336, 337, 338], "met": [317, 318, 319, 338], "sem": [317, 318, 319, 338], "interv": [318, 337, 372], "q": [319, 338, 371], "6": [319, 338], "7": [319, 338, 398], "sample1": [320, 321, 362], "sample2": [320, 321, 362], "p_valu": [320, 321, 362, 363], "two_tail": [320, 321, 362, 363], "null": [320, 321], "hypothesi": [320, 321], "confid": [320, 321, 362], "word": 320, "signific": [320, 321, 362, 377], "independ": 321, "pearson": [321, 358], "resampl": 321, "elimin": 321, "useless": 321, "pearsonr": 321, "colour": 322, "add_kwarg": 322, "name_min_col1": 323, "flight_type_distance_gcd_km_min": 323, "name_min_col2": 323, "delay_min_minut": [323, 324], "value_column": 323, "add_lower_bound1": 323, "add_upper_bound1": 323, "value_lower_bound1": 323, "value_upper_bound1": 323, "add_lower_bound2": 323, "add_upper_bound2": 323, "value_lower_bound2": 323, "value_upper_bound2": 323, "name_min_col": 324, "name_max_col": 324, "delay_max_minut": 324, "add_lower_bound": 324, "add_upper_bound": 324, "value_lower_bound": 324, "value_upper_bound": 324, "1e": 325, "triangular": 325, "lattic": 325, "rectangl": 325, "node": 325, "abscissa": 325, "size": 325, "small": 325, "networkx": [325, 392], "graph": 325, "center": 326, "key_coord": [326, 373], "depth": [331, 368], "pt1": 332, "pt2": 332, "first_point": 333, "last_point": 333, "f_fit": 333, "p0": 333, "bound": [333, 368], "inf": 333, "signatur": [333, 357], "regress": 333, "p_0": 333, "guess": 333, "boolean": 333, "standaris": 333, "popt": 333, "optim": 333, "pcov": 333, "covari": 333, "f_fit_opt": 333, "linspac": 333, "w": [335, 351], "fast": 335, "stackoverflow": 335, "question": [335, 390], "48999542": 335, "effici": 335, "quantil": [337, 338], "lon1": [339, 340, 344], "lat1": [339, 340, 344], "lon2": [339, 340, 344], "lat2": [339, 340, 344], "calcul": [339, 340], "great": [339, 340], "circl": [339, 340], "earth": [339, 340], "degre": [339, 340], "latex": 342, "po": 343, "tick": 343, "fraction": 344, "mu_p": [345, 346, 347], "desir": [345, 346], "lognorm": [345, 346, 370], "underli": [345, 370], "median": 346, "direcli": 347, "eh": 348, "edf": 348, "invers": 348, "34": 348, "21": 348, "113": 348, "153": 348, "421": 348, "235": 348, "134": 348, "43": 348, "1234": 348, "52": 348, "iedf_x": 348, "obj": 349, "func": 350, "disk": 350, "my_func": 350, "Then": 350, "four": 350, "keyword": 350, "rep": 350, "verbose_load": 350, "tune": 350, "decor": 350, "modernis": 350, "mode": 351, "user_dict": [353, 354], "rename_column_dict": 354, "rename_index": 354, "hostnam": [356, 384], "connector": 356, "mysqldb": 356, "ssh_paramet": [356, 384], "allow_ag": [356, 384], "debug_level": [356, 384], "simpli": [356, 382], "nproc": 357, "a1": 357, "b1": 357, "a2": 357, "b2": 357, "a3": 357, "b3": 357, "25": 357, "40": 357, "corr_typ": 358, "partial": 358, "correl": 358, "remain": 358, "j": 358, "low_mem": [362, 363], "permut": 362, "bootstrap": 362, "slower": 362, "x2": 362, "memori": 362, "diff_sampl": 363, "themselv": 363, "v2": 364, "p1": 364, "p2": 364, "paras_fil": 366, "max_depth": 368, "target": 368, "001": 368, "norm": 370, "shiftx": 373, "shifti": 373, "color1": 376, "color2": 376, "min_valu": [376, 377], "max_valu": [376, 377], "color": [376, 377], "cmap_f": 377, "conjunct": 377, "map": 377, "legend": 377, "cbar": 377, "fig": 377, "colorbar": 377, "sm": 377, "hand": 377, "subplot": 377, "ax": 377, "set_ylabel": 377, "statist": 377, "n_cap": 381, "ssh_hostnam": 382, "ssh_usernam": 382, "ssh_password": 382, "ssh_pkei": 382, "ssh_key_password": 382, "incompat": 382, "ssh_tunnel_connect": 382, "wherea": 382, "paramiko": 382, "ssh": 383, "22": [384, 398], "args_it": 385, "kwargs_it": 385, "to_strip": 386, "listt": 387, "comment": 392, "compulsori": 392, "n_p": [397, 399], "n_o": 397, "loc_climb": 398, "dalt_cruis": 398, "p_change_alt_cruis": 398, "loc_desc": 398, "low_climb": 398, "high_climb": 398, "13": 398, "low_cruis": 398, "12": 398, "high_cruis": 398, "low_desc": 398, "high_desc": 398, "14": 398, "dt": 398, "n_max_climb": 398, "18": 398, "n_max_cruis": 398, "n_min_climb": 398, "n_min_cruis": 398, "traj": [399, 400], "cut_off_altitud": 399, "alt": 399, "vertic": 400, "rubric": 311}, "objects": {"": [[3, 0, 0, "-", "agents"], [97, 0, 0, "-", "core"], [143, 0, 0, "-", "dashboard"], [145, 0, 0, "-", "libs"], [401, 0, 0, "-", "mercury"], [403, 0, 0, "-", "modules"]], "agents": [[4, 0, 0, "-", "agent_base"], [7, 0, 0, "-", "airline_operating_centre"], [15, 0, 0, "-", "aman"], [23, 0, 0, "-", "commodities"], [55, 0, 0, "-", "dman"], [61, 0, 0, "-", "eaman"], [66, 0, 0, "-", "flight"], [77, 0, 0, "-", "ground_airport"], [84, 0, 0, "-", "network_manager"], [90, 0, 0, "-", "radar"], [96, 0, 0, "-", "seed"]], "agents.agent_base": [[5, 1, 1, "", "Agent"], [6, 1, 1, "", "Role"]], "agents.agent_base.Agent": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "apply_agent_modifications"]], "agents.agent_base.Role": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "send"]], "agents.airline_operating_centre": [[8, 1, 1, "", "AirlineFlightPlanner"], [9, 1, 1, "", "AirlineOperatingCentre"], [10, 1, 1, "", "AirlinePaxHandler"], [11, 1, 1, "", "DynamicCostIndexComputer"], [12, 1, 1, "", "FlightPlanSelector"], [13, 1, 1, "", "PassengerReallocation"], [14, 1, 1, "", "TurnaroundOperations"]], "agents.airline_operating_centre.AirlineFlightPlanner": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "build_delay_cost_functions_advanced"], [8, 2, 1, "", "build_delay_cost_functions_air_heuristic"], [8, 2, 1, "", "build_delay_cost_functions_dci_l2"], [8, 2, 1, "", "build_delay_cost_functions_dci_l2_old"], [8, 2, 1, "", "build_delay_cost_functions_heuristic"], [8, 2, 1, "", "build_delay_cost_functions_heuristic_flight"], [8, 2, 1, "", "build_delay_cost_functions_heuristic_pax"], [8, 2, 1, "", "compute_reactionary_delays"], [8, 2, 1, "", "cost_not_wait_for_pax_group"], [8, 2, 1, "", "cost_wait_for_pax_group"], [8, 2, 1, "", "decide_options_alternatives"], [8, 2, 1, "", "reassess_departure_turnaround"], [8, 2, 1, "", "send"]], "agents.airline_operating_centre.AirlineOperatingCentre": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "apply_agent_modifications"], [9, 2, 1, "", "average_cost_function"], [9, 2, 1, "", "average_missed_pax_cost"], [9, 2, 1, "", "get_airline_of_flight"], [9, 2, 1, "", "get_airlines_in_alliance"], [9, 2, 1, "", "get_all_airlines"], [9, 2, 1, "", "get_average_price_on_leg"], [9, 2, 1, "", "get_curfew_buffer"], [9, 2, 1, "", "get_destination"], [9, 2, 1, "", "get_first_obt"], [9, 2, 1, "", "get_flights"], [9, 2, 1, "", "get_ibt"], [9, 2, 1, "", "get_last_ibt"], [9, 2, 1, "", "get_mct"], [9, 2, 1, "", "get_n_pax_to_board"], [9, 2, 1, "", "get_number_seats_flight"], [9, 2, 1, "", "get_number_seats_itinerary"], [9, 2, 1, "", "get_obt"], [9, 2, 1, "", "get_origin"], [9, 2, 1, "", "get_pax_to_board"], [9, 2, 1, "", "get_reactionary_buffer"], [9, 2, 1, "", "get_status"], [9, 2, 1, "", "get_tat"], [9, 2, 1, "", "get_total_travelling_time"], [9, 2, 1, "", "give_compensation_func"], [9, 2, 1, "", "give_delay_distr"], [9, 2, 1, "", "give_duty_of_care_func"], [9, 2, 1, "", "give_non_pax_cost_delay"], [9, 2, 1, "", "own_flights"], [9, 2, 1, "", "receive"], [9, 2, 1, "", "register_aircraft"], [9, 2, 1, "", "register_airport"], [9, 2, 1, "", "register_flight"], [9, 2, 1, "", "register_fp_pool"], [9, 2, 1, "", "register_list_aircraft"], [9, 2, 1, "", "register_nm"], [9, 2, 1, "", "register_pax_itinerary_group"], [9, 2, 1, "", "register_trajectories_pool"], [9, 2, 1, "", "set_log_file"]], "agents.airline_operating_centre.AirlinePaxHandler": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "arrive_pax"], [10, 2, 1, "", "board_pax"], [10, 2, 1, "", "send"]], "agents.airline_operating_centre.DynamicCostIndexComputer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "build_delay_cost_functions_dci_l1"], [11, 2, 1, "", "build_delay_cost_functions_dci_l1_old"], [11, 2, 1, "", "cost_index_assessment"], [11, 2, 1, "", "decide_if_delay_recovery_performed"], [11, 2, 1, "", "plot_costs_dci"], [11, 2, 1, "", "reassess_cost_index_TA0"], [11, 2, 1, "", "reassess_cost_index_TA1"], [11, 2, 1, "", "reassess_cost_index_TA2"], [11, 2, 1, "", "send"], [11, 2, 1, "", "send_speed_up_msg_to_fpu"]], "agents.airline_operating_centre.FlightPlanSelector": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "decide_fp"], [12, 2, 1, "", "select_fp"], [12, 2, 1, "", "send"], [12, 2, 1, "", "send_option_selected"], [12, 2, 1, "", "wait_for_fp_selection_request"]], "agents.airline_operating_centre.PassengerReallocation": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "compute_reallocation_options"], [13, 2, 1, "", "do_reallocation"], [13, 2, 1, "", "reallocate_pax"], [13, 2, 1, "", "send"], [13, 2, 1, "", "send_allocation_pax_request"], [13, 2, 1, "", "wait_for_allocation_pax_request"], [13, 2, 1, "", "wait_for_reallocation_pax_request"], [13, 2, 1, "", "wait_for_remove_pax_from_boarding_list_request"]], "agents.airline_operating_centre.TurnaroundOperations": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "check_arrival"], [14, 2, 1, "", "check_delay_estimation"], [14, 2, 1, "", "send"]], "agents.aman": [[16, 1, 1, "", "AMAN"], [17, 1, 1, "", "ArrivalCancellationHandler"], [18, 1, 1, "", "ArrivalQueuePlannedUpdater"], [19, 1, 1, "", "ArrivalTacticalProvider"], [20, 1, 1, "", "FlightInAMANHandler"], [21, 1, 1, "", "SlotAssigner"], [22, 1, 1, "", "StrategicArrivalQueueBuilder"]], "agents.aman.AMAN": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "apply_agent_modifications"]], "agents.aman.ArrivalCancellationHandler": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "send"]], "agents.aman.ArrivalQueuePlannedUpdater": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "send"]], "agents.aman.ArrivalTacticalProvider": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "send"]], "agents.aman.FlightInAMANHandler": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "send"]], "agents.aman.SlotAssigner": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "send"]], "agents.aman.StrategicArrivalQueueBuilder": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "send"]], "agents.commodities": [[24, 0, 0, "-", "aircraft"], [26, 0, 0, "-", "alliance"], [28, 0, 0, "-", "arrival_slot"], [30, 0, 0, "-", "atfm_delay"], [32, 0, 0, "-", "atfm_regulation"], [35, 0, 0, "-", "central_registry"], [37, 0, 0, "-", "debug_flights"], [38, 0, 0, "-", "flight_plan"], [42, 0, 0, "-", "pax_itinerary_group"], [45, 0, 0, "-", "route"], [48, 0, 0, "-", "slot_queue"], [52, 0, 0, "-", "slot_queue_eaman"]], "agents.commodities.aircraft": [[25, 1, 1, "", "Aircraft"]], "agents.commodities.aircraft.Aircraft": [[25, 3, 1, "", "GetQueue"], [25, 3, 1, "", "PutQueue"], [25, 2, 1, "", "__init__"], [25, 2, 1, "", "add_flight"], [25, 4, 1, "", "capacity"], [25, 4, 1, "", "count"], [25, 3, 1, "", "get"], [25, 3, 1, "", "get_queue"], [25, 3, 1, "", "put"], [25, 3, 1, "", "put_queue"], [25, 3, 1, "", "queue"], [25, 3, 1, "", "release"], [25, 3, 1, "", "request"], [25, 3, 1, "", "users"]], "agents.commodities.alliance": [[27, 1, 1, "", "Alliance"]], "agents.commodities.alliance.Alliance": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "clear"], [27, 2, 1, "", "copy"], [27, 2, 1, "", "fromkeys"], [27, 2, 1, "", "get"], [27, 2, 1, "", "items"], [27, 2, 1, "", "keys"], [27, 2, 1, "", "pop"], [27, 2, 1, "", "popitem"], [27, 2, 1, "", "setdefault"], [27, 2, 1, "", "update"], [27, 2, 1, "", "values"]], "agents.commodities.arrival_slot": [[29, 1, 1, "", "ArrivalSlot"]], "agents.commodities.arrival_slot.ArrivalSlot": [[29, 2, 1, "", "__init__"]], "agents.commodities.atfm_delay": [[31, 1, 1, "", "ATFMDelay"]], "agents.commodities.atfm_delay.ATFMDelay": [[31, 2, 1, "", "__init__"]], "agents.commodities.atfm_regulation": [[33, 1, 1, "", "ATFMBooker"], [34, 1, 1, "", "ATFMRegulation"]], "agents.commodities.atfm_regulation.ATFMBooker": [[33, 3, 1, "", "GetQueue"], [33, 3, 1, "", "PutQueue"], [33, 2, 1, "", "__init__"], [33, 4, 1, "", "capacity"], [33, 4, 1, "", "count"], [33, 3, 1, "", "get"], [33, 3, 1, "", "get_queue"], [33, 3, 1, "", "put"], [33, 3, 1, "", "put_queue"], [33, 3, 1, "", "queue"], [33, 2, 1, "", "release"], [33, 3, 1, "", "request"], [33, 3, 1, "", "users"]], "agents.commodities.atfm_regulation.ATFMRegulation": [[34, 2, 1, "", "__init__"]], "agents.commodities.central_registry": [[36, 1, 1, "", "CentralRegistry"]], "agents.commodities.central_registry.CentralRegistry": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "get_average_price_on_leg"], [36, 2, 1, "", "get_reactionary_buffer"], [36, 2, 1, "", "get_tat"], [36, 2, 1, "", "get_total_travelling_time"], [36, 2, 1, "", "register_agent"], [36, 2, 1, "", "register_airline"], [36, 2, 1, "", "register_network_manager"]], "agents.commodities.flight_plan": [[39, 1, 1, "", "FlightPlan"], [40, 1, 1, "", "FlightPlanPoint"], [41, 5, 1, "", "build_proj"]], "agents.commodities.flight_plan.FlightPlan": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "add_point_original_planned"], [39, 2, 1, "", "find_intersecting_point"], [39, 2, 1, "", "get_estimated_fuel_consumption"], [39, 2, 1, "", "get_eta_wo_atfm"], [39, 2, 1, "", "get_planned_flying_time_to_landing"], [39, 2, 1, "", "name_point"], [39, 2, 1, "", "recompute_speeds_new_point"]], "agents.commodities.flight_plan.FlightPlanPoint": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "my_deep_copy"], [40, 2, 1, "", "print_full"], [40, 2, 1, "", "set_event"], [40, 2, 1, "", "set_name"]], "agents.commodities.pax_itinerary_group": [[43, 1, 1, "", "PaxItineraryGroup"], [44, 5, 1, "", "func"]], "agents.commodities.pax_itinerary_group.PaxItineraryGroup": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "get_itinerary_so_far"], [43, 2, 1, "", "give_itinerary"], [43, 2, 1, "", "give_new_itinerary_from_last_flight"]], "agents.commodities.route": [[46, 1, 1, "", "Route"], [47, 1, 1, "", "RoutePoint"]], "agents.commodities.route.Route": [[46, 2, 1, "", "__init__"]], "agents.commodities.route.RoutePoint": [[47, 2, 1, "", "__init__"]], "agents.commodities.slot_queue": [[49, 1, 1, "", "CapacityPeriod"], [50, 1, 1, "", "Slot"], [51, 1, 1, "", "SlotQueue"]], "agents.commodities.slot_queue.CapacityPeriod": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "get_slot_from_time"], [49, 2, 1, "", "get_slot_number"], [49, 2, 1, "", "get_time_from_slot_number"]], "agents.commodities.slot_queue.Slot": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "print_info"]], "agents.commodities.slot_queue.SlotQueue": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "assign_to_slot"], [51, 2, 1, "", "consolidate_queue"], [51, 2, 1, "", "get_slots_available"], [51, 2, 1, "", "print_selector"], [51, 2, 1, "", "swap_flights"], [51, 2, 1, "", "update_arrival_assigned"]], "agents.commodities.slot_queue_eaman": [[53, 1, 1, "", "EAMANSlot"], [54, 1, 1, "", "EAMANSlotQueue"]], "agents.commodities.slot_queue_eaman.EAMANSlot": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "print_info"]], "agents.commodities.slot_queue_eaman.EAMANSlotQueue": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "assign_to_slot"], [54, 2, 1, "", "consolidate_queue"], [54, 2, 1, "", "get_slots_available"], [54, 2, 1, "", "print_selector"], [54, 2, 1, "", "swap_flights"], [54, 2, 1, "", "update_arrival_assigned"]], "agents.dman": [[56, 1, 1, "", "DMAN"], [57, 1, 1, "", "DepartureCancellationHandler"], [58, 1, 1, "", "DepartureQueueUpdater"], [59, 1, 1, "", "DepartureSlotProvider"], [60, 1, 1, "", "StrategicDepartureQueueBuilder"]], "agents.dman.DMAN": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "apply_agent_modifications"], [56, 2, 1, "", "receive"], [56, 2, 1, "", "register_airport"], [56, 2, 1, "", "register_radar"], [56, 2, 1, "", "set_log_file"]], "agents.dman.DepartureCancellationHandler": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "send"]], "agents.dman.DepartureQueueUpdater": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "send"]], "agents.dman.DepartureSlotProvider": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "send"]], "agents.dman.StrategicDepartureQueueBuilder": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "build_departure_queue"], [60, 2, 1, "", "send"]], "agents.eaman": [[62, 1, 1, "", "ArrivalPlannerProvider"], [63, 1, 1, "", "ArrivalQueuePlannedUpdaterE"], [64, 1, 1, "", "EAMAN"], [65, 1, 1, "", "FlightInAMANHandlerE"]], "agents.eaman.ArrivalPlannerProvider": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "send"]], "agents.eaman.ArrivalQueuePlannedUpdaterE": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "send"]], "agents.eaman.EAMAN": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "apply_agent_modifications"]], "agents.eaman.FlightInAMANHandlerE": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "send"]], "agents.flight": [[67, 1, 1, "", "AircraftDepartingHandler"], [68, 1, 1, "", "DepartureSlotRequester"], [69, 1, 1, "", "FPInfoProvider"], [70, 1, 1, "", "Flight"], [71, 1, 1, "", "FlightArrivalInformationProvider"], [72, 1, 1, "", "FlightPlanConstraintUpdater"], [73, 1, 1, "", "FlightPlanUpdater"], [74, 1, 1, "", "GroundArrivalHandler"], [75, 1, 1, "", "OperateTrajectory"], [76, 1, 1, "", "PotentialDelayRecoveryProvider"]], "agents.flight.AircraftDepartingHandler": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "check_push_back"], [67, 2, 1, "", "do_taxi_out"], [67, 2, 1, "", "send"], [67, 2, 1, "", "wait_for_taxi_out_time"]], "agents.flight.DepartureSlotRequester": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "check_push_back_ready"], [68, 2, 1, "", "send"], [68, 2, 1, "", "wait_for_departure_slot"], [68, 2, 1, "", "wait_for_taxi_out_time_estimation"]], "agents.flight.FPInfoProvider": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "compute_fp_metrics"], [69, 2, 1, "", "send"]], "agents.flight.Flight": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "apply_agent_modifications"], [70, 2, 1, "", "print_full"], [70, 2, 1, "", "receive"], [70, 2, 1, "", "reschedule_fai_request"], [70, 2, 1, "", "set_log_file"], [70, 2, 1, "", "transfer_to_aoc"]], "agents.flight.FlightArrivalInformationProvider": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "check_fai_request"], [71, 2, 1, "", "compute_cost_slots"], [71, 2, 1, "", "provide_flight_arrival_information"], [71, 2, 1, "", "provide_flight_estimated_landing_time"], [71, 2, 1, "", "send"], [71, 2, 1, "", "wait_for_flight_arrival_information_request"], [71, 2, 1, "", "wait_for_flight_estimated_landing_time_request"]], "agents.flight.FlightPlanConstraintUpdater": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "send"], [72, 2, 1, "", "update_flight_plan_constraint_controlled_landing_time"], [72, 2, 1, "", "wait_for_flight_plan_controlled_landing_time_constraint_update_request"]], "agents.flight.FlightPlanUpdater": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "assing_FP_no_compute"], [73, 2, 1, "", "send"], [73, 2, 1, "", "update_FP_information"], [73, 2, 1, "", "update_eobt"], [73, 2, 1, "", "update_speed"], [73, 2, 1, "", "wait_for_FP_assigment_no_compute"], [73, 2, 1, "", "wait_for_FP_update"], [73, 2, 1, "", "wait_for_eobt_update"], [73, 2, 1, "", "wait_for_speed_update"]], "agents.flight.GroundArrivalHandler": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "check_landed"], [74, 2, 1, "", "do_taxi_in"], [74, 2, 1, "", "request_taxi_in_time"], [74, 2, 1, "", "send"], [74, 2, 1, "", "wait_for_taxi_in_time"]], "agents.flight.OperateTrajectory": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "check_taxi_out_done"], [75, 2, 1, "", "send"]], "agents.flight.PotentialDelayRecoveryProvider": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "compute_potential_delay_recovery"], [76, 2, 1, "", "estimate_time_fuel_at_speed_change"], [76, 2, 1, "", "estimate_time_fuel_speed_changes"], [76, 2, 1, "", "provide_potential_delay_recover_information"], [76, 2, 1, "", "send"], [76, 2, 1, "", "wait_for_potential_delay_recover_request"]], "agents.ground_airport": [[78, 1, 1, "", "GroundAirport"], [79, 1, 1, "", "GroundHandler"], [80, 1, 1, "", "ProvideConnectingTime"], [81, 1, 1, "", "TaxiInProvider"], [82, 1, 1, "", "TaxiOutEstimator"], [83, 1, 1, "", "TaxiOutProvider"]], "agents.ground_airport.GroundAirport": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "apply_agent_modifications"], [78, 2, 1, "", "give_connecting_time_dist"], [78, 2, 1, "", "give_taxi_in_time_estimation_dist"], [78, 2, 1, "", "give_taxi_out_time_estimation_dist"], [78, 2, 1, "", "give_taxi_time_add_dist"], [78, 2, 1, "", "give_turnaround_time_dists"], [78, 2, 1, "", "receive"], [78, 2, 1, "", "register_dman"], [78, 2, 1, "", "register_eaman"], [78, 2, 1, "", "register_flight"], [78, 2, 1, "", "set_log_file"]], "agents.ground_airport.GroundHandler": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_turnaround_time"], [79, 2, 1, "", "do_turnaround"], [79, 2, 1, "", "send"], [79, 2, 1, "", "wait_for_turnaround_request"]], "agents.ground_airport.ProvideConnectingTime": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "send"]], "agents.ground_airport.TaxiInProvider": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "compute_taxi_in_time"], [81, 2, 1, "", "send"]], "agents.ground_airport.TaxiOutEstimator": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "send"]], "agents.ground_airport.TaxiOutProvider": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "compute_taxi_out_time"], [83, 2, 1, "", "send"]], "agents.network_manager": [[85, 1, 1, "", "HotspotManager"], [86, 1, 1, "", "NetworkManager"], [87, 1, 1, "", "NetworkManagerAcceptAndDisseminateFP"], [88, 1, 1, "", "NetworkManagerCancelFP"], [89, 1, 1, "", "NetworkManagerFlightPlanProcessing"]], "agents.network_manager.HotspotManager": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "send"]], "agents.network_manager.NetworkManager": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "apply_agent_modifications"], [86, 2, 1, "", "register_atfm_regulation"], [86, 2, 1, "", "remove_regulation_slots_except"]], "agents.network_manager.NetworkManagerAcceptAndDisseminateFP": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "send"]], "agents.network_manager.NetworkManagerCancelFP": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "send"]], "agents.network_manager.NetworkManagerFlightPlanProcessing": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "compute_atfm_delay"], [89, 2, 1, "", "send"]], "agents.radar": [[91, 1, 1, "", "DisseminateCancellationFlightPlan"], [92, 1, 1, "", "DisseminateFlightPlan"], [93, 1, 1, "", "DisseminateFlightPositionUpdate"], [94, 1, 1, "", "Radar"], [95, 1, 1, "", "RadarAugmentFlightPlan"]], "agents.radar.DisseminateCancellationFlightPlan": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "send"]], "agents.radar.DisseminateFlightPlan": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "add_subscription"], [92, 2, 1, "", "disseminate_flight_plan"], [92, 2, 1, "", "send"]], "agents.radar.DisseminateFlightPositionUpdate": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "check_flight_crossing_point"], [93, 2, 1, "", "send"]], "agents.radar.Radar": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "apply_agent_modifications"], [94, 2, 1, "", "receive"], [94, 2, 1, "", "register_airport"], [94, 2, 1, "", "set_log_file"]], "agents.radar.RadarAugmentFlightPlan": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "augment_flight_plan"], [95, 2, 1, "", "send"]], "core": [[98, 0, 0, "-", "delivery_system"], [102, 0, 0, "-", "module_management"], [108, 0, 0, "-", "parametriser"], [113, 0, 0, "-", "read_config"], [124, 0, 0, "-", "results_aggregator"], [130, 0, 0, "-", "scenario_loader"], [136, 0, 0, "-", "simulation_manager"], [140, 0, 0, "-", "world_builder"]], "core.delivery_system": [[99, 1, 1, "", "Letter"], [100, 1, 1, "", "LetterBox"], [101, 1, 1, "", "Postman"]], "core.delivery_system.Letter": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "clear"], [99, 2, 1, "", "copy"], [99, 2, 1, "", "fromkeys"], [99, 2, 1, "", "get"], [99, 2, 1, "", "items"], [99, 2, 1, "", "keys"], [99, 2, 1, "", "pop"], [99, 2, 1, "", "popitem"], [99, 2, 1, "", "setdefault"], [99, 2, 1, "", "update"], [99, 2, 1, "", "values"]], "core.delivery_system.LetterBox": [[100, 2, 1, "", "__init__"]], "core.delivery_system.Postman": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "register_agent"], [101, 2, 1, "", "send_hmi"]], "core.module_management": [[103, 5, 1, "", "check_incompatibilities"], [104, 5, 1, "", "find_actual_module_name"], [105, 5, 1, "", "get_all_modules"], [106, 5, 1, "", "get_module_paras"], [107, 5, 1, "", "load_mercury_module"]], "core.parametriser": [[109, 1, 1, "", "Parametriser"], [110, 1, 1, "", "ParametriserCapacity"], [111, 1, 1, "", "ParametriserSelector"], [112, 1, 1, "", "ParametriserStandard"]], "core.parametriser.Parametriser": [[109, 2, 1, "", "__init__"]], "core.parametriser.ParametriserCapacity": [[110, 2, 1, "", "__init__"]], "core.parametriser.ParametriserSelector": [[111, 2, 1, "", "__init__"]], "core.parametriser.ParametriserStandard": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "apply_alpha_compensation_magnitude"], [112, 2, 1, "", "apply_alpha_doc_magnitude"], [112, 2, 1, "", "apply_alpha_mct"], [112, 2, 1, "", "apply_alpha_non_ATFM"], [112, 2, 1, "", "apply_alpha_tat_mean"], [112, 2, 1, "", "apply_anchor"], [112, 2, 1, "", "apply_dci_max_threshold"], [112, 2, 1, "", "apply_dci_min_threshold"], [112, 2, 1, "", "apply_delta_mct"]], "core.read_config": [[114, 5, 1, "", "add_output_process"], [115, 5, 1, "", "find_paras_categories"], [116, 5, 1, "", "flatten_paras_dict"], [117, 5, 1, "", "read_mercury_config"], [118, 5, 1, "", "read_scenario_config"], [119, 5, 1, "", "read_toml"], [120, 5, 1, "", "transform_conf_paras"], [121, 5, 1, "", "unflatten_profiles"], [122, 5, 1, "", "unfold_paras_dict"], [123, 5, 1, "", "update_scenario_paras_based_on_case_study"]], "core.results_aggregator": [[125, 1, 1, "", "ResultAggregatorAdvanced"], [126, 1, 1, "", "ResultsAggregator"], [127, 1, 1, "", "ResultsAggregatorSelector"], [128, 1, 1, "", "ResultsAggregatorSimple"], [129, 1, 1, "", "ResultsAggregatorSimpleReduced"]], "core.results_aggregator.ResultAggregatorAdvanced": [[125, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregator": [[126, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSelector": [[127, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSimple": [[128, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSimpleReduced": [[129, 2, 1, "", "__init__"]], "core.scenario_loader": [[131, 1, 1, "", "ScenarioLoader"], [132, 1, 1, "", "ScenarioLoaderSelector"], [133, 1, 1, "", "ScenarioLoaderSimple"], [134, 1, 1, "", "ScenarioLoaderStandard"], [135, 1, 1, "", "ScenarioLoaderStandardLocal"]], "core.scenario_loader.ScenarioLoader": [[131, 2, 1, "", "__init__"]], "core.scenario_loader.ScenarioLoaderSelector": [[132, 2, 1, "", "__init__"]], "core.scenario_loader.ScenarioLoaderSimple": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "reload"]], "core.scenario_loader.ScenarioLoaderStandard": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "create_flight_plans"], [134, 2, 1, "", "reload"]], "core.scenario_loader.ScenarioLoaderStandardLocal": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "create_flight_plans"], [135, 2, 1, "", "reload"]], "core.simulation_manager": [[137, 1, 1, "", "Mercury"], [138, 5, 1, "", "build_command"], [139, 5, 1, "", "create_paras_file_from_dict"]], "core.simulation_manager.Mercury": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "build_agents"], [137, 2, 1, "", "compute_path"], [137, 2, 1, "", "run"]], "core.world_builder": [[141, 1, 1, "", "World"], [142, 5, 1, "", "trace"]], "core.world_builder.World": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "create_AMANs"], [141, 2, 1, "", "load_scenario"]], "dashboard": [[144, 0, 0, "-", "mercury_gui"]], "libs": [[146, 0, 0, "-", "airspace_particularities"], [150, 0, 0, "-", "db_access_functions"], [221, 0, 0, "-", "input_manager"], [227, 0, 0, "-", "other_tools"], [236, 0, 0, "-", "performance_trajectory"], [257, 0, 0, "-", "result_manager"], [259, 0, 0, "-", "result_tools"], [278, 0, 0, "-", "uow_tool_belt"]], "libs.airspace_particularities": [[147, 5, 1, "", "get_nas_airport"], [148, 5, 1, "", "is_ATFM_AREA"], [149, 5, 1, "", "is_ECAC"]], "libs.db_access_functions": [[151, 1, 1, "", "DataAccessBADA4"], [152, 1, 1, "", "DataAccessPerformance"], [153, 5, 1, "", "add_crco_to_flights_in_db"], [154, 5, 1, "", "get_information_routes_o_d_generated"], [155, 5, 1, "", "read_ATFM_at_airports"], [156, 5, 1, "", "read_ATFM_at_airports_days"], [157, 5, 1, "", "read_ATFM_at_airports_manual"], [158, 5, 1, "", "read_ATFM_at_airports_old"], [159, 5, 1, "", "read_MCT"], [160, 5, 1, "", "read_airlines_data"], [161, 5, 1, "", "read_airport_coords"], [162, 5, 1, "", "read_airports_curfew_data"], [163, 5, 1, "", "read_airports_data"], [164, 5, 1, "", "read_airports_modif_data"], [165, 5, 1, "", "read_airspace_static"], [166, 5, 1, "", "read_all_regulation_days"], [167, 5, 1, "", "read_compensation_data"], [168, 5, 1, "", "read_coord_trajectory_route"], [169, 5, 1, "", "read_coord_trajectory_route_based_on_id"], [170, 5, 1, "", "read_countries_ATFM_NAS"], [171, 5, 1, "", "read_crco"], [172, 5, 1, "", "read_crco_charges"], [173, 5, 1, "", "read_dict_ac_bada_code_ac_model"], [174, 5, 1, "", "read_dict_ac_type_wtc"], [175, 5, 1, "", "read_dict_fp_pool_ids"], [176, 5, 1, "", "read_doc_data"], [177, 5, 1, "", "read_eamans_data"], [178, 5, 1, "", "read_estimated_avg_costs_curfews"], [179, 5, 1, "", "read_extra_cruise_if_dci"], [180, 5, 1, "", "read_flight_plan_ansps_weights_for_crco"], [181, 5, 1, "", "read_flight_schedules"], [182, 5, 1, "", "read_flight_schedules2"], [183, 5, 1, "", "read_flight_set"], [184, 5, 1, "", "read_flight_uncertainty"], [185, 5, 1, "", "read_fp_pool"], [186, 5, 1, "", "read_fp_pool_missing"], [187, 5, 1, "", "read_fp_routes_without_crco"], [188, 5, 1, "", "read_iedf_atfm"], [189, 5, 1, "", "read_iedf_wind_dict"], [190, 5, 1, "", "read_itineraries_data"], [191, 5, 1, "", "read_nas_route_pool"], [192, 5, 1, "", "read_nas_route_pool_static_o_d"], [193, 5, 1, "", "read_non_pax_cost_data"], [194, 5, 1, "", "read_non_pax_cost_fit_data"], [195, 5, 1, "", "read_nonpax_cost_curfews"], [196, 5, 1, "", "read_od_in_historic_od_computed_pool"], [197, 5, 1, "", "read_orig_destination_via_intermediate_shortest"], [198, 5, 1, "", "read_passenger_flows"], [199, 5, 1, "", "read_passenger_options"], [200, 5, 1, "", "read_perc_min_perc_max_regulations_days"], [201, 5, 1, "", "read_prob_atfm"], [202, 5, 1, "", "read_regulation_days_at_an_airport"], [203, 5, 1, "", "read_route_pool"], [204, 5, 1, "", "read_route_pool_o_d_generated"], [205, 5, 1, "", "read_route_pool_static"], [206, 5, 1, "", "read_scenario"], [207, 5, 1, "", "read_scenario_paras"], [208, 5, 1, "", "read_schedules"], [209, 5, 1, "", "read_seed"], [210, 5, 1, "", "read_soft_cost_date"], [211, 5, 1, "", "read_trajectories"], [212, 5, 1, "", "read_trajectories_dataframe"], [213, 5, 1, "", "read_trajectories_ids"], [214, 5, 1, "", "read_trajectories_missing"], [215, 5, 1, "", "read_trajectories_missing_in_interval"], [216, 5, 1, "", "read_trajectories_options"], [217, 5, 1, "", "read_trajectories_pool"], [218, 5, 1, "", "read_turnaround_data"], [219, 5, 1, "", "save_trajectories_pool"], [220, 5, 1, "", "save_trajectories_segments"]], "libs.db_access_functions.DataAccessBADA4": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "read_dict_wtc_engine_model"]], "libs.db_access_functions.DataAccessPerformance": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "read_dict_wtc_engine_model"]], "libs.input_manager": [[222, 1, 1, "", "Input_manager"], [223, 5, 1, "", "filter_df"], [224, 5, 1, "", "filter_sql"], [225, 5, 1, "", "read_data_from_dict"], [226, 5, 1, "", "write_toml"]], "libs.input_manager.Input_manager": [[222, 2, 1, "", "__init__"]], "libs.other_tools": [[228, 1, 1, "", "FlightDummy"], [229, 1, 1, "", "SlotDummy"], [230, 5, 1, "", "allocation_from_flights"], [231, 5, 1, "", "clone_pax"], [232, 5, 1, "", "compatible_slots"], [233, 5, 1, "", "compute_FPFS_allocation"], [234, 5, 1, "", "distance_func"], [235, 5, 1, "", "flight_str"]], "libs.other_tools.FlightDummy": [[228, 2, 1, "", "__init__"]], "libs.other_tools.SlotDummy": [[229, 2, 1, "", "__init__"]], "libs.performance_trajectory": [[237, 0, 0, "-", "ac_performances"], [242, 0, 0, "-", "standard_atmosphere"], [247, 0, 0, "-", "trajectory"], [251, 0, 0, "-", "unit_conversions"]], "libs.performance_trajectory.ac_performances": [[238, 1, 1, "", "AircraftPerformance"], [239, 1, 1, "", "AircraftPerformanceBada3"], [240, 1, 1, "", "AircraftPerformanceBada3Jet"], [241, 1, 1, "", "AircraftPerformanceBada3TP"]], "libs.performance_trajectory.ac_performances.AircraftPerformance": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "apu_fuel_flow"], [238, 2, 1, "", "arrival_costs_per_minute"], [238, 2, 1, "", "at_gate_costs_per_minute"], [238, 2, 1, "", "avg_climb_descent_ff"], [238, 2, 1, "", "compute_sr"], [238, 2, 1, "", "en_route_costs_per_minute"], [238, 2, 1, "", "error_climb_weight_from_toc"], [238, 2, 1, "", "error_extra_cruise"], [238, 2, 1, "", "estimate_climb_fuel_flow"], [238, 2, 1, "", "estimate_descent_fuel_flow"], [238, 2, 1, "", "interpolate_climb_performances"], [238, 2, 1, "", "interpolate_cruise_nominal_mach"], [238, 2, 1, "", "interpolate_descent_performances"], [238, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [238, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [238, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [238, 2, 1, "", "set_detailled_mach_nominal"], [238, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [238, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [238, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [238, 2, 1, "", "trajectory_segment_cruise_estimation"], [238, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "apu_fuel_flow"], [239, 2, 1, "", "arrival_costs_per_minute"], [239, 2, 1, "", "at_gate_costs_per_minute"], [239, 2, 1, "", "avg_climb_descent_ff"], [239, 2, 1, "", "compute_drag"], [239, 2, 1, "", "compute_sr"], [239, 2, 1, "", "en_route_costs_per_minute"], [239, 2, 1, "", "error_climb_weight_from_toc"], [239, 2, 1, "", "error_extra_cruise"], [239, 2, 1, "", "estimate_climb_fuel_flow"], [239, 2, 1, "", "estimate_descent_fuel_flow"], [239, 2, 1, "", "estimate_holding_fuel_flow"], [239, 2, 1, "", "interpolate_climb_performances"], [239, 2, 1, "", "interpolate_cruise_nominal_mach"], [239, 2, 1, "", "interpolate_descent_performances"], [239, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [239, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [239, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [239, 2, 1, "", "set_detailled_mach_nominal"], [239, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [239, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [239, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [239, 2, 1, "", "trajectory_segment_cruise_estimation"], [239, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "apu_fuel_flow"], [240, 2, 1, "", "arrival_costs_per_minute"], [240, 2, 1, "", "at_gate_costs_per_minute"], [240, 2, 1, "", "avg_climb_descent_ff"], [240, 2, 1, "", "compute_drag"], [240, 2, 1, "", "compute_sr"], [240, 2, 1, "", "en_route_costs_per_minute"], [240, 2, 1, "", "error_climb_weight_from_toc"], [240, 2, 1, "", "error_extra_cruise"], [240, 2, 1, "", "estimate_climb_fuel_flow"], [240, 2, 1, "", "estimate_descent_fuel_flow"], [240, 2, 1, "", "estimate_holding_fuel_flow"], [240, 2, 1, "", "interpolate_climb_performances"], [240, 2, 1, "", "interpolate_cruise_nominal_mach"], [240, 2, 1, "", "interpolate_descent_performances"], [240, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [240, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [240, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [240, 2, 1, "", "set_detailled_mach_nominal"], [240, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [240, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [240, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [240, 2, 1, "", "trajectory_segment_cruise_estimation"], [240, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "apu_fuel_flow"], [241, 2, 1, "", "arrival_costs_per_minute"], [241, 2, 1, "", "at_gate_costs_per_minute"], [241, 2, 1, "", "avg_climb_descent_ff"], [241, 2, 1, "", "compute_drag"], [241, 2, 1, "", "compute_sr"], [241, 2, 1, "", "en_route_costs_per_minute"], [241, 2, 1, "", "error_climb_weight_from_toc"], [241, 2, 1, "", "error_extra_cruise"], [241, 2, 1, "", "estimate_climb_fuel_flow"], [241, 2, 1, "", "estimate_descent_fuel_flow"], [241, 2, 1, "", "estimate_holding_fuel_flow"], [241, 2, 1, "", "interpolate_climb_performances"], [241, 2, 1, "", "interpolate_cruise_nominal_mach"], [241, 2, 1, "", "interpolate_descent_performances"], [241, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [241, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [241, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [241, 2, 1, "", "set_detailled_mach_nominal"], [241, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [241, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [241, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [241, 2, 1, "", "trajectory_segment_cruise_estimation"], [241, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.standard_atmosphere": [[243, 5, 1, "", "density"], [244, 5, 1, "", "pressure"], [245, 5, 1, "", "sound_speed"], [246, 5, 1, "", "temperature"]], "libs.performance_trajectory.trajectory": [[248, 1, 1, "", "Trajectory"], [249, 1, 1, "", "TrajectoryComponent"], [250, 1, 1, "", "TrajectorySegment"]], "libs.performance_trajectory.trajectory.Trajectory": [[248, 2, 1, "", "__init__"]], "libs.performance_trajectory.trajectory.TrajectoryComponent": [[249, 2, 1, "", "__init__"]], "libs.performance_trajectory.trajectory.TrajectorySegment": [[250, 2, 1, "", "__init__"]], "libs.performance_trajectory.unit_conversions": [[252, 5, 1, "", "cas2tas"], [253, 5, 1, "", "km2kt"], [254, 5, 1, "", "km2m"], [255, 5, 1, "", "kt2m"], [256, 5, 1, "", "m2kt"]], "libs.result_manager": [[258, 1, 1, "", "Result_manager"]], "libs.result_manager.Result_manager": [[258, 2, 1, "", "__init__"]], "libs.result_tools": [[260, 5, 1, "", "binarise"], [261, 5, 1, "", "build_aligned_pax_flight_df"], [262, 5, 1, "", "build_single_iteration_df"], [263, 5, 1, "", "clone_pax"], [264, 5, 1, "", "compute_derived_metrics_hist_sim"], [265, 5, 1, "", "compute_derived_metrics_historical"], [266, 5, 1, "", "compute_derived_metrics_pax_generic"], [267, 5, 1, "", "compute_derived_metrics_simulations"], [268, 5, 1, "", "compute_metrics_flights"], [269, 5, 1, "", "compute_metrics_pax"], [270, 5, 1, "", "find_destination_generic"], [271, 5, 1, "", "find_origin_generic"], [272, 5, 1, "", "get_historical_flights"], [273, 5, 1, "", "get_pax_schedules"], [274, 5, 1, "", "merge_hist_sim"], [275, 5, 1, "", "merge_pax_flights"], [276, 5, 1, "", "produce_hist_sim_df"], [277, 5, 1, "", "produce_historical_flight_pax_df"]], "libs.uow_tool_belt": [[279, 0, 0, "-", "DTW"], [282, 0, 0, "-", "airspace_particularities"], [286, 0, 0, "-", "connection_tools"], [307, 0, 0, "-", "general_tools"], [391, 0, 0, "-", "logging"], [392, 0, 0, "-", "network_tools"], [393, 0, 0, "-", "plot_tools"], [396, 0, 0, "-", "trajectory_tools"]], "libs.uow_tool_belt.DTW": [[280, 5, 1, "", "dtw"], [281, 5, 1, "", "dtw_path"]], "libs.uow_tool_belt.airspace_particularities": [[283, 5, 1, "", "get_nas_airport"], [284, 5, 1, "", "is_ATFM_AREA"], [285, 5, 1, "", "is_ECAC"]], "libs.uow_tool_belt.connection_tools": [[287, 1, 1, "", "EmptyConnection"], [288, 5, 1, "", "create_indexes_in_table"], [289, 5, 1, "", "do_query"], [290, 5, 1, "", "extract_ssh_parameters"], [291, 5, 1, "", "file_connection"], [292, 5, 1, "", "generic_connection"], [293, 5, 1, "", "load_data_infile"], [294, 5, 1, "", "mysql_connection"], [295, 5, 1, "", "parquet_connection"], [296, 5, 1, "", "read_cred"], [297, 5, 1, "", "read_csv"], [298, 5, 1, "", "read_data"], [299, 5, 1, "", "read_mysql"], [300, 5, 1, "", "read_parquet"], [301, 5, 1, "", "read_pickle"], [302, 5, 1, "", "run_mysql_query"], [303, 5, 1, "", "write_csv"], [304, 5, 1, "", "write_data"], [305, 5, 1, "", "write_mysql"], [306, 5, 1, "", "write_pickle"]], "libs.uow_tool_belt.connection_tools.EmptyConnection": [[287, 2, 1, "", "__init__"], [287, 2, 1, "", "clear"], [287, 2, 1, "", "copy"], [287, 2, 1, "", "fromkeys"], [287, 2, 1, "", "get"], [287, 2, 1, "", "items"], [287, 2, 1, "", "keys"], [287, 2, 1, "", "pop"], [287, 2, 1, "", "popitem"], [287, 2, 1, "", "setdefault"], [287, 2, 1, "", "update"], [287, 2, 1, "", "values"]], "libs.uow_tool_belt.general_tools": [[308, 5, 1, "", "A_B"], [309, 1, 1, "", "DummyFile"], [310, 1, 1, "", "HiddenPrints"], [311, 1, 1, "", "Paras"], [312, 1, 1, "", "TwoWayDict"], [313, 5, 1, "", "add_dicts"], [314, 5, 1, "", "alert_print"], [315, 5, 1, "", "alphabet"], [316, 5, 1, "", "apply_args_and_kwargs"], [317, 5, 1, "", "average_on_downsampled_interval"], [318, 5, 1, "", "average_on_intervals"], [319, 5, 1, "", "average_on_quantiles"], [320, 5, 1, "", "bootstrap_mean_test"], [321, 5, 1, "", "bootstrap_test"], [322, 5, 1, "", "build_col_print_func"], [323, 5, 1, "", "build_step_bivariate_function"], [324, 5, 1, "", "build_step_multi_valued_function"], [325, 5, 1, "", "build_triangular"], [326, 5, 1, "", "center_spatial_network"], [327, 5, 1, "", "clock_time"], [328, 5, 1, "", "compute_percentile_with_weight"], [329, 5, 1, "", "counter"], [330, 5, 1, "", "create_dir"], [331, 5, 1, "", "dict_depth"], [332, 5, 1, "", "distance_euclidean"], [333, 5, 1, "", "fit"], [334, 5, 1, "", "get_first_matching_element"], [335, 5, 1, "", "gini"], [336, 5, 1, "", "groupby_on_downsampled_interval"], [337, 5, 1, "", "groupby_on_intervals"], [338, 5, 1, "", "groupby_on_quantiles"], [339, 5, 1, "", "haversine"], [340, 5, 1, "", "haversine_old"], [341, 5, 1, "", "hex_to_rgb"], [342, 5, 1, "", "human_format"], [343, 5, 1, "", "human_format_for_ticks"], [344, 5, 1, "", "intermediate_point"], [345, 5, 1, "", "inv_mu_sig_lognorm"], [346, 5, 1, "", "inv_s_loc_scale_lognorm"], [347, 5, 1, "", "inv_s_scale_lognorm"], [348, 5, 1, "", "inverted_edf"], [349, 5, 1, "", "keep_time"], [350, 5, 1, "", "loading"], [351, 5, 1, "", "logging"], [352, 5, 1, "", "loop"], [353, 5, 1, "", "make_df_with_3_levels"], [354, 5, 1, "", "make_df_with_3_levels_quick"], [355, 5, 1, "", "make_nested_dict_from_df"], [356, 5, 1, "", "mysql_server"], [357, 5, 1, "", "parallelize"], [358, 5, 1, "", "partial_corr"], [359, 5, 1, "", "percentile_10"], [360, 5, 1, "", "percentile_90"], [361, 5, 1, "", "percentile_custom"], [362, 5, 1, "", "permutation_test"], [363, 5, 1, "", "permutation_test_only_diff"], [364, 5, 1, "", "proportional"], [365, 5, 1, "", "r_squared"], [366, 5, 1, "", "read_paras"], [367, 5, 1, "", "recursive_concat"], [368, 5, 1, "", "recursive_minimization"], [369, 5, 1, "", "remove_nan_coupled_lists"], [370, 5, 1, "", "scale_and_s_from_mean_sigma_lognorm"], [371, 5, 1, "", "scale_and_s_from_quantile_sigma_lognorm"], [372, 5, 1, "", "set_interval"], [373, 5, 1, "", "shift_spatial_network"], [374, 5, 1, "", "show_dic"], [375, 5, 1, "", "silence"], [376, 5, 1, "", "simple_color_map_function"], [377, 5, 1, "", "simple_colormap_object"], [378, 5, 1, "", "sol_Bs"], [379, 5, 1, "", "sort_lists"], [380, 5, 1, "", "sort_paired_values"], [381, 5, 1, "", "spread_integer"], [382, 5, 1, "", "ssh_client_connection"], [383, 5, 1, "", "ssh_copy"], [384, 5, 1, "", "ssh_tunnel_connection"], [385, 5, 1, "", "starmap_with_kwargs"], [386, 5, 1, "", "strip_string"], [387, 5, 1, "", "timeit"], [388, 5, 1, "", "weight_avg"], [389, 5, 1, "", "write_on_file"], [390, 5, 1, "", "yes"]], "libs.uow_tool_belt.general_tools.DummyFile": [[309, 2, 1, "", "__init__"]], "libs.uow_tool_belt.general_tools.HiddenPrints": [[310, 2, 1, "", "__init__"]], "libs.uow_tool_belt.general_tools.Paras": [[311, 2, 1, "", "__init__"], [311, 2, 1, "", "analyse_dependance"], [311, 2, 1, "", "clear"], [311, 2, 1, "", "copy"], [311, 2, 1, "", "fromkeys"], [311, 2, 1, "", "get"], [311, 2, 1, "", "items"], [311, 2, 1, "", "keys"], [311, 2, 1, "", "pop"], [311, 2, 1, "", "popitem"], [311, 2, 1, "", "setdefault"], [311, 2, 1, "", "update"], [311, 2, 1, "", "update_with_levels"], [311, 2, 1, "", "values"]], "libs.uow_tool_belt.general_tools.TwoWayDict": [[312, 2, 1, "", "__init__"], [312, 2, 1, "", "clear"], [312, 2, 1, "", "copy"], [312, 2, 1, "", "fromkeys"], [312, 2, 1, "", "get"], [312, 2, 1, "", "items"], [312, 2, 1, "", "keys"], [312, 2, 1, "", "pop"], [312, 2, 1, "", "popitem"], [312, 2, 1, "", "setdefault"], [312, 2, 1, "", "update"], [312, 2, 1, "", "values"]], "libs.uow_tool_belt.plot_tools": [[394, 5, 1, "", "bar_plot_template"], [395, 5, 1, "", "savefig"]], "libs.uow_tool_belt.trajectory_tools": [[397, 5, 1, "", "compute_ab"], [398, 5, 1, "", "create_vertical_trajectory"], [399, 5, 1, "", "detect_toc_tod"], [400, 5, 1, "", "plot_traj"]], "mercury": [[402, 5, 1, "", "manual_bool_cast"]], "modules": [[404, 0, 0, "-", "Auction"], [408, 0, 0, "-", "CM"], [418, 0, 0, "-", "FAC"], [436, 0, 0, "-", "FP"], [442, 0, 0, "-", "HMI_HOTSPOT"], [490, 0, 0, "-", "TA"], [500, 0, 0, "-", "nostromo_EAMAN"]], "modules.Auction": [[405, 0, 0, "-", "Auction"], [406, 0, 0, "-", "module_definition"], [407, 0, 0, "-", "paras_Auction"]], "modules.CM": [[409, 0, 0, "-", "CM"], [416, 0, 0, "-", "module_definition"], [417, 0, 0, "-", "paras_CM"]], "modules.CM.CM": [[410, 5, 1, "", "compute_adequate_default_parameters"], [411, 5, 1, "", "get_metric"], [412, 5, 1, "", "make_hotspot_decision_CM"], [413, 5, 1, "", "on_finalise_CM"], [414, 5, 1, "", "on_init_AOC"], [415, 5, 1, "", "on_prepare_CM"]], "modules.FAC": [[419, 0, 0, "-", "FAC_FIFO_queue"], [425, 0, 0, "-", "FAC_total_cost"], [431, 0, 0, "-", "FAC_total_delay"], [435, 0, 0, "-", "module_definition"]], "modules.FAC.FAC_FIFO_queue": [[420, 5, 1, "", "build_arrival_queue"], [421, 5, 1, "", "update_arrival_queue"], [422, 5, 1, "", "wait_for_flight_arrival_information_queue"], [423, 5, 1, "", "wait_for_flight_arrival_information_request_provide_landing_time"], [424, 5, 1, "", "wait_for_flight_in_planning_horizon_queue"]], "modules.FAC.FAC_total_cost": [[426, 5, 1, "", "compute_cost_slots_total"], [427, 5, 1, "", "compute_costs_slots_arrival_delay_cost_func_slots_times"], [428, 5, 1, "", "compute_costs_slots_computing_all_costs"], [429, 5, 1, "", "request_cost_delay_function"], [430, 5, 1, "", "wait_for_cost_delay_function"]], "modules.FAC.FAC_total_delay": [[432, 5, 1, "", "compute_total_delay_slots"], [433, 5, 1, "", "request_time_propagate_delay"], [434, 5, 1, "", "wait_for_propagation_delay_time"]], "modules.FP": [[437, 0, 0, "-", "FP_L1"], [439, 0, 0, "-", "FP_L2"], [441, 0, 0, "-", "module_definition"]], "modules.FP.FP_L1": [[438, 5, 1, "", "consider_flight_swap_FP1"]], "modules.FP.FP_L2": [[440, 5, 1, "", "consider_flight_swap_FP2"]], "modules.HMI_HOTSPOT": [[443, 0, 0, "-", "HMI_FP_SEL"], [452, 0, 0, "-", "HMI_HOTSPOT"], [463, 0, 0, "-", "HMI_HOTSPOT_client_text"], [466, 0, 0, "-", "HMI_HOTSPOT_client_text2"], [469, 0, 0, "-", "HMI_HOTSPOT_client_text3"], [471, 0, 0, "-", "HMI_server"], [474, 0, 0, "-", "client_test"], [476, 0, 0, "-", "client_test2"], [478, 0, 0, "-", "client_test_hmi"], [480, 0, 0, "-", "client_test_hmi2"], [482, 0, 0, "-", "client_test_mercury"], [484, 0, 0, "-", "hmi_regulation_test_hmi"], [487, 0, 0, "-", "module_definition"], [488, 0, 0, "-", "paras_HMI_FP_SEL"], [489, 0, 0, "-", "paras_HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_FP_SEL": [[444, 5, 1, "", "on_init_hmi"], [445, 5, 1, "", "on_init_remote_hmi"], [446, 5, 1, "", "receive_remote_hmi"], [447, 5, 1, "", "select_fp_cli"], [448, 5, 1, "", "select_fp_hmi"], [449, 5, 1, "", "select_fp_remote_hmi"], [450, 5, 1, "", "send_fp_options_to_hmi"], [451, 5, 1, "", "wait_for_fp_remote_hmi_answer"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT": [[453, 5, 1, "", "compute_hotspot_decision"], [454, 5, 1, "", "make_hotspot_decision_hmi"], [455, 5, 1, "", "notify_AOCs_of_final_allocation_hmi"], [456, 5, 1, "", "on_init_remote_hmi"], [457, 5, 1, "", "receive_final_allocation"], [458, 5, 1, "", "receive_new_messages"], [459, 5, 1, "", "receive_regulation_decisions_remote_hmi"], [460, 5, 1, "", "send_final_allocation_to_airline"], [461, 5, 1, "", "send_final_allocation_to_hmi"], [462, 5, 1, "", "send_regulation_info_to_hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text": [[464, 1, 1, "", "MessageClient"], [465, 1, 1, "", "WindowUDPP"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient": [[464, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP": [[465, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2": [[467, 1, 1, "", "MessageClient"], [468, 1, 1, "", "WindowUDPP"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient": [[467, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP": [[468, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3": [[470, 1, 1, "", "MessageClient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient": [[470, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_server": [[472, 1, 1, "", "MercuryServer"], [473, 5, 1, "", "main"]], "modules.HMI_HOTSPOT.HMI_server.MercuryServer": [[472, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test": [[475, 1, 1, "", "Client"]], "modules.HMI_HOTSPOT.client_test.Client": [[475, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test2": [[477, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test2.ClientHMI": [[477, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_hmi": [[479, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI": [[479, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_hmi2": [[481, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI": [[481, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_mercury": [[483, 1, 1, "", "ClientMercury"]], "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury": [[483, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi": [[485, 1, 1, "", "MessageClient"], [486, 1, 1, "", "WindowSelectFP"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient": [[485, 1, 1, "", "Letter"], [485, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter": [[485, 2, 1, "", "clear"], [485, 2, 1, "", "copy"], [485, 2, 1, "", "fromkeys"], [485, 2, 1, "", "get"], [485, 2, 1, "", "items"], [485, 2, 1, "", "keys"], [485, 2, 1, "", "pop"], [485, 2, 1, "", "popitem"], [485, 2, 1, "", "setdefault"], [485, 2, 1, "", "update"], [485, 2, 1, "", "values"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP": [[486, 2, 1, "", "__init__"]], "modules.TA": [[491, 0, 0, "-", "TA_L1"], [495, 0, 0, "-", "TA_L2"], [499, 0, 0, "-", "module_definition"]], "modules.TA.TA_L1": [[492, 5, 1, "", "consider_waiting_pax_TA1"], [493, 5, 1, "", "cost_index_assessment_TA1"], [494, 5, 1, "", "wait_for_toc_reached_message_TA1"]], "modules.TA.TA_L2": [[496, 5, 1, "", "consider_waiting_pax_TA2"], [497, 5, 1, "", "cost_index_assessment_TA2"], [498, 5, 1, "", "wait_for_toc_reached_message_TA2"]], "modules.nostromo_EAMAN": [[501, 0, 0, "-", "module_definition"], [502, 0, 0, "-", "nostromo_EAMAN"], [528, 0, 0, "-", "optimiser_advanced"], [536, 0, 0, "-", "optimiser_baseline"], [538, 0, 0, "-", "optimiser_baseline_fast"]], "modules.nostromo_EAMAN.nostromo_EAMAN": [[503, 5, 1, "", "ask_radar_update_NEW"], [504, 5, 1, "", "build_matrices"], [505, 5, 1, "", "build_stuff"], [506, 5, 1, "", "compute_allocation_cost_for_flight"], [507, 5, 1, "", "compute_allocation_for_all_flights"], [508, 5, 1, "", "compute_initial_allocation"], [509, 5, 1, "", "generate_probas_speed_gen"], [510, 5, 1, "", "get_p"], [511, 5, 1, "", "notify_flight_in_data_horizon"], [512, 5, 1, "", "notify_flight_landing"], [513, 5, 1, "", "on_init"], [514, 5, 1, "", "on_init_agent"], [515, 5, 1, "", "prepare_data_for_optimizer_advanced"], [516, 5, 1, "", "prepare_data_for_optimizer_baseline"], [517, 5, 1, "", "receive_new_messages"], [518, 5, 1, "", "rescale"], [519, 5, 1, "", "send_request_for_cost_function"], [520, 5, 1, "", "send_request_for_potential_delay_recovery_request"], [521, 5, 1, "", "update_arrival_sequence_planning_NEW"], [522, 5, 1, "", "wait_for_cost_function"], [523, 5, 1, "", "wait_for_estimated_landing_time_NEW"], [524, 5, 1, "", "wait_for_flight_arrival_information_NEW"], [525, 5, 1, "", "wait_for_flight_in_data_horizon"], [526, 5, 1, "", "wait_for_flight_in_eaman_NEW"], [527, 5, 1, "", "wait_for_flight_potential_delay_recover_information"]], "modules.nostromo_EAMAN.optimiser_advanced": [[529, 1, 1, "", "DummyFile"], [530, 6, 1, "", "NoSolution"], [531, 5, 1, "", "allocation_from_variable"], [532, 5, 1, "", "clock_time"], [533, 5, 1, "", "get_first_matching_element"], [534, 5, 1, "", "optimizer_advanced"], [535, 5, 1, "", "silence"]], "modules.nostromo_EAMAN.optimiser_advanced.DummyFile": [[529, 2, 1, "", "__init__"]], "modules.nostromo_EAMAN.optimiser_baseline": [[537, 5, 1, "", "optimizer_baseline"]], "modules.nostromo_EAMAN.optimiser_baseline_fast": [[539, 5, 1, "", "optimizer_baseline"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 2, "hola": [], "welcom": [], "test_sphinx": [], "": 540, "document": 540, "content": 540, "indic": 540, "tabl": 540, "core": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "module_manag": [102, 103, 104, 105, 106, 107], "check_incompat": 103, "find_actual_module_nam": 104, "paramet": [], "return": [], "get_all_modul": 105, "get_module_para": 106, "load_mercury_modul": 107, "read_config": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "add_output_process": 114, "find_paras_categori": 115, "flatten_paras_dict": 116, "read_mercury_config": 117, "read_scenario_config": 118, "read_toml": 119, "transform_conf_para": 120, "unflatten_profil": 121, "unfold_paras_dict": 122, "update_scenario_paras_based_on_case_studi": 123, "simulation_manag": [136, 137, 138, 139], "mercuri": [0, 137, 401, 402, 540], "build_command": 138, "create_paras_file_from_dict": 139, "delivery_system": [98, 99, 100, 101], "letter": 99, "letterbox": 100, "postman": 101, "parametris": [108, 109, 110, 111, 112], "parametrisercapac": 110, "parametriserselector": 111, "parametriserstandard": 112, "results_aggreg": [124, 125, 126, 127, 128, 129], "resultaggregatoradvanc": 125, "resultsaggreg": 126, "resultsaggregatorselector": 127, "resultsaggregatorsimpl": 128, "resultsaggregatorsimplereduc": 129, "scenario_load": [130, 131, 132, 133, 134, 135], "scenarioload": 131, "scenarioloaderselector": 132, "scenarioloadersimpl": 133, "scenarioloaderstandard": 134, "scenarioloaderstandardloc": 135, "world_build": [140, 141, 142], "world": 141, "trace": 142, "agent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "agent_bas": [4, 5, 6], "role": 6, "commod": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "allianc": [26, 27], "arrival_slot": [28, 29], "arrivalslot": 29, "atfm_delai": [30, 31], "atfmdelai": 31, "central_registri": [35, 36], "centralregistri": 36, "debug_flight": 37, "flight_plan": [38, 39, 40, 41], "flightplan": 39, "flightplanpoint": 40, "build_proj": 41, "slot_queue_eaman": [52, 53, 54], "eamanslot": 53, "eamanslotqueu": 54, "network_manag": [84, 85, 86, 87, 88, 89], "hotspotmanag": 85, "networkmanag": 86, "networkmanageracceptanddisseminatefp": 87, "networkmanagercancelfp": 88, "networkmanagerflightplanprocess": 89, "seed": 96, "aman": [15, 16, 17, 18, 19, 20, 21, 22], "arrivalcancellationhandl": 17, "arrivalqueueplannedupdat": 18, "arrivaltacticalprovid": 19, "flightinamanhandl": 20, "slotassign": 21, "strategicarrivalqueuebuild": 22, "airline_operating_centr": [7, 8, 9, 10, 11, 12, 13, 14], "airlineflightplann": 8, "airlineoperatingcentr": 9, "airlinepaxhandl": 10, "dynamiccostindexcomput": 11, "flightplanselector": 12, "passengerrealloc": 13, "turnaroundoper": 14, "dman": [55, 56, 57, 58, 59, 60], "departurecancellationhandl": 57, "departurequeueupdat": 58, "departureslotprovid": 59, "strategicdeparturequeuebuild": 60, "eaman": [61, 62, 63, 64, 65], "arrivalplannerprovid": 62, "arrivalqueueplannedupdater": 63, "flightinamanhandler": 65, "ground_airport": [77, 78, 79, 80, 81, 82, 83], "groundairport": 78, "groundhandl": 79, "provideconnectingtim": 80, "taxiinprovid": 81, "taxioutestim": 82, "taxioutprovid": 83, "flight": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "aircraftdepartinghandl": 67, "departureslotrequest": 68, "fpinfoprovid": 69, "flightarrivalinformationprovid": 71, "flightplanconstraintupdat": 72, "flightplanupdat": 73, "groundarrivalhandl": 74, "operatetrajectori": 75, "potentialdelayrecoveryprovid": 76, "radar": [90, 91, 92, 93, 94, 95], "disseminatecancellationflightplan": 91, "disseminateflightplan": 92, "disseminateflightpositionupd": 93, "radaraugmentflightplan": 95, "aircraft": [24, 25], "atfm_regul": [32, 33, 34], "atfmbook": 33, "atfmregul": 34, "pax_itinerary_group": [42, 43, 44], "paxitinerarygroup": 43, "func": 44, "rout": [45, 46, 47], "routepoint": 47, "slot_queu": [48, 49, 50, 51], "capacityperiod": 49, "slot": 50, "slotqueu": 51, "modul": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "auction": [404, 405, 406, 407], "module_definit": [406, 416, 435, 441, 487, 499, 501], "paras_auct": 407, "cm": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "paras_cm": 417, "fac": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "fac_fifo_queu": [419, 420, 421, 422, 423, 424], "build_arrival_queu": 420, "update_arrival_queu": 421, "wait_for_flight_arrival_information_queu": 422, "wait_for_flight_arrival_information_request_provide_landing_tim": 423, "wait_for_flight_in_planning_horizon_queu": 424, "fp": [436, 437, 438, 439, 440, 441], "fp_l1": [437, 438], "consider_flight_swap_fp1": 438, "fp_l2": [439, 440], "consider_flight_swap_fp2": 440, "hmi_hotspot": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489], "hmi_hotspot_client_text": [463, 464, 465], "messagecli": [464, 467, 470, 485], "windowudpp": [465, 468], "hmi_hotspot_client_text2": [466, 467, 468], "hmi_hotspot_client_text3": [469, 470], "hmi_serv": [471, 472, 473], "mercuryserv": 472, "main": 473, "client_test": [474, 475], "client": 475, "client_test2": [476, 477], "clienthmi": [477, 479, 481], "client_test_hmi": [478, 479], "client_test_hmi2": [480, 481], "client_test_mercuri": [482, 483], "clientmercuri": 483, "hmi_regulation_test_hmi": [484, 485, 486], "windowselectfp": 486, "paras_hmi_fp_sel": 488, "paras_hmi_hotspot": 489, "ta": [490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "ta_l1": [491, 492, 493, 494], "consider_waiting_pax_ta1": 492, "cost_index_assessment_ta1": 493, "wait_for_toc_reached_message_ta1": 494, "ta_l2": [495, 496, 497, 498], "consider_waiting_pax_ta2": 496, "cost_index_assessment_ta2": 497, "wait_for_toc_reached_message_ta2": 498, "nostromo_eaman": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "ask_radar_update_new": 503, "build_matric": 504, "build_stuff": 505, "compute_allocation_cost_for_flight": 506, "compute_allocation_for_all_flight": 507, "compute_initial_alloc": 508, "generate_probas_speed_gen": 509, "get_p": 510, "notify_flight_in_data_horizon": 511, "notify_flight_land": 512, "on_init": 513, "on_init_ag": 514, "prepare_data_for_optimizer_advanc": 515, "prepare_data_for_optimizer_baselin": 516, "receive_new_messag": [458, 517], "rescal": 518, "send_request_for_cost_funct": 519, "send_request_for_potential_delay_recovery_request": 520, "update_arrival_sequence_planning_new": 521, "wait_for_cost_funct": 522, "wait_for_estimated_landing_time_new": 523, "wait_for_flight_arrival_information_new": 524, "wait_for_flight_in_data_horizon": 525, "wait_for_flight_in_eaman_new": 526, "wait_for_flight_potential_delay_recover_inform": 527, "optimiser_advanc": [528, 529, 530, 531, 532, 533, 534, 535], "dummyfil": [309, 529], "nosolut": 530, "allocation_from_vari": 531, "clock_tim": [327, 532], "get_first_matching_el": [334, 533], "optimizer_advanc": 534, "silenc": [375, 535], "optimiser_baselin": [536, 537], "optimizer_baselin": [537, 539], "optimiser_baseline_fast": [538, 539], "compute_adequate_default_paramet": 410, "get_metr": 411, "make_hotspot_decision_cm": 412, "on_finalise_cm": 413, "on_init_aoc": 414, "on_prepare_cm": 415, "fac_total_cost": [425, 426, 427, 428, 429, 430], "compute_cost_slots_tot": 426, "compute_costs_slots_arrival_delay_cost_func_slots_tim": 427, "compute_costs_slots_computing_all_cost": 428, "request_cost_delay_funct": 429, "wait_for_cost_delay_funct": 430, "fac_total_delai": [431, 432, 433, 434], "compute_total_delay_slot": 432, "request_time_propagate_delai": 433, "wait_for_propagation_delay_tim": 434, "hmi_fp_sel": [443, 444, 445, 446, 447, 448, 449, 450, 451], "on_init_hmi": 444, "on_init_remote_hmi": [445, 456], "receive_remote_hmi": 446, "select_fp_cli": 447, "select_fp_hmi": 448, "select_fp_remote_hmi": 449, "send_fp_options_to_hmi": 450, "wait_for_fp_remote_hmi_answ": 451, "compute_hotspot_decis": 453, "make_hotspot_decision_hmi": 454, "notify_aocs_of_final_allocation_hmi": 455, "receive_final_alloc": 457, "receive_regulation_decisions_remote_hmi": 459, "send_final_allocation_to_airlin": 460, "send_final_allocation_to_hmi": 461, "send_regulation_info_to_hmi": 462, "dashboard": [143, 144], "mercury_gui": 144, "manual_bool_cast": 402, "quickstart": 0, "instal": 0, "run": 0, "cli": 0, "version": 0, "programmat": 0, "us": 0, "graphic": 0, "interfac": 0, "about": 1, "authorship": 1, "licenc": 1, "copyright": 1, "lib": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "hotspot": [], "globalfun": [], "hiddenprint": 310, "preferences_from_flight": [], "globaloptimum": [], "solversgo": [], "gurobi_solver_go": [], "gogurobi": [], "stop": [], "istop": [], "airlineandflight": [], "istopairlin": [], "solver": [], "gurobi_offer_solv": [], "gurobioffersolv": [], "offer": [], "gurobi_solv": [], "gurobisolv": [], "wrap_flight_istop": [], "modelstructur": [], "airlin": [], "cost": [], "costfunctiondict": [], "archetypecostfunct": [], "doublejump2costfunct": [], "doublejump3costfunct": [], "doublejumpcostfunct": [], "gatecostfunct": [], "jump2costfunct": [], "jump3costfunct": [], "jumpcostfunct": [], "linearcostfunct": [], "quadraticcostfunct": [], "realisticcostfunct": [], "stepcostfunct": [], "compute_gate_cost": [], "get_flight_id_kei": [], "get_interv": [], "compatible_slot": 232, "flightlist": [], "get_flight": [], "make_flight_list": [], "solut": [], "make_df_solut": [], "make_performance_df": [], "make_solut": [], "make_slot_and_flight": [], "nnbound": [], "solversnnb": [], "gurobi_solver_nnb": [], "nnboundgurobi": [], "nnboundmodel": [], "offercheck": [], "air_couple_check": [], "air_triple_check": [], "schedulemak": [], "df_to_schedul": [], "make_flight": [], "avoid_zero": [], "df_maker": [], "distribution_mak": [], "fill_missing_flight": [], "schedule_mak": [], "schedule_typ": [], "slots_flights_mak": [], "udpp": [], "local": [], "get_slot_from_tim": [], "udpp_loc": [], "localoptimis": [], "udpplocaloptgurobi": [], "eta_limit_slot": [], "get_num_flights_for_eta": [], "slot_rang": [], "functionapprox": [], "fit_cost_curv": [], "fit_curv": [], "loss_fun": [], "make_preference_fun": [], "obj_approx": [], "r_squar": 365, "note": [], "remove_nan_coupled_list": 369, "functionapproxcost": [], "compute_test_valu": [], "udpploc": [], "udppmerg": [], "get_first_compatible_flight": [], "sort_flights_by_tim": [], "udpp_merg": [], "combined_model": [], "funcapproxudpploc": [], "globaloptimumtotalapprox": [], "globaloptimumtotalapproxcost": [], "istopapprox": [], "istopapproxcost": [], "nnboundtotalapprox": [], "nnboundtotalapproxcost": [], "udppistop": [], "udppistopapprox": [], "udppistopapproxcost": [], "udpplocalfunctionapprox": [], "udpplocalfunctionapproxcost": [], "udppmergeistop": [], "udpptot": [], "udpptotalapprox": [], "udpptotalapproxcost": [], "combine_model": [], "init_and_run": [], "other_tool": [227, 228, 229, 230, 231, 232, 233, 234, 235], "agent_file_nam": [], "compare_alloc": [], "compare_allocations_cost": [], "compute_cost": [], "generate_comparison": [], "loop": 352, "print_alloc": [], "root_file_nam": [], "sort_list": 379, "write_on_fil": 389, "script": [], "david_exampl": [], "build_funct": [], "test1": [], "test2": [], "test3": [], "test4": [], "test5": [], "test6": [], "test7": [], "example_alternative_rul": [], "externalflight": [], "gg_exampl": [], "new_exampl": [], "externalflight2": [], "create_original_flight": [], "create_original_flights2": [], "example_agent_paradigm_approx": [], "example_agent_paradigm_approx_altern": [], "example_agent_paradigm_vect": [], "example_mercury_test_cas": [], "examples_direct_approx": [], "examples_direct_cost_vector": [], "other_exampl": [], "other_examples10": [], "other_examples2": [], "other_examples3": [], "other_examples4": [], "other_examples5": [], "other_examples6": [], "other_examples7": [], "other_examples8": [], "other_examples9": [], "airspace_particular": [146, 147, 148, 149, 282, 283, 284, 285], "get_nas_airport": [147, 283], "is_atfm_area": [148, 284], "is_ecac": [149, 285], "db_access_funct": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "dataaccessbada4": 151, "dataaccessperform": 152, "add_crco_to_flights_in_db": 153, "get_information_routes_o_d_gener": 154, "read_atfm_at_airport": 155, "read_atfm_at_airports_dai": 156, "read_atfm_at_airports_manu": 157, "read_atfm_at_airports_old": 158, "read_mct": 159, "read_airlines_data": 160, "read_airport_coord": 161, "read_airports_curfew_data": 162, "read_airports_data": 163, "read_airports_modif_data": 164, "read_airspace_stat": 165, "read_all_regulation_dai": 166, "read_compensation_data": 167, "read_coord_trajectory_rout": 168, "read_coord_trajectory_route_based_on_id": 169, "read_countries_atfm_na": 170, "read_crco": 171, "read_crco_charg": 172, "read_dict_ac_bada_code_ac_model": 173, "read_dict_ac_type_wtc": 174, "read_dict_fp_pool_id": 175, "read_doc_data": 176, "read_eamans_data": 177, "read_estimated_avg_costs_curfew": 178, "read_extra_cruise_if_dci": 179, "read_flight_plan_ansps_weights_for_crco": 180, "read_flight_schedul": 181, "read_flight_schedules2": 182, "read_flight_set": 183, "read_flight_uncertainti": 184, "read_fp_pool": 185, "read_fp_pool_miss": 186, "read_fp_routes_without_crco": 187, "read_iedf_atfm": 188, "read_iedf_wind_dict": 189, "read_itineraries_data": 190, "read_nas_route_pool": 191, "read_nas_route_pool_static_o_d": 192, "read_non_pax_cost_data": 193, "read_non_pax_cost_fit_data": 194, "read_nonpax_cost_curfew": 195, "read_od_in_historic_od_computed_pool": 196, "read_orig_destination_via_intermediate_shortest": 197, "read_passenger_flow": 198, "read_passenger_opt": 199, "read_perc_min_perc_max_regulations_dai": 200, "read_prob_atfm": 201, "read_regulation_days_at_an_airport": 202, "read_route_pool": 203, "read_route_pool_o_d_gener": 204, "read_route_pool_stat": 205, "read_scenario": 206, "read_scenario_para": 207, "read_schedul": 208, "read_se": 209, "read_soft_cost_d": 210, "read_trajectori": 211, "read_trajectories_datafram": 212, "read_trajectories_id": 213, "read_trajectories_miss": 214, "read_trajectories_missing_in_interv": 215, "read_trajectories_opt": 216, "read_trajectories_pool": 217, "read_turnaround_data": 218, "save_trajectories_pool": 219, "save_trajectories_seg": 220, "input_manag": [221, 222, 223, 224, 225, 226], "filter_df": 223, "filter_sql": 224, "read_data_from_dict": 225, "write_toml": 226, "flightdummi": 228, "slotdummi": 229, "allocation_from_flight": 230, "clone_pax": [231, 263], "compute_fpfs_alloc": 233, "distance_func": 234, "flight_str": 235, "performance_trajectori": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "ac_perform": [237, 238, 239, 240, 241], "aircraftperform": 238, "aircraftperformancebada3": 239, "aircraftperformancebada3jet": 240, "aircraftperformancebada3tp": 241, "standard_atmospher": [242, 243, 244, 245, 246], "densiti": 243, "pressur": 244, "sound_spe": 245, "temperatur": 246, "trajectori": [247, 248, 249, 250], "trajectorycompon": 249, "trajectoryseg": 250, "unit_convers": [251, 252, 253, 254, 255, 256], "cas2ta": 252, "km2kt": 253, "km2m": 254, "kt2m": 255, "m2kt": 256, "result_manag": [257, 258], "result_tool": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "binaris": 260, "build_aligned_pax_flight_df": 261, "build_single_iteration_df": 262, "compute_derived_metrics_hist_sim": 264, "compute_derived_metrics_histor": 265, "compute_derived_metrics_pax_gener": 266, "compute_derived_metrics_simul": 267, "compute_metrics_flight": 268, "compute_metrics_pax": 269, "find_destination_gener": 270, "find_origin_gener": 271, "get_historical_flight": 272, "get_pax_schedul": 273, "merge_hist_sim": 274, "merge_pax_flight": 275, "produce_hist_sim_df": 276, "produce_historical_flight_pax_df": 277, "uow_tool_belt": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "dtw": [279, 280, 281], "dtw_path": 281, "connection_tool": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "emptyconnect": 287, "create_indexes_in_t": 288, "do_queri": 289, "extract_ssh_paramet": 290, "file_connect": 291, "generic_connect": 292, "load_data_infil": 293, "mysql_connect": 294, "parquet_connect": 295, "read_cr": 296, "read_csv": 297, "read_data": 298, "read_mysql": 299, "read_parquet": 300, "read_pickl": 301, "run_mysql_queri": 302, "write_csv": 303, "write_data": 304, "write_mysql": 305, "write_pickl": 306, "general_tool": [307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "a_b": 308, "para": 311, "class": 311, "twowaydict": 312, "add_dict": 313, "alert_print": 314, "alphabet": 315, "apply_args_and_kwarg": 316, "average_on_downsampled_interv": 317, "average_on_interv": 318, "average_on_quantil": 319, "bootstrap_mean_test": 320, "bootstrap_test": 321, "build_col_print_func": 322, "build_step_bivariate_funct": 323, "build_step_multi_valued_funct": 324, "build_triangular": 325, "center_spatial_network": 326, "compute_percentile_with_weight": 328, "counter": 329, "create_dir": 330, "dict_depth": 331, "distance_euclidean": 332, "fit": 333, "gini": 335, "groupby_on_downsampled_interv": 336, "groupby_on_interv": 337, "groupby_on_quantil": 338, "haversin": 339, "haversine_old": 340, "hex_to_rgb": 341, "human_format": 342, "human_format_for_tick": 343, "intermediate_point": 344, "inv_mu_sig_lognorm": 345, "inv_s_loc_scale_lognorm": 346, "inv_s_scale_lognorm": 347, "inverted_edf": 348, "keep_tim": 349, "load": 350, "log": [351, 391], "make_df_with_3_level": 353, "make_df_with_3_levels_quick": 354, "make_nested_dict_from_df": 355, "mysql_serv": 356, "parallel": 357, "partial_corr": 358, "percentile_10": 359, "percentile_90": 360, "percentile_custom": 361, "permutation_test": 362, "permutation_test_only_diff": 363, "proport": 364, "read_para": 366, "recursive_concat": 367, "recursive_minim": 368, "scale_and_s_from_mean_sigma_lognorm": 370, "scale_and_s_from_quantile_sigma_lognorm": 371, "set_interv": 372, "shift_spatial_network": 373, "show_dic": 374, "simple_color_map_funct": 376, "simple_colormap_object": 377, "sol_b": 378, "sort_paired_valu": 380, "spread_integ": 381, "ssh_client_connect": 382, "ssh_copi": 383, "ssh_tunnel_connect": 384, "starmap_with_kwarg": 385, "strip_str": 386, "timeit": 387, "weight_avg": 388, "ye": 390, "network_tool": 392, "plot_tool": [393, 394, 395], "bar_plot_templ": 394, "savefig": 395, "trajectory_tool": [396, 397, 398, 399, 400], "compute_ab": 397, "create_vertical_trajectori": 398, "detect_toc_tod": 399, "plot_traj": 400}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Quickstart": [[0, "quickstart"]], "Installation": [[0, "installation"]], "Running the CLI version": [[0, "running-the-cli-version"]], "Programmatic use of Mercury": [[0, "programmatic-use-of-mercury"]], "Graphical interface": [[0, "graphical-interface"]], "About": [[1, "about"]], "Authorship": [[1, "authorship"]], "Licence and copyright": [[1, "licence-and-copyright"]], "API": [[2, "api"]], "agents": [[3, "module-agents"]], "agents.agent_base": [[4, "module-agents.agent_base"]], "agents.agent_base.Agent": [[5, "agents-agent-base-agent"]], "agents.agent_base.Role": [[6, "agents-agent-base-role"]], "agents.airline_operating_centre": [[7, "module-agents.airline_operating_centre"]], "agents.airline_operating_centre.AirlineFlightPlanner": [[8, "agents-airline-operating-centre-airlineflightplanner"]], "agents.airline_operating_centre.AirlineOperatingCentre": [[9, "agents-airline-operating-centre-airlineoperatingcentre"]], "agents.airline_operating_centre.AirlinePaxHandler": [[10, "agents-airline-operating-centre-airlinepaxhandler"]], "agents.airline_operating_centre.DynamicCostIndexComputer": [[11, "agents-airline-operating-centre-dynamiccostindexcomputer"]], "agents.airline_operating_centre.FlightPlanSelector": [[12, "agents-airline-operating-centre-flightplanselector"]], "agents.airline_operating_centre.PassengerReallocation": [[13, "agents-airline-operating-centre-passengerreallocation"]], "agents.airline_operating_centre.TurnaroundOperations": [[14, "agents-airline-operating-centre-turnaroundoperations"]], "agents.aman": [[15, "module-agents.aman"]], "agents.aman.AMAN": [[16, "agents-aman-aman"]], "agents.aman.ArrivalCancellationHandler": [[17, "agents-aman-arrivalcancellationhandler"]], "agents.aman.ArrivalQueuePlannedUpdater": [[18, "agents-aman-arrivalqueueplannedupdater"]], "agents.aman.ArrivalTacticalProvider": [[19, "agents-aman-arrivaltacticalprovider"]], "agents.aman.FlightInAMANHandler": [[20, "agents-aman-flightinamanhandler"]], "agents.aman.SlotAssigner": [[21, "agents-aman-slotassigner"]], "agents.aman.StrategicArrivalQueueBuilder": [[22, "agents-aman-strategicarrivalqueuebuilder"]], "agents.commodities": [[23, "module-agents.commodities"]], "agents.commodities.aircraft": [[24, "module-agents.commodities.aircraft"]], "agents.commodities.aircraft.Aircraft": [[25, "agents-commodities-aircraft-aircraft"]], "agents.commodities.alliance": [[26, "module-agents.commodities.alliance"]], "agents.commodities.alliance.Alliance": [[27, "agents-commodities-alliance-alliance"]], "agents.commodities.arrival_slot": [[28, "module-agents.commodities.arrival_slot"]], "agents.commodities.arrival_slot.ArrivalSlot": [[29, "agents-commodities-arrival-slot-arrivalslot"]], "agents.commodities.atfm_delay": [[30, "module-agents.commodities.atfm_delay"]], "agents.commodities.atfm_delay.ATFMDelay": [[31, "agents-commodities-atfm-delay-atfmdelay"]], "agents.commodities.atfm_regulation": [[32, "module-agents.commodities.atfm_regulation"]], "agents.commodities.atfm_regulation.ATFMBooker": [[33, "agents-commodities-atfm-regulation-atfmbooker"]], "agents.commodities.atfm_regulation.ATFMRegulation": [[34, "agents-commodities-atfm-regulation-atfmregulation"]], "agents.commodities.central_registry": [[35, "module-agents.commodities.central_registry"]], "agents.commodities.central_registry.CentralRegistry": [[36, "agents-commodities-central-registry-centralregistry"]], "agents.commodities.debug_flights": [[37, "module-agents.commodities.debug_flights"]], "agents.commodities.flight_plan": [[38, "module-agents.commodities.flight_plan"]], "agents.commodities.flight_plan.FlightPlan": [[39, "agents-commodities-flight-plan-flightplan"]], "agents.commodities.flight_plan.FlightPlanPoint": [[40, "agents-commodities-flight-plan-flightplanpoint"]], "agents.commodities.flight_plan.build_proj": [[41, "agents-commodities-flight-plan-build-proj"]], "agents.commodities.pax_itinerary_group": [[42, "module-agents.commodities.pax_itinerary_group"]], "agents.commodities.pax_itinerary_group.PaxItineraryGroup": [[43, "agents-commodities-pax-itinerary-group-paxitinerarygroup"]], "agents.commodities.pax_itinerary_group.func": [[44, "agents-commodities-pax-itinerary-group-func"]], "agents.commodities.route": [[45, "module-agents.commodities.route"]], "agents.commodities.route.Route": [[46, "agents-commodities-route-route"]], "agents.commodities.route.RoutePoint": [[47, "agents-commodities-route-routepoint"]], "agents.commodities.slot_queue": [[48, "module-agents.commodities.slot_queue"]], "agents.commodities.slot_queue.CapacityPeriod": [[49, "agents-commodities-slot-queue-capacityperiod"]], "agents.commodities.slot_queue.Slot": [[50, "agents-commodities-slot-queue-slot"]], "agents.commodities.slot_queue.SlotQueue": [[51, "agents-commodities-slot-queue-slotqueue"]], "agents.commodities.slot_queue_eaman": [[52, "module-agents.commodities.slot_queue_eaman"]], "agents.commodities.slot_queue_eaman.EAMANSlot": [[53, "agents-commodities-slot-queue-eaman-eamanslot"]], "agents.commodities.slot_queue_eaman.EAMANSlotQueue": [[54, "agents-commodities-slot-queue-eaman-eamanslotqueue"]], "agents.dman": [[55, "module-agents.dman"]], "agents.dman.DMAN": [[56, "agents-dman-dman"]], "agents.dman.DepartureCancellationHandler": [[57, "agents-dman-departurecancellationhandler"]], "agents.dman.DepartureQueueUpdater": [[58, "agents-dman-departurequeueupdater"]], "agents.dman.DepartureSlotProvider": [[59, "agents-dman-departureslotprovider"]], "agents.dman.StrategicDepartureQueueBuilder": [[60, "agents-dman-strategicdeparturequeuebuilder"]], "agents.eaman": [[61, "module-agents.eaman"]], "agents.eaman.ArrivalPlannerProvider": [[62, "agents-eaman-arrivalplannerprovider"]], "agents.eaman.ArrivalQueuePlannedUpdaterE": [[63, "agents-eaman-arrivalqueueplannedupdatere"]], "agents.eaman.EAMAN": [[64, "agents-eaman-eaman"]], "agents.eaman.FlightInAMANHandlerE": [[65, "agents-eaman-flightinamanhandlere"]], "agents.flight": [[66, "module-agents.flight"]], "agents.flight.AircraftDepartingHandler": [[67, "agents-flight-aircraftdepartinghandler"]], "agents.flight.DepartureSlotRequester": [[68, "agents-flight-departureslotrequester"]], "agents.flight.FPInfoProvider": [[69, "agents-flight-fpinfoprovider"]], "agents.flight.Flight": [[70, "agents-flight-flight"]], "agents.flight.FlightArrivalInformationProvider": [[71, "agents-flight-flightarrivalinformationprovider"]], "agents.flight.FlightPlanConstraintUpdater": [[72, "agents-flight-flightplanconstraintupdater"]], "agents.flight.FlightPlanUpdater": [[73, "agents-flight-flightplanupdater"]], "agents.flight.GroundArrivalHandler": [[74, "agents-flight-groundarrivalhandler"]], "agents.flight.OperateTrajectory": [[75, "agents-flight-operatetrajectory"]], "agents.flight.PotentialDelayRecoveryProvider": [[76, "agents-flight-potentialdelayrecoveryprovider"]], "agents.ground_airport": [[77, "module-agents.ground_airport"]], "agents.ground_airport.GroundAirport": [[78, "agents-ground-airport-groundairport"]], "agents.ground_airport.GroundHandler": [[79, "agents-ground-airport-groundhandler"]], "agents.ground_airport.ProvideConnectingTime": [[80, "agents-ground-airport-provideconnectingtime"]], "agents.ground_airport.TaxiInProvider": [[81, "agents-ground-airport-taxiinprovider"]], "agents.ground_airport.TaxiOutEstimator": [[82, "agents-ground-airport-taxioutestimator"]], "agents.ground_airport.TaxiOutProvider": [[83, "agents-ground-airport-taxioutprovider"]], "agents.network_manager": [[84, "module-agents.network_manager"]], "agents.network_manager.HotspotManager": [[85, "agents-network-manager-hotspotmanager"]], "agents.network_manager.NetworkManager": [[86, "agents-network-manager-networkmanager"]], "agents.network_manager.NetworkManagerAcceptAndDisseminateFP": [[87, "agents-network-manager-networkmanageracceptanddisseminatefp"]], "agents.network_manager.NetworkManagerCancelFP": [[88, "agents-network-manager-networkmanagercancelfp"]], "agents.network_manager.NetworkManagerFlightPlanProcessing": [[89, "agents-network-manager-networkmanagerflightplanprocessing"]], "agents.radar": [[90, "module-agents.radar"]], "agents.radar.DisseminateCancellationFlightPlan": [[91, "agents-radar-disseminatecancellationflightplan"]], "agents.radar.DisseminateFlightPlan": [[92, "agents-radar-disseminateflightplan"]], "agents.radar.DisseminateFlightPositionUpdate": [[93, "agents-radar-disseminateflightpositionupdate"]], "agents.radar.Radar": [[94, "agents-radar-radar"]], "agents.radar.RadarAugmentFlightPlan": [[95, "agents-radar-radaraugmentflightplan"]], "agents.seed": [[96, "module-agents.seed"]], "core": [[97, "module-core"]], "core.delivery_system": [[98, "module-core.delivery_system"]], "core.delivery_system.Letter": [[99, "core-delivery-system-letter"]], "core.delivery_system.LetterBox": [[100, "core-delivery-system-letterbox"]], "core.delivery_system.Postman": [[101, "core-delivery-system-postman"]], "core.module_management": [[102, "module-core.module_management"]], "core.module_management.check_incompatibilities": [[103, "core-module-management-check-incompatibilities"]], "core.module_management.find_actual_module_name": [[104, "core-module-management-find-actual-module-name"]], "core.module_management.get_all_modules": [[105, "core-module-management-get-all-modules"]], "core.module_management.get_module_paras": [[106, "core-module-management-get-module-paras"]], "core.module_management.load_mercury_module": [[107, "core-module-management-load-mercury-module"]], "core.parametriser": [[108, "module-core.parametriser"]], "core.parametriser.Parametriser": [[109, "core-parametriser-parametriser"]], "core.parametriser.ParametriserCapacity": [[110, "core-parametriser-parametrisercapacity"]], "core.parametriser.ParametriserSelector": [[111, "core-parametriser-parametriserselector"]], "core.parametriser.ParametriserStandard": [[112, "core-parametriser-parametriserstandard"]], "core.read_config": [[113, "module-core.read_config"]], "core.read_config.add_output_process": [[114, "core-read-config-add-output-process"]], "core.read_config.find_paras_categories": [[115, "core-read-config-find-paras-categories"]], "core.read_config.flatten_paras_dict": [[116, "core-read-config-flatten-paras-dict"]], "core.read_config.read_mercury_config": [[117, "core-read-config-read-mercury-config"]], "core.read_config.read_scenario_config": [[118, "core-read-config-read-scenario-config"]], "core.read_config.read_toml": [[119, "core-read-config-read-toml"]], "core.read_config.transform_conf_paras": [[120, "core-read-config-transform-conf-paras"]], "core.read_config.unflatten_profiles": [[121, "core-read-config-unflatten-profiles"]], "core.read_config.unfold_paras_dict": [[122, "core-read-config-unfold-paras-dict"]], "core.read_config.update_scenario_paras_based_on_case_study": [[123, "core-read-config-update-scenario-paras-based-on-case-study"]], "core.results_aggregator": [[124, "module-core.results_aggregator"]], "core.results_aggregator.ResultAggregatorAdvanced": [[125, "core-results-aggregator-resultaggregatoradvanced"]], "core.results_aggregator.ResultsAggregator": [[126, "core-results-aggregator-resultsaggregator"]], "core.results_aggregator.ResultsAggregatorSelector": [[127, "core-results-aggregator-resultsaggregatorselector"]], "core.results_aggregator.ResultsAggregatorSimple": [[128, "core-results-aggregator-resultsaggregatorsimple"]], "core.results_aggregator.ResultsAggregatorSimpleReduced": [[129, "core-results-aggregator-resultsaggregatorsimplereduced"]], "core.scenario_loader": [[130, "module-core.scenario_loader"]], "core.scenario_loader.ScenarioLoader": [[131, "core-scenario-loader-scenarioloader"]], "core.scenario_loader.ScenarioLoaderSelector": [[132, "core-scenario-loader-scenarioloaderselector"]], "core.scenario_loader.ScenarioLoaderSimple": [[133, "core-scenario-loader-scenarioloadersimple"]], "core.scenario_loader.ScenarioLoaderStandard": [[134, "core-scenario-loader-scenarioloaderstandard"]], "core.scenario_loader.ScenarioLoaderStandardLocal": [[135, "core-scenario-loader-scenarioloaderstandardlocal"]], "core.simulation_manager": [[136, "module-core.simulation_manager"]], "core.simulation_manager.Mercury": [[137, "core-simulation-manager-mercury"]], "core.simulation_manager.build_command": [[138, "core-simulation-manager-build-command"]], "core.simulation_manager.create_paras_file_from_dict": [[139, "core-simulation-manager-create-paras-file-from-dict"]], "core.world_builder": [[140, "module-core.world_builder"]], "core.world_builder.World": [[141, "core-world-builder-world"]], "core.world_builder.trace": [[142, "core-world-builder-trace"]], "dashboard": [[143, "module-dashboard"]], "dashboard.mercury_gui": [[144, "module-dashboard.mercury_gui"]], "libs": [[145, "module-libs"]], "libs.airspace_particularities": [[146, "module-libs.airspace_particularities"]], "libs.airspace_particularities.get_nas_airport": [[147, "libs-airspace-particularities-get-nas-airport"]], "libs.airspace_particularities.is_ATFM_AREA": [[148, "libs-airspace-particularities-is-atfm-area"]], "libs.airspace_particularities.is_ECAC": [[149, "libs-airspace-particularities-is-ecac"]], "libs.db_access_functions": [[150, "module-libs.db_access_functions"]], "libs.db_access_functions.DataAccessBADA4": [[151, "libs-db-access-functions-dataaccessbada4"]], "libs.db_access_functions.DataAccessPerformance": [[152, "libs-db-access-functions-dataaccessperformance"]], "libs.db_access_functions.add_crco_to_flights_in_db": [[153, "libs-db-access-functions-add-crco-to-flights-in-db"]], "libs.db_access_functions.get_information_routes_o_d_generated": [[154, "libs-db-access-functions-get-information-routes-o-d-generated"]], "libs.db_access_functions.read_ATFM_at_airports": [[155, "libs-db-access-functions-read-atfm-at-airports"]], "libs.db_access_functions.read_ATFM_at_airports_days": [[156, "libs-db-access-functions-read-atfm-at-airports-days"]], "libs.db_access_functions.read_ATFM_at_airports_manual": [[157, "libs-db-access-functions-read-atfm-at-airports-manual"]], "libs.db_access_functions.read_ATFM_at_airports_old": [[158, "libs-db-access-functions-read-atfm-at-airports-old"]], "libs.db_access_functions.read_MCT": [[159, "libs-db-access-functions-read-mct"]], "libs.db_access_functions.read_airlines_data": [[160, "libs-db-access-functions-read-airlines-data"]], "libs.db_access_functions.read_airport_coords": [[161, "libs-db-access-functions-read-airport-coords"]], "libs.db_access_functions.read_airports_curfew_data": [[162, "libs-db-access-functions-read-airports-curfew-data"]], "libs.db_access_functions.read_airports_data": [[163, "libs-db-access-functions-read-airports-data"]], "libs.db_access_functions.read_airports_modif_data": [[164, "libs-db-access-functions-read-airports-modif-data"]], "libs.db_access_functions.read_airspace_static": [[165, "libs-db-access-functions-read-airspace-static"]], "libs.db_access_functions.read_all_regulation_days": [[166, "libs-db-access-functions-read-all-regulation-days"]], "libs.db_access_functions.read_compensation_data": [[167, "libs-db-access-functions-read-compensation-data"]], "libs.db_access_functions.read_coord_trajectory_route": [[168, "libs-db-access-functions-read-coord-trajectory-route"]], "libs.db_access_functions.read_coord_trajectory_route_based_on_id": [[169, "libs-db-access-functions-read-coord-trajectory-route-based-on-id"]], "libs.db_access_functions.read_countries_ATFM_NAS": [[170, "libs-db-access-functions-read-countries-atfm-nas"]], "libs.db_access_functions.read_crco": [[171, "libs-db-access-functions-read-crco"]], "libs.db_access_functions.read_crco_charges": [[172, "libs-db-access-functions-read-crco-charges"]], "libs.db_access_functions.read_dict_ac_bada_code_ac_model": [[173, "libs-db-access-functions-read-dict-ac-bada-code-ac-model"]], "libs.db_access_functions.read_dict_ac_type_wtc": [[174, "libs-db-access-functions-read-dict-ac-type-wtc"]], "libs.db_access_functions.read_dict_fp_pool_ids": [[175, "libs-db-access-functions-read-dict-fp-pool-ids"]], "libs.db_access_functions.read_doc_data": [[176, "libs-db-access-functions-read-doc-data"]], "libs.db_access_functions.read_eamans_data": [[177, "libs-db-access-functions-read-eamans-data"]], "libs.db_access_functions.read_estimated_avg_costs_curfews": [[178, "libs-db-access-functions-read-estimated-avg-costs-curfews"]], "libs.db_access_functions.read_extra_cruise_if_dci": [[179, "libs-db-access-functions-read-extra-cruise-if-dci"]], "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco": [[180, "libs-db-access-functions-read-flight-plan-ansps-weights-for-crco"]], "libs.db_access_functions.read_flight_schedules": [[181, "libs-db-access-functions-read-flight-schedules"]], "libs.db_access_functions.read_flight_schedules2": [[182, "libs-db-access-functions-read-flight-schedules2"]], "libs.db_access_functions.read_flight_set": [[183, "libs-db-access-functions-read-flight-set"]], "libs.db_access_functions.read_flight_uncertainty": [[184, "libs-db-access-functions-read-flight-uncertainty"]], "libs.db_access_functions.read_fp_pool": [[185, "libs-db-access-functions-read-fp-pool"]], "libs.db_access_functions.read_fp_pool_missing": [[186, "libs-db-access-functions-read-fp-pool-missing"]], "libs.db_access_functions.read_fp_routes_without_crco": [[187, "libs-db-access-functions-read-fp-routes-without-crco"]], "libs.db_access_functions.read_iedf_atfm": [[188, "libs-db-access-functions-read-iedf-atfm"]], "libs.db_access_functions.read_iedf_wind_dict": [[189, "libs-db-access-functions-read-iedf-wind-dict"]], "libs.db_access_functions.read_itineraries_data": [[190, "libs-db-access-functions-read-itineraries-data"]], "libs.db_access_functions.read_nas_route_pool": [[191, "libs-db-access-functions-read-nas-route-pool"]], "libs.db_access_functions.read_nas_route_pool_static_o_d": [[192, "libs-db-access-functions-read-nas-route-pool-static-o-d"]], "libs.db_access_functions.read_non_pax_cost_data": [[193, "libs-db-access-functions-read-non-pax-cost-data"]], "libs.db_access_functions.read_non_pax_cost_fit_data": [[194, "libs-db-access-functions-read-non-pax-cost-fit-data"]], "libs.db_access_functions.read_nonpax_cost_curfews": [[195, "libs-db-access-functions-read-nonpax-cost-curfews"]], "libs.db_access_functions.read_od_in_historic_od_computed_pool": [[196, "libs-db-access-functions-read-od-in-historic-od-computed-pool"]], "libs.db_access_functions.read_orig_destination_via_intermediate_shortest": [[197, "libs-db-access-functions-read-orig-destination-via-intermediate-shortest"]], "libs.db_access_functions.read_passenger_flows": [[198, "libs-db-access-functions-read-passenger-flows"]], "libs.db_access_functions.read_passenger_options": [[199, "libs-db-access-functions-read-passenger-options"]], "libs.db_access_functions.read_perc_min_perc_max_regulations_days": [[200, "libs-db-access-functions-read-perc-min-perc-max-regulations-days"]], "libs.db_access_functions.read_prob_atfm": [[201, "libs-db-access-functions-read-prob-atfm"]], "libs.db_access_functions.read_regulation_days_at_an_airport": [[202, "libs-db-access-functions-read-regulation-days-at-an-airport"]], "libs.db_access_functions.read_route_pool": [[203, "libs-db-access-functions-read-route-pool"]], "libs.db_access_functions.read_route_pool_o_d_generated": [[204, "libs-db-access-functions-read-route-pool-o-d-generated"]], "libs.db_access_functions.read_route_pool_static": [[205, "libs-db-access-functions-read-route-pool-static"]], "libs.db_access_functions.read_scenario": [[206, "libs-db-access-functions-read-scenario"]], "libs.db_access_functions.read_scenario_paras": [[207, "libs-db-access-functions-read-scenario-paras"]], "libs.db_access_functions.read_schedules": [[208, "libs-db-access-functions-read-schedules"]], "libs.db_access_functions.read_seed": [[209, "libs-db-access-functions-read-seed"]], "libs.db_access_functions.read_soft_cost_date": [[210, "libs-db-access-functions-read-soft-cost-date"]], "libs.db_access_functions.read_trajectories": [[211, "libs-db-access-functions-read-trajectories"]], "libs.db_access_functions.read_trajectories_dataframe": [[212, "libs-db-access-functions-read-trajectories-dataframe"]], "libs.db_access_functions.read_trajectories_ids": [[213, "libs-db-access-functions-read-trajectories-ids"]], "libs.db_access_functions.read_trajectories_missing": [[214, "libs-db-access-functions-read-trajectories-missing"]], "libs.db_access_functions.read_trajectories_missing_in_interval": [[215, "libs-db-access-functions-read-trajectories-missing-in-interval"]], "libs.db_access_functions.read_trajectories_options": [[216, "libs-db-access-functions-read-trajectories-options"]], "libs.db_access_functions.read_trajectories_pool": [[217, "libs-db-access-functions-read-trajectories-pool"]], "libs.db_access_functions.read_turnaround_data": [[218, "libs-db-access-functions-read-turnaround-data"]], "libs.db_access_functions.save_trajectories_pool": [[219, "libs-db-access-functions-save-trajectories-pool"]], "libs.db_access_functions.save_trajectories_segments": [[220, "libs-db-access-functions-save-trajectories-segments"]], "libs.input_manager": [[221, "module-libs.input_manager"]], "libs.input_manager.Input_manager": [[222, "libs-input-manager-input-manager"]], "libs.input_manager.filter_df": [[223, "libs-input-manager-filter-df"]], "libs.input_manager.filter_sql": [[224, "libs-input-manager-filter-sql"]], "libs.input_manager.read_data_from_dict": [[225, "libs-input-manager-read-data-from-dict"]], "libs.input_manager.write_toml": [[226, "libs-input-manager-write-toml"]], "libs.other_tools": [[227, "module-libs.other_tools"]], "libs.other_tools.FlightDummy": [[228, "libs-other-tools-flightdummy"]], "libs.other_tools.SlotDummy": [[229, "libs-other-tools-slotdummy"]], "libs.other_tools.allocation_from_flights": [[230, "libs-other-tools-allocation-from-flights"]], "libs.other_tools.clone_pax": [[231, "libs-other-tools-clone-pax"]], "libs.other_tools.compatible_slots": [[232, "libs-other-tools-compatible-slots"]], "libs.other_tools.compute_FPFS_allocation": [[233, "libs-other-tools-compute-fpfs-allocation"]], "libs.other_tools.distance_func": [[234, "libs-other-tools-distance-func"]], "libs.other_tools.flight_str": [[235, "libs-other-tools-flight-str"]], "libs.performance_trajectory": [[236, "module-libs.performance_trajectory"]], "libs.performance_trajectory.ac_performances": [[237, "module-libs.performance_trajectory.ac_performances"]], "libs.performance_trajectory.ac_performances.AircraftPerformance": [[238, "libs-performance-trajectory-ac-performances-aircraftperformance"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3": [[239, "libs-performance-trajectory-ac-performances-aircraftperformancebada3"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet": [[240, "libs-performance-trajectory-ac-performances-aircraftperformancebada3jet"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP": [[241, "libs-performance-trajectory-ac-performances-aircraftperformancebada3tp"]], "libs.performance_trajectory.standard_atmosphere": [[242, "module-libs.performance_trajectory.standard_atmosphere"]], "libs.performance_trajectory.standard_atmosphere.density": [[243, "libs-performance-trajectory-standard-atmosphere-density"]], "libs.performance_trajectory.standard_atmosphere.pressure": [[244, "libs-performance-trajectory-standard-atmosphere-pressure"]], "libs.performance_trajectory.standard_atmosphere.sound_speed": [[245, "libs-performance-trajectory-standard-atmosphere-sound-speed"]], "libs.performance_trajectory.standard_atmosphere.temperature": [[246, "libs-performance-trajectory-standard-atmosphere-temperature"]], "libs.performance_trajectory.trajectory": [[247, "module-libs.performance_trajectory.trajectory"]], "libs.performance_trajectory.trajectory.Trajectory": [[248, "libs-performance-trajectory-trajectory-trajectory"]], "libs.performance_trajectory.trajectory.TrajectoryComponent": [[249, "libs-performance-trajectory-trajectory-trajectorycomponent"]], "libs.performance_trajectory.trajectory.TrajectorySegment": [[250, "libs-performance-trajectory-trajectory-trajectorysegment"]], "libs.performance_trajectory.unit_conversions": [[251, "module-libs.performance_trajectory.unit_conversions"]], "libs.performance_trajectory.unit_conversions.cas2tas": [[252, "libs-performance-trajectory-unit-conversions-cas2tas"]], "libs.performance_trajectory.unit_conversions.km2kt": [[253, "libs-performance-trajectory-unit-conversions-km2kt"]], "libs.performance_trajectory.unit_conversions.km2m": [[254, "libs-performance-trajectory-unit-conversions-km2m"]], "libs.performance_trajectory.unit_conversions.kt2m": [[255, "libs-performance-trajectory-unit-conversions-kt2m"]], "libs.performance_trajectory.unit_conversions.m2kt": [[256, "libs-performance-trajectory-unit-conversions-m2kt"]], "libs.result_manager": [[257, "module-libs.result_manager"]], "libs.result_manager.Result_manager": [[258, "libs-result-manager-result-manager"]], "libs.result_tools": [[259, "module-libs.result_tools"]], "libs.result_tools.binarise": [[260, "libs-result-tools-binarise"]], "libs.result_tools.build_aligned_pax_flight_df": [[261, "libs-result-tools-build-aligned-pax-flight-df"]], "libs.result_tools.build_single_iteration_df": [[262, "libs-result-tools-build-single-iteration-df"]], "libs.result_tools.clone_pax": [[263, "libs-result-tools-clone-pax"]], "libs.result_tools.compute_derived_metrics_hist_sim": [[264, "libs-result-tools-compute-derived-metrics-hist-sim"]], "libs.result_tools.compute_derived_metrics_historical": [[265, "libs-result-tools-compute-derived-metrics-historical"]], "libs.result_tools.compute_derived_metrics_pax_generic": [[266, "libs-result-tools-compute-derived-metrics-pax-generic"]], "libs.result_tools.compute_derived_metrics_simulations": [[267, "libs-result-tools-compute-derived-metrics-simulations"]], "libs.result_tools.compute_metrics_flights": [[268, "libs-result-tools-compute-metrics-flights"]], "libs.result_tools.compute_metrics_pax": [[269, "libs-result-tools-compute-metrics-pax"]], "libs.result_tools.find_destination_generic": [[270, "libs-result-tools-find-destination-generic"]], "libs.result_tools.find_origin_generic": [[271, "libs-result-tools-find-origin-generic"]], "libs.result_tools.get_historical_flights": [[272, "libs-result-tools-get-historical-flights"]], "libs.result_tools.get_pax_schedules": [[273, "libs-result-tools-get-pax-schedules"]], "libs.result_tools.merge_hist_sim": [[274, "libs-result-tools-merge-hist-sim"]], "libs.result_tools.merge_pax_flights": [[275, "libs-result-tools-merge-pax-flights"]], "libs.result_tools.produce_hist_sim_df": [[276, "libs-result-tools-produce-hist-sim-df"]], "libs.result_tools.produce_historical_flight_pax_df": [[277, "libs-result-tools-produce-historical-flight-pax-df"]], "libs.uow_tool_belt": [[278, "module-libs.uow_tool_belt"]], "libs.uow_tool_belt.DTW": [[279, "module-libs.uow_tool_belt.DTW"]], "libs.uow_tool_belt.DTW.dtw": [[280, "libs-uow-tool-belt-dtw-dtw"]], "libs.uow_tool_belt.DTW.dtw_path": [[281, "libs-uow-tool-belt-dtw-dtw-path"]], "libs.uow_tool_belt.airspace_particularities": [[282, "module-libs.uow_tool_belt.airspace_particularities"]], "libs.uow_tool_belt.airspace_particularities.get_nas_airport": [[283, "libs-uow-tool-belt-airspace-particularities-get-nas-airport"]], "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA": [[284, "libs-uow-tool-belt-airspace-particularities-is-atfm-area"]], "libs.uow_tool_belt.airspace_particularities.is_ECAC": [[285, "libs-uow-tool-belt-airspace-particularities-is-ecac"]], "libs.uow_tool_belt.connection_tools": [[286, "module-libs.uow_tool_belt.connection_tools"]], "libs.uow_tool_belt.connection_tools.EmptyConnection": [[287, "libs-uow-tool-belt-connection-tools-emptyconnection"]], "libs.uow_tool_belt.connection_tools.create_indexes_in_table": [[288, "libs-uow-tool-belt-connection-tools-create-indexes-in-table"]], "libs.uow_tool_belt.connection_tools.do_query": [[289, "libs-uow-tool-belt-connection-tools-do-query"]], "libs.uow_tool_belt.connection_tools.extract_ssh_parameters": [[290, "libs-uow-tool-belt-connection-tools-extract-ssh-parameters"]], "libs.uow_tool_belt.connection_tools.file_connection": [[291, "libs-uow-tool-belt-connection-tools-file-connection"]], "libs.uow_tool_belt.connection_tools.generic_connection": [[292, "libs-uow-tool-belt-connection-tools-generic-connection"]], "libs.uow_tool_belt.connection_tools.load_data_infile": [[293, "libs-uow-tool-belt-connection-tools-load-data-infile"]], "libs.uow_tool_belt.connection_tools.mysql_connection": [[294, "libs-uow-tool-belt-connection-tools-mysql-connection"]], "libs.uow_tool_belt.connection_tools.parquet_connection": [[295, "libs-uow-tool-belt-connection-tools-parquet-connection"]], "libs.uow_tool_belt.connection_tools.read_cred": [[296, "libs-uow-tool-belt-connection-tools-read-cred"]], "libs.uow_tool_belt.connection_tools.read_csv": [[297, "libs-uow-tool-belt-connection-tools-read-csv"]], "libs.uow_tool_belt.connection_tools.read_data": [[298, "libs-uow-tool-belt-connection-tools-read-data"]], "libs.uow_tool_belt.connection_tools.read_mysql": [[299, "libs-uow-tool-belt-connection-tools-read-mysql"]], "libs.uow_tool_belt.connection_tools.read_parquet": [[300, "libs-uow-tool-belt-connection-tools-read-parquet"]], "libs.uow_tool_belt.connection_tools.read_pickle": [[301, "libs-uow-tool-belt-connection-tools-read-pickle"]], "libs.uow_tool_belt.connection_tools.run_mysql_query": [[302, "libs-uow-tool-belt-connection-tools-run-mysql-query"]], "libs.uow_tool_belt.connection_tools.write_csv": [[303, "libs-uow-tool-belt-connection-tools-write-csv"]], "libs.uow_tool_belt.connection_tools.write_data": [[304, "libs-uow-tool-belt-connection-tools-write-data"]], "libs.uow_tool_belt.connection_tools.write_mysql": [[305, "libs-uow-tool-belt-connection-tools-write-mysql"]], "libs.uow_tool_belt.connection_tools.write_pickle": [[306, "libs-uow-tool-belt-connection-tools-write-pickle"]], "libs.uow_tool_belt.general_tools": [[307, "module-libs.uow_tool_belt.general_tools"]], "libs.uow_tool_belt.general_tools.A_B": [[308, "libs-uow-tool-belt-general-tools-a-b"]], "libs.uow_tool_belt.general_tools.DummyFile": [[309, "libs-uow-tool-belt-general-tools-dummyfile"]], "libs.uow_tool_belt.general_tools.HiddenPrints": [[310, "libs-uow-tool-belt-general-tools-hiddenprints"]], "libs.uow_tool_belt.general_tools.Paras": [[311, "libs-uow-tool-belt-general-tools-paras"]], "Class Paras": [[311, "class-paras"]], "libs.uow_tool_belt.general_tools.TwoWayDict": [[312, "libs-uow-tool-belt-general-tools-twowaydict"]], "libs.uow_tool_belt.general_tools.add_dicts": [[313, "libs-uow-tool-belt-general-tools-add-dicts"]], "libs.uow_tool_belt.general_tools.alert_print": [[314, "libs-uow-tool-belt-general-tools-alert-print"]], "libs.uow_tool_belt.general_tools.alphabet": [[315, "libs-uow-tool-belt-general-tools-alphabet"]], "libs.uow_tool_belt.general_tools.apply_args_and_kwargs": [[316, "libs-uow-tool-belt-general-tools-apply-args-and-kwargs"]], "libs.uow_tool_belt.general_tools.average_on_downsampled_interval": [[317, "libs-uow-tool-belt-general-tools-average-on-downsampled-interval"]], "libs.uow_tool_belt.general_tools.average_on_intervals": [[318, "libs-uow-tool-belt-general-tools-average-on-intervals"]], "libs.uow_tool_belt.general_tools.average_on_quantiles": [[319, "libs-uow-tool-belt-general-tools-average-on-quantiles"]], "libs.uow_tool_belt.general_tools.bootstrap_mean_test": [[320, "libs-uow-tool-belt-general-tools-bootstrap-mean-test"]], "libs.uow_tool_belt.general_tools.bootstrap_test": [[321, "libs-uow-tool-belt-general-tools-bootstrap-test"]], "libs.uow_tool_belt.general_tools.build_col_print_func": [[322, "libs-uow-tool-belt-general-tools-build-col-print-func"]], "libs.uow_tool_belt.general_tools.build_step_bivariate_function": [[323, "libs-uow-tool-belt-general-tools-build-step-bivariate-function"]], "libs.uow_tool_belt.general_tools.build_step_multi_valued_function": [[324, "libs-uow-tool-belt-general-tools-build-step-multi-valued-function"]], "libs.uow_tool_belt.general_tools.build_triangular": [[325, "libs-uow-tool-belt-general-tools-build-triangular"]], "libs.uow_tool_belt.general_tools.center_spatial_network": [[326, "libs-uow-tool-belt-general-tools-center-spatial-network"]], "libs.uow_tool_belt.general_tools.clock_time": [[327, "libs-uow-tool-belt-general-tools-clock-time"]], "libs.uow_tool_belt.general_tools.compute_percentile_with_weight": [[328, "libs-uow-tool-belt-general-tools-compute-percentile-with-weight"]], "libs.uow_tool_belt.general_tools.counter": [[329, "libs-uow-tool-belt-general-tools-counter"]], "libs.uow_tool_belt.general_tools.create_dir": [[330, "libs-uow-tool-belt-general-tools-create-dir"]], "libs.uow_tool_belt.general_tools.dict_depth": [[331, "libs-uow-tool-belt-general-tools-dict-depth"]], "libs.uow_tool_belt.general_tools.distance_euclidean": [[332, "libs-uow-tool-belt-general-tools-distance-euclidean"]], "libs.uow_tool_belt.general_tools.fit": [[333, "libs-uow-tool-belt-general-tools-fit"]], "libs.uow_tool_belt.general_tools.get_first_matching_element": [[334, "libs-uow-tool-belt-general-tools-get-first-matching-element"]], "libs.uow_tool_belt.general_tools.gini": [[335, "libs-uow-tool-belt-general-tools-gini"]], "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval": [[336, "libs-uow-tool-belt-general-tools-groupby-on-downsampled-interval"]], "libs.uow_tool_belt.general_tools.groupby_on_intervals": [[337, "libs-uow-tool-belt-general-tools-groupby-on-intervals"]], "libs.uow_tool_belt.general_tools.groupby_on_quantiles": [[338, "libs-uow-tool-belt-general-tools-groupby-on-quantiles"]], "libs.uow_tool_belt.general_tools.haversine": [[339, "libs-uow-tool-belt-general-tools-haversine"]], "libs.uow_tool_belt.general_tools.haversine_old": [[340, "libs-uow-tool-belt-general-tools-haversine-old"]], "libs.uow_tool_belt.general_tools.hex_to_rgb": [[341, "libs-uow-tool-belt-general-tools-hex-to-rgb"]], "libs.uow_tool_belt.general_tools.human_format": [[342, "libs-uow-tool-belt-general-tools-human-format"]], "libs.uow_tool_belt.general_tools.human_format_for_ticks": [[343, "libs-uow-tool-belt-general-tools-human-format-for-ticks"]], "libs.uow_tool_belt.general_tools.intermediate_point": [[344, "libs-uow-tool-belt-general-tools-intermediate-point"]], "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm": [[345, "libs-uow-tool-belt-general-tools-inv-mu-sig-lognorm"]], "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm": [[346, "libs-uow-tool-belt-general-tools-inv-s-loc-scale-lognorm"]], "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm": [[347, "libs-uow-tool-belt-general-tools-inv-s-scale-lognorm"]], "libs.uow_tool_belt.general_tools.inverted_edf": [[348, "libs-uow-tool-belt-general-tools-inverted-edf"]], "libs.uow_tool_belt.general_tools.keep_time": [[349, "libs-uow-tool-belt-general-tools-keep-time"]], "libs.uow_tool_belt.general_tools.loading": [[350, "libs-uow-tool-belt-general-tools-loading"]], "libs.uow_tool_belt.general_tools.logging": [[351, "libs-uow-tool-belt-general-tools-logging"]], "libs.uow_tool_belt.general_tools.loop": [[352, "libs-uow-tool-belt-general-tools-loop"]], "libs.uow_tool_belt.general_tools.make_df_with_3_levels": [[353, "libs-uow-tool-belt-general-tools-make-df-with-3-levels"]], "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick": [[354, "libs-uow-tool-belt-general-tools-make-df-with-3-levels-quick"]], "libs.uow_tool_belt.general_tools.make_nested_dict_from_df": [[355, "libs-uow-tool-belt-general-tools-make-nested-dict-from-df"]], "libs.uow_tool_belt.general_tools.mysql_server": [[356, "libs-uow-tool-belt-general-tools-mysql-server"]], "libs.uow_tool_belt.general_tools.parallelize": [[357, "libs-uow-tool-belt-general-tools-parallelize"]], "libs.uow_tool_belt.general_tools.partial_corr": [[358, "libs-uow-tool-belt-general-tools-partial-corr"]], "libs.uow_tool_belt.general_tools.percentile_10": [[359, "libs-uow-tool-belt-general-tools-percentile-10"]], "libs.uow_tool_belt.general_tools.percentile_90": [[360, "libs-uow-tool-belt-general-tools-percentile-90"]], "libs.uow_tool_belt.general_tools.percentile_custom": [[361, "libs-uow-tool-belt-general-tools-percentile-custom"]], "libs.uow_tool_belt.general_tools.permutation_test": [[362, "libs-uow-tool-belt-general-tools-permutation-test"]], "libs.uow_tool_belt.general_tools.permutation_test_only_diff": [[363, "libs-uow-tool-belt-general-tools-permutation-test-only-diff"]], "libs.uow_tool_belt.general_tools.proportional": [[364, "libs-uow-tool-belt-general-tools-proportional"]], "libs.uow_tool_belt.general_tools.r_squared": [[365, "libs-uow-tool-belt-general-tools-r-squared"]], "libs.uow_tool_belt.general_tools.read_paras": [[366, "libs-uow-tool-belt-general-tools-read-paras"]], "libs.uow_tool_belt.general_tools.recursive_concat": [[367, "libs-uow-tool-belt-general-tools-recursive-concat"]], "libs.uow_tool_belt.general_tools.recursive_minimization": [[368, "libs-uow-tool-belt-general-tools-recursive-minimization"]], "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists": [[369, "libs-uow-tool-belt-general-tools-remove-nan-coupled-lists"]], "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm": [[370, "libs-uow-tool-belt-general-tools-scale-and-s-from-mean-sigma-lognorm"]], "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm": [[371, "libs-uow-tool-belt-general-tools-scale-and-s-from-quantile-sigma-lognorm"]], "libs.uow_tool_belt.general_tools.set_interval": [[372, "libs-uow-tool-belt-general-tools-set-interval"]], "libs.uow_tool_belt.general_tools.shift_spatial_network": [[373, "libs-uow-tool-belt-general-tools-shift-spatial-network"]], "libs.uow_tool_belt.general_tools.show_dic": [[374, "libs-uow-tool-belt-general-tools-show-dic"]], "libs.uow_tool_belt.general_tools.silence": [[375, "libs-uow-tool-belt-general-tools-silence"]], "libs.uow_tool_belt.general_tools.simple_color_map_function": [[376, "libs-uow-tool-belt-general-tools-simple-color-map-function"]], "libs.uow_tool_belt.general_tools.simple_colormap_object": [[377, "libs-uow-tool-belt-general-tools-simple-colormap-object"]], "libs.uow_tool_belt.general_tools.sol_Bs": [[378, "libs-uow-tool-belt-general-tools-sol-bs"]], "libs.uow_tool_belt.general_tools.sort_lists": [[379, "libs-uow-tool-belt-general-tools-sort-lists"]], "libs.uow_tool_belt.general_tools.sort_paired_values": [[380, "libs-uow-tool-belt-general-tools-sort-paired-values"]], "libs.uow_tool_belt.general_tools.spread_integer": [[381, "libs-uow-tool-belt-general-tools-spread-integer"]], "libs.uow_tool_belt.general_tools.ssh_client_connection": [[382, "libs-uow-tool-belt-general-tools-ssh-client-connection"]], "libs.uow_tool_belt.general_tools.ssh_copy": [[383, "libs-uow-tool-belt-general-tools-ssh-copy"]], "libs.uow_tool_belt.general_tools.ssh_tunnel_connection": [[384, "libs-uow-tool-belt-general-tools-ssh-tunnel-connection"]], "libs.uow_tool_belt.general_tools.starmap_with_kwargs": [[385, "libs-uow-tool-belt-general-tools-starmap-with-kwargs"]], "libs.uow_tool_belt.general_tools.strip_string": [[386, "libs-uow-tool-belt-general-tools-strip-string"]], "libs.uow_tool_belt.general_tools.timeit": [[387, "libs-uow-tool-belt-general-tools-timeit"]], "libs.uow_tool_belt.general_tools.weight_avg": [[388, "libs-uow-tool-belt-general-tools-weight-avg"]], "libs.uow_tool_belt.general_tools.write_on_file": [[389, "libs-uow-tool-belt-general-tools-write-on-file"]], "libs.uow_tool_belt.general_tools.yes": [[390, "libs-uow-tool-belt-general-tools-yes"]], "libs.uow_tool_belt.logging": [[391, "module-libs.uow_tool_belt.logging"]], "libs.uow_tool_belt.network_tools": [[392, "module-libs.uow_tool_belt.network_tools"]], "libs.uow_tool_belt.plot_tools": [[393, "module-libs.uow_tool_belt.plot_tools"]], "libs.uow_tool_belt.plot_tools.bar_plot_template": [[394, "libs-uow-tool-belt-plot-tools-bar-plot-template"]], "libs.uow_tool_belt.plot_tools.savefig": [[395, "libs-uow-tool-belt-plot-tools-savefig"]], "libs.uow_tool_belt.trajectory_tools": [[396, "module-libs.uow_tool_belt.trajectory_tools"]], "libs.uow_tool_belt.trajectory_tools.compute_ab": [[397, "libs-uow-tool-belt-trajectory-tools-compute-ab"]], "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory": [[398, "libs-uow-tool-belt-trajectory-tools-create-vertical-trajectory"]], "libs.uow_tool_belt.trajectory_tools.detect_toc_tod": [[399, "libs-uow-tool-belt-trajectory-tools-detect-toc-tod"]], "libs.uow_tool_belt.trajectory_tools.plot_traj": [[400, "libs-uow-tool-belt-trajectory-tools-plot-traj"]], "mercury": [[401, "module-mercury"]], "mercury.manual_bool_cast": [[402, "mercury-manual-bool-cast"]], "modules": [[403, "module-modules"]], "modules.Auction": [[404, "module-modules.Auction"]], "modules.Auction.Auction": [[405, "module-modules.Auction.Auction"]], "modules.Auction.module_definition": [[406, "module-modules.Auction.module_definition"]], "modules.Auction.paras_Auction": [[407, "module-modules.Auction.paras_Auction"]], "modules.CM": [[408, "module-modules.CM"]], "modules.CM.CM": [[409, "module-modules.CM.CM"]], "modules.CM.CM.compute_adequate_default_parameters": [[410, "modules-cm-cm-compute-adequate-default-parameters"]], "modules.CM.CM.get_metric": [[411, "modules-cm-cm-get-metric"]], "modules.CM.CM.make_hotspot_decision_CM": [[412, "modules-cm-cm-make-hotspot-decision-cm"]], "modules.CM.CM.on_finalise_CM": [[413, "modules-cm-cm-on-finalise-cm"]], "modules.CM.CM.on_init_AOC": [[414, "modules-cm-cm-on-init-aoc"]], "modules.CM.CM.on_prepare_CM": [[415, "modules-cm-cm-on-prepare-cm"]], "modules.CM.module_definition": [[416, "module-modules.CM.module_definition"]], "modules.CM.paras_CM": [[417, "module-modules.CM.paras_CM"]], "modules.FAC": [[418, "module-modules.FAC"]], "modules.FAC.FAC_FIFO_queue": [[419, "module-modules.FAC.FAC_FIFO_queue"]], "modules.FAC.FAC_FIFO_queue.build_arrival_queue": [[420, "modules-fac-fac-fifo-queue-build-arrival-queue"]], "modules.FAC.FAC_FIFO_queue.update_arrival_queue": [[421, "modules-fac-fac-fifo-queue-update-arrival-queue"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue": [[422, "modules-fac-fac-fifo-queue-wait-for-flight-arrival-information-queue"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time": [[423, "modules-fac-fac-fifo-queue-wait-for-flight-arrival-information-request-provide-landing-time"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue": [[424, "modules-fac-fac-fifo-queue-wait-for-flight-in-planning-horizon-queue"]], "modules.FAC.FAC_total_cost": [[425, "module-modules.FAC.FAC_total_cost"]], "modules.FAC.FAC_total_cost.compute_cost_slots_total": [[426, "modules-fac-fac-total-cost-compute-cost-slots-total"]], "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times": [[427, "modules-fac-fac-total-cost-compute-costs-slots-arrival-delay-cost-func-slots-times"]], "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs": [[428, "modules-fac-fac-total-cost-compute-costs-slots-computing-all-costs"]], "modules.FAC.FAC_total_cost.request_cost_delay_function": [[429, "modules-fac-fac-total-cost-request-cost-delay-function"]], "modules.FAC.FAC_total_cost.wait_for_cost_delay_function": [[430, "modules-fac-fac-total-cost-wait-for-cost-delay-function"]], "modules.FAC.FAC_total_delay": [[431, "module-modules.FAC.FAC_total_delay"]], "modules.FAC.FAC_total_delay.compute_total_delay_slots": [[432, "modules-fac-fac-total-delay-compute-total-delay-slots"]], "modules.FAC.FAC_total_delay.request_time_propagate_delay": [[433, "modules-fac-fac-total-delay-request-time-propagate-delay"]], "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time": [[434, "modules-fac-fac-total-delay-wait-for-propagation-delay-time"]], "modules.FAC.module_definition": [[435, "module-modules.FAC.module_definition"]], "modules.FP": [[436, "module-modules.FP"]], "modules.FP.FP_L1": [[437, "module-modules.FP.FP_L1"]], "modules.FP.FP_L1.consider_flight_swap_FP1": [[438, "modules-fp-fp-l1-consider-flight-swap-fp1"]], "modules.FP.FP_L2": [[439, "module-modules.FP.FP_L2"]], "modules.FP.FP_L2.consider_flight_swap_FP2": [[440, "modules-fp-fp-l2-consider-flight-swap-fp2"]], "modules.FP.module_definition": [[441, "module-modules.FP.module_definition"]], "modules.HMI_HOTSPOT": [[442, "module-modules.HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_FP_SEL": [[443, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi": [[444, "modules-hmi-hotspot-hmi-fp-sel-on-init-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi": [[445, "modules-hmi-hotspot-hmi-fp-sel-on-init-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi": [[446, "modules-hmi-hotspot-hmi-fp-sel-receive-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli": [[447, "modules-hmi-hotspot-hmi-fp-sel-select-fp-cli"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi": [[448, "modules-hmi-hotspot-hmi-fp-sel-select-fp-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi": [[449, "modules-hmi-hotspot-hmi-fp-sel-select-fp-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi": [[450, "modules-hmi-hotspot-hmi-fp-sel-send-fp-options-to-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer": [[451, "modules-hmi-hotspot-hmi-fp-sel-wait-for-fp-remote-hmi-answer"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT": [[452, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision": [[453, "modules-hmi-hotspot-hmi-hotspot-compute-hotspot-decision"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi": [[454, "modules-hmi-hotspot-hmi-hotspot-make-hotspot-decision-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi": [[455, "modules-hmi-hotspot-hmi-hotspot-notify-aocs-of-final-allocation-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi": [[456, "modules-hmi-hotspot-hmi-hotspot-on-init-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation": [[457, "modules-hmi-hotspot-hmi-hotspot-receive-final-allocation"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages": [[458, "modules-hmi-hotspot-hmi-hotspot-receive-new-messages"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi": [[459, "modules-hmi-hotspot-hmi-hotspot-receive-regulation-decisions-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline": [[460, "modules-hmi-hotspot-hmi-hotspot-send-final-allocation-to-airline"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi": [[461, "modules-hmi-hotspot-hmi-hotspot-send-final-allocation-to-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi": [[462, "modules-hmi-hotspot-hmi-hotspot-send-regulation-info-to-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text": [[463, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient": [[464, "modules-hmi-hotspot-hmi-hotspot-client-text-messageclient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP": [[465, "modules-hmi-hotspot-hmi-hotspot-client-text-windowudpp"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2": [[466, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient": [[467, "modules-hmi-hotspot-hmi-hotspot-client-text2-messageclient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP": [[468, "modules-hmi-hotspot-hmi-hotspot-client-text2-windowudpp"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3": [[469, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient": [[470, "modules-hmi-hotspot-hmi-hotspot-client-text3-messageclient"]], "modules.HMI_HOTSPOT.HMI_server": [[471, "module-modules.HMI_HOTSPOT.HMI_server"]], "modules.HMI_HOTSPOT.HMI_server.MercuryServer": [[472, "modules-hmi-hotspot-hmi-server-mercuryserver"]], "modules.HMI_HOTSPOT.HMI_server.main": [[473, "modules-hmi-hotspot-hmi-server-main"]], "modules.HMI_HOTSPOT.client_test": [[474, "module-modules.HMI_HOTSPOT.client_test"]], "modules.HMI_HOTSPOT.client_test.Client": [[475, "modules-hmi-hotspot-client-test-client"]], "modules.HMI_HOTSPOT.client_test2": [[476, "module-modules.HMI_HOTSPOT.client_test2"]], "modules.HMI_HOTSPOT.client_test2.ClientHMI": [[477, "modules-hmi-hotspot-client-test2-clienthmi"]], "modules.HMI_HOTSPOT.client_test_hmi": [[478, "module-modules.HMI_HOTSPOT.client_test_hmi"]], "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI": [[479, "modules-hmi-hotspot-client-test-hmi-clienthmi"]], "modules.HMI_HOTSPOT.client_test_hmi2": [[480, "module-modules.HMI_HOTSPOT.client_test_hmi2"]], "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI": [[481, "modules-hmi-hotspot-client-test-hmi2-clienthmi"]], "modules.HMI_HOTSPOT.client_test_mercury": [[482, "module-modules.HMI_HOTSPOT.client_test_mercury"]], "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury": [[483, "modules-hmi-hotspot-client-test-mercury-clientmercury"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi": [[484, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient": [[485, "modules-hmi-hotspot-hmi-regulation-test-hmi-messageclient"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP": [[486, "modules-hmi-hotspot-hmi-regulation-test-hmi-windowselectfp"]], "modules.HMI_HOTSPOT.module_definition": [[487, "module-modules.HMI_HOTSPOT.module_definition"]], "modules.HMI_HOTSPOT.paras_HMI_FP_SEL": [[488, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"]], "modules.HMI_HOTSPOT.paras_HMI_HOTSPOT": [[489, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"]], "modules.TA": [[490, "module-modules.TA"]], "modules.TA.TA_L1": [[491, "module-modules.TA.TA_L1"]], "modules.TA.TA_L1.consider_waiting_pax_TA1": [[492, "modules-ta-ta-l1-consider-waiting-pax-ta1"]], "modules.TA.TA_L1.cost_index_assessment_TA1": [[493, "modules-ta-ta-l1-cost-index-assessment-ta1"]], "modules.TA.TA_L1.wait_for_toc_reached_message_TA1": [[494, "modules-ta-ta-l1-wait-for-toc-reached-message-ta1"]], "modules.TA.TA_L2": [[495, "module-modules.TA.TA_L2"]], "modules.TA.TA_L2.consider_waiting_pax_TA2": [[496, "modules-ta-ta-l2-consider-waiting-pax-ta2"]], "modules.TA.TA_L2.cost_index_assessment_TA2": [[497, "modules-ta-ta-l2-cost-index-assessment-ta2"]], "modules.TA.TA_L2.wait_for_toc_reached_message_TA2": [[498, "modules-ta-ta-l2-wait-for-toc-reached-message-ta2"]], "modules.TA.module_definition": [[499, "module-modules.TA.module_definition"]], "modules.nostromo_EAMAN": [[500, "module-modules.nostromo_EAMAN"]], "modules.nostromo_EAMAN.module_definition": [[501, "module-modules.nostromo_EAMAN.module_definition"]], "modules.nostromo_EAMAN.nostromo_EAMAN": [[502, "module-modules.nostromo_EAMAN.nostromo_EAMAN"]], "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW": [[503, "modules-nostromo-eaman-nostromo-eaman-ask-radar-update-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices": [[504, "modules-nostromo-eaman-nostromo-eaman-build-matrices"]], "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff": [[505, "modules-nostromo-eaman-nostromo-eaman-build-stuff"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight": [[506, "modules-nostromo-eaman-nostromo-eaman-compute-allocation-cost-for-flight"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights": [[507, "modules-nostromo-eaman-nostromo-eaman-compute-allocation-for-all-flights"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation": [[508, "modules-nostromo-eaman-nostromo-eaman-compute-initial-allocation"]], "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen": [[509, "modules-nostromo-eaman-nostromo-eaman-generate-probas-speed-gen"]], "modules.nostromo_EAMAN.nostromo_EAMAN.get_p": [[510, "modules-nostromo-eaman-nostromo-eaman-get-p"]], "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon": [[511, "modules-nostromo-eaman-nostromo-eaman-notify-flight-in-data-horizon"]], "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing": [[512, "modules-nostromo-eaman-nostromo-eaman-notify-flight-landing"]], "modules.nostromo_EAMAN.nostromo_EAMAN.on_init": [[513, "modules-nostromo-eaman-nostromo-eaman-on-init"]], "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent": [[514, "modules-nostromo-eaman-nostromo-eaman-on-init-agent"]], "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced": [[515, "modules-nostromo-eaman-nostromo-eaman-prepare-data-for-optimizer-advanced"]], "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline": [[516, "modules-nostromo-eaman-nostromo-eaman-prepare-data-for-optimizer-baseline"]], "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages": [[517, "modules-nostromo-eaman-nostromo-eaman-receive-new-messages"]], "modules.nostromo_EAMAN.nostromo_EAMAN.rescale": [[518, "modules-nostromo-eaman-nostromo-eaman-rescale"]], "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function": [[519, "modules-nostromo-eaman-nostromo-eaman-send-request-for-cost-function"]], "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request": [[520, "modules-nostromo-eaman-nostromo-eaman-send-request-for-potential-delay-recovery-request"]], "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW": [[521, "modules-nostromo-eaman-nostromo-eaman-update-arrival-sequence-planning-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function": [[522, "modules-nostromo-eaman-nostromo-eaman-wait-for-cost-function"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW": [[523, "modules-nostromo-eaman-nostromo-eaman-wait-for-estimated-landing-time-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW": [[524, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-arrival-information-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon": [[525, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-in-data-horizon"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW": [[526, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-in-eaman-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information": [[527, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-potential-delay-recover-information"]], "modules.nostromo_EAMAN.optimiser_advanced": [[528, "module-modules.nostromo_EAMAN.optimiser_advanced"]], "modules.nostromo_EAMAN.optimiser_advanced.DummyFile": [[529, "modules-nostromo-eaman-optimiser-advanced-dummyfile"]], "modules.nostromo_EAMAN.optimiser_advanced.NoSolution": [[530, "modules-nostromo-eaman-optimiser-advanced-nosolution"]], "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable": [[531, "modules-nostromo-eaman-optimiser-advanced-allocation-from-variable"]], "modules.nostromo_EAMAN.optimiser_advanced.clock_time": [[532, "modules-nostromo-eaman-optimiser-advanced-clock-time"]], "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element": [[533, "modules-nostromo-eaman-optimiser-advanced-get-first-matching-element"]], "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced": [[534, "modules-nostromo-eaman-optimiser-advanced-optimizer-advanced"]], "modules.nostromo_EAMAN.optimiser_advanced.silence": [[535, "modules-nostromo-eaman-optimiser-advanced-silence"]], "modules.nostromo_EAMAN.optimiser_baseline": [[536, "module-modules.nostromo_EAMAN.optimiser_baseline"]], "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline": [[537, "modules-nostromo-eaman-optimiser-baseline-optimizer-baseline"]], "modules.nostromo_EAMAN.optimiser_baseline_fast": [[538, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline": [[539, "modules-nostromo-eaman-optimiser-baseline-fast-optimizer-baseline"]], "Mercury\u2019s documentation": [[540, "mercury-s-documentation"]], "Contents:": [[540, null]], "Indices and tables": [[540, "indices-and-tables"]]}, "indexentries": {"agents": [[3, "module-agents"]], "module": [[3, "module-agents"], [4, "module-agents.agent_base"], [7, "module-agents.airline_operating_centre"], [15, "module-agents.aman"], [23, "module-agents.commodities"], [24, "module-agents.commodities.aircraft"], [26, "module-agents.commodities.alliance"], [28, "module-agents.commodities.arrival_slot"], [30, "module-agents.commodities.atfm_delay"], [32, "module-agents.commodities.atfm_regulation"], [35, "module-agents.commodities.central_registry"], [37, "module-agents.commodities.debug_flights"], [38, "module-agents.commodities.flight_plan"], [42, "module-agents.commodities.pax_itinerary_group"], [45, "module-agents.commodities.route"], [48, "module-agents.commodities.slot_queue"], [52, "module-agents.commodities.slot_queue_eaman"], [55, "module-agents.dman"], [61, "module-agents.eaman"], [66, "module-agents.flight"], [77, "module-agents.ground_airport"], [84, "module-agents.network_manager"], [90, "module-agents.radar"], [96, "module-agents.seed"], [97, "module-core"], [98, "module-core.delivery_system"], [102, "module-core.module_management"], [108, "module-core.parametriser"], [113, "module-core.read_config"], [124, "module-core.results_aggregator"], [130, "module-core.scenario_loader"], [136, "module-core.simulation_manager"], [140, "module-core.world_builder"], [143, "module-dashboard"], [144, "module-dashboard.mercury_gui"], [145, "module-libs"], [146, "module-libs.airspace_particularities"], [150, "module-libs.db_access_functions"], [221, "module-libs.input_manager"], [227, "module-libs.other_tools"], [236, "module-libs.performance_trajectory"], [237, "module-libs.performance_trajectory.ac_performances"], [242, "module-libs.performance_trajectory.standard_atmosphere"], [247, "module-libs.performance_trajectory.trajectory"], [251, "module-libs.performance_trajectory.unit_conversions"], [257, "module-libs.result_manager"], [259, "module-libs.result_tools"], [278, "module-libs.uow_tool_belt"], [279, "module-libs.uow_tool_belt.DTW"], [282, "module-libs.uow_tool_belt.airspace_particularities"], [286, "module-libs.uow_tool_belt.connection_tools"], [307, "module-libs.uow_tool_belt.general_tools"], [391, "module-libs.uow_tool_belt.logging"], [392, "module-libs.uow_tool_belt.network_tools"], [393, "module-libs.uow_tool_belt.plot_tools"], [396, "module-libs.uow_tool_belt.trajectory_tools"], [401, "module-mercury"], [403, "module-modules"], [404, "module-modules.Auction"], [405, "module-modules.Auction.Auction"], [406, "module-modules.Auction.module_definition"], [407, "module-modules.Auction.paras_Auction"], [408, "module-modules.CM"], [409, "module-modules.CM.CM"], [416, "module-modules.CM.module_definition"], [417, "module-modules.CM.paras_CM"], [418, "module-modules.FAC"], [419, "module-modules.FAC.FAC_FIFO_queue"], [425, "module-modules.FAC.FAC_total_cost"], [431, "module-modules.FAC.FAC_total_delay"], [435, "module-modules.FAC.module_definition"], [436, "module-modules.FP"], [437, "module-modules.FP.FP_L1"], [439, "module-modules.FP.FP_L2"], [441, "module-modules.FP.module_definition"], [442, "module-modules.HMI_HOTSPOT"], [443, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"], [452, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"], [463, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"], [466, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"], [469, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"], [471, "module-modules.HMI_HOTSPOT.HMI_server"], [474, "module-modules.HMI_HOTSPOT.client_test"], [476, "module-modules.HMI_HOTSPOT.client_test2"], [478, "module-modules.HMI_HOTSPOT.client_test_hmi"], [480, "module-modules.HMI_HOTSPOT.client_test_hmi2"], [482, "module-modules.HMI_HOTSPOT.client_test_mercury"], [484, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"], [487, "module-modules.HMI_HOTSPOT.module_definition"], [488, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"], [489, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"], [490, "module-modules.TA"], [491, "module-modules.TA.TA_L1"], [495, "module-modules.TA.TA_L2"], [499, "module-modules.TA.module_definition"], [500, "module-modules.nostromo_EAMAN"], [501, "module-modules.nostromo_EAMAN.module_definition"], [502, "module-modules.nostromo_EAMAN.nostromo_EAMAN"], [528, "module-modules.nostromo_EAMAN.optimiser_advanced"], [536, "module-modules.nostromo_EAMAN.optimiser_baseline"], [538, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "agents.agent_base": [[4, "module-agents.agent_base"]], "agent (class in agents.agent_base)": [[5, "agents.agent_base.Agent"]], "__init__() (agents.agent_base.agent method)": [[5, "agents.agent_base.Agent.__init__"]], "apply_agent_modifications() (agents.agent_base.agent method)": [[5, "agents.agent_base.Agent.apply_agent_modifications"]], "role (class in agents.agent_base)": [[6, "agents.agent_base.Role"]], "__init__() (agents.agent_base.role method)": [[6, "agents.agent_base.Role.__init__"]], "send() (agents.agent_base.role method)": [[6, "agents.agent_base.Role.send"]], "agents.airline_operating_centre": [[7, "module-agents.airline_operating_centre"]], "airlineflightplanner (class in agents.airline_operating_centre)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner"]], "__init__() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.__init__"]], "build_delay_cost_functions_advanced() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_advanced"]], "build_delay_cost_functions_air_heuristic() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_air_heuristic"]], "build_delay_cost_functions_dci_l2() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_dci_l2"]], "build_delay_cost_functions_dci_l2_old() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_dci_l2_old"]], "build_delay_cost_functions_heuristic() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic"]], "build_delay_cost_functions_heuristic_flight() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic_flight"]], "build_delay_cost_functions_heuristic_pax() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic_pax"]], "compute_reactionary_delays() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.compute_reactionary_delays"]], "cost_not_wait_for_pax_group() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.cost_not_wait_for_pax_group"]], "cost_wait_for_pax_group() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.cost_wait_for_pax_group"]], "decide_options_alternatives() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.decide_options_alternatives"]], "reassess_departure_turnaround() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.reassess_departure_turnaround"]], "send() (agents.airline_operating_centre.airlineflightplanner method)": [[8, "agents.airline_operating_centre.AirlineFlightPlanner.send"]], "airlineoperatingcentre (class in agents.airline_operating_centre)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre"]], "__init__() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.__init__"]], "apply_agent_modifications() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.apply_agent_modifications"]], "average_cost_function() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.average_cost_function"]], "average_missed_pax_cost() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.average_missed_pax_cost"]], "get_airline_of_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_airline_of_flight"]], "get_airlines_in_alliance() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_airlines_in_alliance"]], "get_all_airlines() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_all_airlines"]], "get_average_price_on_leg() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_average_price_on_leg"]], "get_curfew_buffer() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_curfew_buffer"]], "get_destination() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_destination"]], "get_first_obt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_first_obt"]], "get_flights() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_flights"]], "get_ibt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_ibt"]], "get_last_ibt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_last_ibt"]], "get_mct() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_mct"]], "get_n_pax_to_board() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_n_pax_to_board"]], "get_number_seats_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_number_seats_flight"]], "get_number_seats_itinerary() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_number_seats_itinerary"]], "get_obt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_obt"]], "get_origin() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_origin"]], "get_pax_to_board() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_pax_to_board"]], "get_reactionary_buffer() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_reactionary_buffer"]], "get_status() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_status"]], "get_tat() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_tat"]], "get_total_travelling_time() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.get_total_travelling_time"]], "give_compensation_func() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.give_compensation_func"]], "give_delay_distr() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.give_delay_distr"]], "give_duty_of_care_func() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.give_duty_of_care_func"]], "give_non_pax_cost_delay() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.give_non_pax_cost_delay"]], "own_flights() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.own_flights"]], "receive() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.receive"]], "register_aircraft() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_aircraft"]], "register_airport() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_airport"]], "register_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_flight"]], "register_fp_pool() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_fp_pool"]], "register_list_aircraft() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_list_aircraft"]], "register_nm() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_nm"]], "register_pax_itinerary_group() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_pax_itinerary_group"]], "register_trajectories_pool() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.register_trajectories_pool"]], "set_log_file() (agents.airline_operating_centre.airlineoperatingcentre method)": [[9, "agents.airline_operating_centre.AirlineOperatingCentre.set_log_file"]], "airlinepaxhandler (class in agents.airline_operating_centre)": [[10, "agents.airline_operating_centre.AirlinePaxHandler"]], "__init__() (agents.airline_operating_centre.airlinepaxhandler method)": [[10, "agents.airline_operating_centre.AirlinePaxHandler.__init__"]], "arrive_pax() (agents.airline_operating_centre.airlinepaxhandler method)": [[10, "agents.airline_operating_centre.AirlinePaxHandler.arrive_pax"]], "board_pax() (agents.airline_operating_centre.airlinepaxhandler method)": [[10, "agents.airline_operating_centre.AirlinePaxHandler.board_pax"]], "send() (agents.airline_operating_centre.airlinepaxhandler method)": [[10, "agents.airline_operating_centre.AirlinePaxHandler.send"]], "dynamiccostindexcomputer (class in agents.airline_operating_centre)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer"]], "__init__() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.__init__"]], "build_delay_cost_functions_dci_l1() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.build_delay_cost_functions_dci_l1"]], "build_delay_cost_functions_dci_l1_old() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.build_delay_cost_functions_dci_l1_old"]], "cost_index_assessment() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.cost_index_assessment"]], "decide_if_delay_recovery_performed() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.decide_if_delay_recovery_performed"]], "plot_costs_dci() (agents.airline_operating_centre.dynamiccostindexcomputer static method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.plot_costs_dci"]], "reassess_cost_index_ta0() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA0"]], "reassess_cost_index_ta1() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA1"]], "reassess_cost_index_ta2() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA2"]], "send() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.send"]], "send_speed_up_msg_to_fpu() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[11, "agents.airline_operating_centre.DynamicCostIndexComputer.send_speed_up_msg_to_fpu"]], "flightplanselector (class in agents.airline_operating_centre)": [[12, "agents.airline_operating_centre.FlightPlanSelector"]], "__init__() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.__init__"]], "decide_fp() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.decide_fp"]], "select_fp() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.select_fp"]], "send() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.send"]], "send_option_selected() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.send_option_selected"]], "wait_for_fp_selection_request() (agents.airline_operating_centre.flightplanselector method)": [[12, "agents.airline_operating_centre.FlightPlanSelector.wait_for_fp_selection_request"]], "passengerreallocation (class in agents.airline_operating_centre)": [[13, "agents.airline_operating_centre.PassengerReallocation"]], "__init__() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.__init__"]], "compute_reallocation_options() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.compute_reallocation_options"]], "do_reallocation() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.do_reallocation"]], "reallocate_pax() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.reallocate_pax"]], "send() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.send"]], "send_allocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.send_allocation_pax_request"]], "wait_for_allocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.wait_for_allocation_pax_request"]], "wait_for_reallocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.wait_for_reallocation_pax_request"]], "wait_for_remove_pax_from_boarding_list_request() (agents.airline_operating_centre.passengerreallocation method)": [[13, "agents.airline_operating_centre.PassengerReallocation.wait_for_remove_pax_from_boarding_list_request"]], "turnaroundoperations (class in agents.airline_operating_centre)": [[14, "agents.airline_operating_centre.TurnaroundOperations"]], "__init__() (agents.airline_operating_centre.turnaroundoperations method)": [[14, "agents.airline_operating_centre.TurnaroundOperations.__init__"]], "check_arrival() (agents.airline_operating_centre.turnaroundoperations method)": [[14, "agents.airline_operating_centre.TurnaroundOperations.check_arrival"]], "check_delay_estimation() (agents.airline_operating_centre.turnaroundoperations method)": [[14, "agents.airline_operating_centre.TurnaroundOperations.check_delay_estimation"]], "send() (agents.airline_operating_centre.turnaroundoperations method)": [[14, "agents.airline_operating_centre.TurnaroundOperations.send"]], "agents.aman": [[15, "module-agents.aman"]], "aman (class in agents.aman)": [[16, "agents.aman.AMAN"]], "__init__() (agents.aman.aman method)": [[16, "agents.aman.AMAN.__init__"]], "apply_agent_modifications() (agents.aman.aman method)": [[16, "agents.aman.AMAN.apply_agent_modifications"]], "arrivalcancellationhandler (class in agents.aman)": [[17, "agents.aman.ArrivalCancellationHandler"]], "__init__() (agents.aman.arrivalcancellationhandler method)": [[17, "agents.aman.ArrivalCancellationHandler.__init__"]], "send() (agents.aman.arrivalcancellationhandler method)": [[17, "agents.aman.ArrivalCancellationHandler.send"]], "arrivalqueueplannedupdater (class in agents.aman)": [[18, "agents.aman.ArrivalQueuePlannedUpdater"]], "__init__() (agents.aman.arrivalqueueplannedupdater method)": [[18, "agents.aman.ArrivalQueuePlannedUpdater.__init__"]], "send() (agents.aman.arrivalqueueplannedupdater method)": [[18, "agents.aman.ArrivalQueuePlannedUpdater.send"]], "arrivaltacticalprovider (class in agents.aman)": [[19, "agents.aman.ArrivalTacticalProvider"]], "__init__() (agents.aman.arrivaltacticalprovider method)": [[19, "agents.aman.ArrivalTacticalProvider.__init__"]], "send() (agents.aman.arrivaltacticalprovider method)": [[19, "agents.aman.ArrivalTacticalProvider.send"]], "flightinamanhandler (class in agents.aman)": [[20, "agents.aman.FlightInAMANHandler"]], "__init__() (agents.aman.flightinamanhandler method)": [[20, "agents.aman.FlightInAMANHandler.__init__"]], "send() (agents.aman.flightinamanhandler method)": [[20, "agents.aman.FlightInAMANHandler.send"]], "slotassigner (class in agents.aman)": [[21, "agents.aman.SlotAssigner"]], "__init__() (agents.aman.slotassigner method)": [[21, "agents.aman.SlotAssigner.__init__"]], "send() (agents.aman.slotassigner method)": [[21, "agents.aman.SlotAssigner.send"]], "strategicarrivalqueuebuilder (class in agents.aman)": [[22, "agents.aman.StrategicArrivalQueueBuilder"]], "__init__() (agents.aman.strategicarrivalqueuebuilder method)": [[22, "agents.aman.StrategicArrivalQueueBuilder.__init__"]], "send() (agents.aman.strategicarrivalqueuebuilder method)": [[22, "agents.aman.StrategicArrivalQueueBuilder.send"]], "agents.commodities": [[23, "module-agents.commodities"]], "agents.commodities.aircraft": [[24, "module-agents.commodities.aircraft"]], "aircraft (class in agents.commodities.aircraft)": [[25, "agents.commodities.aircraft.Aircraft"]], "getqueue (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.GetQueue"]], "putqueue (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.PutQueue"]], "__init__() (agents.commodities.aircraft.aircraft method)": [[25, "agents.commodities.aircraft.Aircraft.__init__"]], "add_flight() (agents.commodities.aircraft.aircraft method)": [[25, "agents.commodities.aircraft.Aircraft.add_flight"]], "capacity (agents.commodities.aircraft.aircraft property)": [[25, "agents.commodities.aircraft.Aircraft.capacity"]], "count (agents.commodities.aircraft.aircraft property)": [[25, "agents.commodities.aircraft.Aircraft.count"]], "get (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.get"]], "get_queue (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.get_queue"]], "put (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.put"]], "put_queue (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.put_queue"]], "queue (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.queue"]], "release (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.release"]], "request (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.request"]], "users (agents.commodities.aircraft.aircraft attribute)": [[25, "agents.commodities.aircraft.Aircraft.users"]], "agents.commodities.alliance": [[26, "module-agents.commodities.alliance"]], "alliance (class in agents.commodities.alliance)": [[27, "agents.commodities.alliance.Alliance"]], "__init__() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.__init__"]], "clear() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.clear"]], "copy() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.copy"]], "fromkeys() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.fromkeys"]], "get() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.get"]], "items() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.items"]], "keys() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.keys"]], "pop() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.pop"]], "popitem() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.popitem"]], "setdefault() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.setdefault"]], "update() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.update"]], "values() (agents.commodities.alliance.alliance method)": [[27, "agents.commodities.alliance.Alliance.values"]], "agents.commodities.arrival_slot": [[28, "module-agents.commodities.arrival_slot"]], "arrivalslot (class in agents.commodities.arrival_slot)": [[29, "agents.commodities.arrival_slot.ArrivalSlot"]], "__init__() (agents.commodities.arrival_slot.arrivalslot method)": [[29, "agents.commodities.arrival_slot.ArrivalSlot.__init__"]], "agents.commodities.atfm_delay": [[30, "module-agents.commodities.atfm_delay"]], "atfmdelay (class in agents.commodities.atfm_delay)": [[31, "agents.commodities.atfm_delay.ATFMDelay"]], "__init__() (agents.commodities.atfm_delay.atfmdelay method)": [[31, "agents.commodities.atfm_delay.ATFMDelay.__init__"]], "agents.commodities.atfm_regulation": [[32, "module-agents.commodities.atfm_regulation"]], "atfmbooker (class in agents.commodities.atfm_regulation)": [[33, "agents.commodities.atfm_regulation.ATFMBooker"]], "getqueue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.GetQueue"]], "putqueue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.PutQueue"]], "__init__() (agents.commodities.atfm_regulation.atfmbooker method)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.__init__"]], "capacity (agents.commodities.atfm_regulation.atfmbooker property)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.capacity"]], "count (agents.commodities.atfm_regulation.atfmbooker property)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.count"]], "get (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.get"]], "get_queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.get_queue"]], "put (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.put"]], "put_queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.put_queue"]], "queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.queue"]], "release() (agents.commodities.atfm_regulation.atfmbooker method)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.release"]], "request (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.request"]], "users (agents.commodities.atfm_regulation.atfmbooker attribute)": [[33, "agents.commodities.atfm_regulation.ATFMBooker.users"]], "atfmregulation (class in agents.commodities.atfm_regulation)": [[34, "agents.commodities.atfm_regulation.ATFMRegulation"]], "__init__() (agents.commodities.atfm_regulation.atfmregulation method)": [[34, "agents.commodities.atfm_regulation.ATFMRegulation.__init__"]], "agents.commodities.central_registry": [[35, "module-agents.commodities.central_registry"]], "centralregistry (class in agents.commodities.central_registry)": [[36, "agents.commodities.central_registry.CentralRegistry"]], "__init__() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.__init__"]], "get_average_price_on_leg() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.get_average_price_on_leg"]], "get_reactionary_buffer() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.get_reactionary_buffer"]], "get_tat() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.get_tat"]], "get_total_travelling_time() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.get_total_travelling_time"]], "register_agent() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.register_agent"]], "register_airline() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.register_airline"]], "register_network_manager() (agents.commodities.central_registry.centralregistry method)": [[36, "agents.commodities.central_registry.CentralRegistry.register_network_manager"]], "agents.commodities.debug_flights": [[37, "module-agents.commodities.debug_flights"]], "agents.commodities.flight_plan": [[38, "module-agents.commodities.flight_plan"]], "flightplan (class in agents.commodities.flight_plan)": [[39, "agents.commodities.flight_plan.FlightPlan"]], "__init__() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.__init__"]], "add_point_original_planned() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.add_point_original_planned"]], "find_intersecting_point() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.find_intersecting_point"]], "get_estimated_fuel_consumption() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.get_estimated_fuel_consumption"]], "get_eta_wo_atfm() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.get_eta_wo_atfm"]], "get_planned_flying_time_to_landing() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.get_planned_flying_time_to_landing"]], "name_point() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.name_point"]], "recompute_speeds_new_point() (agents.commodities.flight_plan.flightplan method)": [[39, "agents.commodities.flight_plan.FlightPlan.recompute_speeds_new_point"]], "flightplanpoint (class in agents.commodities.flight_plan)": [[40, "agents.commodities.flight_plan.FlightPlanPoint"]], "__init__() (agents.commodities.flight_plan.flightplanpoint method)": [[40, "agents.commodities.flight_plan.FlightPlanPoint.__init__"]], "my_deep_copy() (agents.commodities.flight_plan.flightplanpoint method)": [[40, "agents.commodities.flight_plan.FlightPlanPoint.my_deep_copy"]], "print_full() (agents.commodities.flight_plan.flightplanpoint method)": [[40, "agents.commodities.flight_plan.FlightPlanPoint.print_full"]], "set_event() (agents.commodities.flight_plan.flightplanpoint method)": [[40, "agents.commodities.flight_plan.FlightPlanPoint.set_event"]], "set_name() (agents.commodities.flight_plan.flightplanpoint method)": [[40, "agents.commodities.flight_plan.FlightPlanPoint.set_name"]], "build_proj() (in module agents.commodities.flight_plan)": [[41, "agents.commodities.flight_plan.build_proj"]], "agents.commodities.pax_itinerary_group": [[42, "module-agents.commodities.pax_itinerary_group"]], "paxitinerarygroup (class in agents.commodities.pax_itinerary_group)": [[43, "agents.commodities.pax_itinerary_group.PaxItineraryGroup"]], "__init__() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[43, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.__init__"]], "get_itinerary_so_far() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[43, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.get_itinerary_so_far"]], "give_itinerary() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[43, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.give_itinerary"]], "give_new_itinerary_from_last_flight() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[43, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.give_new_itinerary_from_last_flight"]], "func() (in module agents.commodities.pax_itinerary_group)": [[44, "agents.commodities.pax_itinerary_group.func"]], "agents.commodities.route": [[45, "module-agents.commodities.route"]], "route (class in agents.commodities.route)": [[46, "agents.commodities.route.Route"]], "__init__() (agents.commodities.route.route method)": [[46, "agents.commodities.route.Route.__init__"]], "routepoint (class in agents.commodities.route)": [[47, "agents.commodities.route.RoutePoint"]], "__init__() (agents.commodities.route.routepoint method)": [[47, "agents.commodities.route.RoutePoint.__init__"]], "agents.commodities.slot_queue": [[48, "module-agents.commodities.slot_queue"]], "capacityperiod (class in agents.commodities.slot_queue)": [[49, "agents.commodities.slot_queue.CapacityPeriod"]], "__init__() (agents.commodities.slot_queue.capacityperiod method)": [[49, "agents.commodities.slot_queue.CapacityPeriod.__init__"]], "get_slot_from_time() (agents.commodities.slot_queue.capacityperiod method)": [[49, "agents.commodities.slot_queue.CapacityPeriod.get_slot_from_time"]], "get_slot_number() (agents.commodities.slot_queue.capacityperiod method)": [[49, "agents.commodities.slot_queue.CapacityPeriod.get_slot_number"]], "get_time_from_slot_number() (agents.commodities.slot_queue.capacityperiod method)": [[49, "agents.commodities.slot_queue.CapacityPeriod.get_time_from_slot_number"]], "slot (class in agents.commodities.slot_queue)": [[50, "agents.commodities.slot_queue.Slot"]], "__init__() (agents.commodities.slot_queue.slot method)": [[50, "agents.commodities.slot_queue.Slot.__init__"]], "print_info() (agents.commodities.slot_queue.slot method)": [[50, "agents.commodities.slot_queue.Slot.print_info"]], "slotqueue (class in agents.commodities.slot_queue)": [[51, "agents.commodities.slot_queue.SlotQueue"]], "__init__() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.__init__"]], "assign_to_slot() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.assign_to_slot"]], "consolidate_queue() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.consolidate_queue"]], "get_slots_available() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.get_slots_available"]], "print_selector() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.print_selector"]], "swap_flights() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.swap_flights"]], "update_arrival_assigned() (agents.commodities.slot_queue.slotqueue method)": [[51, "agents.commodities.slot_queue.SlotQueue.update_arrival_assigned"]], "agents.commodities.slot_queue_eaman": [[52, "module-agents.commodities.slot_queue_eaman"]], "eamanslot (class in agents.commodities.slot_queue_eaman)": [[53, "agents.commodities.slot_queue_eaman.EAMANSlot"]], "__init__() (agents.commodities.slot_queue_eaman.eamanslot method)": [[53, "agents.commodities.slot_queue_eaman.EAMANSlot.__init__"]], "print_info() (agents.commodities.slot_queue_eaman.eamanslot method)": [[53, "agents.commodities.slot_queue_eaman.EAMANSlot.print_info"]], "eamanslotqueue (class in agents.commodities.slot_queue_eaman)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue"]], "__init__() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.__init__"]], "assign_to_slot() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.assign_to_slot"]], "consolidate_queue() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.consolidate_queue"]], "get_slots_available() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.get_slots_available"]], "print_selector() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.print_selector"]], "swap_flights() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.swap_flights"]], "update_arrival_assigned() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[54, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.update_arrival_assigned"]], "agents.dman": [[55, "module-agents.dman"]], "dman (class in agents.dman)": [[56, "agents.dman.DMAN"]], "__init__() (agents.dman.dman method)": [[56, "agents.dman.DMAN.__init__"]], "apply_agent_modifications() (agents.dman.dman method)": [[56, "agents.dman.DMAN.apply_agent_modifications"]], "receive() (agents.dman.dman method)": [[56, "agents.dman.DMAN.receive"]], "register_airport() (agents.dman.dman method)": [[56, "agents.dman.DMAN.register_airport"]], "register_radar() (agents.dman.dman method)": [[56, "agents.dman.DMAN.register_radar"]], "set_log_file() (agents.dman.dman method)": [[56, "agents.dman.DMAN.set_log_file"]], "departurecancellationhandler (class in agents.dman)": [[57, "agents.dman.DepartureCancellationHandler"]], "__init__() (agents.dman.departurecancellationhandler method)": [[57, "agents.dman.DepartureCancellationHandler.__init__"]], "send() (agents.dman.departurecancellationhandler method)": [[57, "agents.dman.DepartureCancellationHandler.send"]], "departurequeueupdater (class in agents.dman)": [[58, "agents.dman.DepartureQueueUpdater"]], "__init__() (agents.dman.departurequeueupdater method)": [[58, "agents.dman.DepartureQueueUpdater.__init__"]], "send() (agents.dman.departurequeueupdater method)": [[58, "agents.dman.DepartureQueueUpdater.send"]], "departureslotprovider (class in agents.dman)": [[59, "agents.dman.DepartureSlotProvider"]], "__init__() (agents.dman.departureslotprovider method)": [[59, "agents.dman.DepartureSlotProvider.__init__"]], "send() (agents.dman.departureslotprovider method)": [[59, "agents.dman.DepartureSlotProvider.send"]], "strategicdeparturequeuebuilder (class in agents.dman)": [[60, "agents.dman.StrategicDepartureQueueBuilder"]], "__init__() (agents.dman.strategicdeparturequeuebuilder method)": [[60, "agents.dman.StrategicDepartureQueueBuilder.__init__"]], "build_departure_queue() (agents.dman.strategicdeparturequeuebuilder method)": [[60, "agents.dman.StrategicDepartureQueueBuilder.build_departure_queue"]], "send() (agents.dman.strategicdeparturequeuebuilder method)": [[60, "agents.dman.StrategicDepartureQueueBuilder.send"]], "agents.eaman": [[61, "module-agents.eaman"]], "arrivalplannerprovider (class in agents.eaman)": [[62, "agents.eaman.ArrivalPlannerProvider"]], "__init__() (agents.eaman.arrivalplannerprovider method)": [[62, "agents.eaman.ArrivalPlannerProvider.__init__"]], "send() (agents.eaman.arrivalplannerprovider method)": [[62, "agents.eaman.ArrivalPlannerProvider.send"]], "arrivalqueueplannedupdatere (class in agents.eaman)": [[63, "agents.eaman.ArrivalQueuePlannedUpdaterE"]], "__init__() (agents.eaman.arrivalqueueplannedupdatere method)": [[63, "agents.eaman.ArrivalQueuePlannedUpdaterE.__init__"]], "send() (agents.eaman.arrivalqueueplannedupdatere method)": [[63, "agents.eaman.ArrivalQueuePlannedUpdaterE.send"]], "eaman (class in agents.eaman)": [[64, "agents.eaman.EAMAN"]], "__init__() (agents.eaman.eaman method)": [[64, "agents.eaman.EAMAN.__init__"]], "apply_agent_modifications() (agents.eaman.eaman method)": [[64, "agents.eaman.EAMAN.apply_agent_modifications"]], "flightinamanhandlere (class in agents.eaman)": [[65, "agents.eaman.FlightInAMANHandlerE"]], "__init__() (agents.eaman.flightinamanhandlere method)": [[65, "agents.eaman.FlightInAMANHandlerE.__init__"]], "send() (agents.eaman.flightinamanhandlere method)": [[65, "agents.eaman.FlightInAMANHandlerE.send"]], "agents.flight": [[66, "module-agents.flight"]], "aircraftdepartinghandler (class in agents.flight)": [[67, "agents.flight.AircraftDepartingHandler"]], "__init__() (agents.flight.aircraftdepartinghandler method)": [[67, "agents.flight.AircraftDepartingHandler.__init__"]], "check_push_back() (agents.flight.aircraftdepartinghandler method)": [[67, "agents.flight.AircraftDepartingHandler.check_push_back"]], "do_taxi_out() (agents.flight.aircraftdepartinghandler method)": [[67, "agents.flight.AircraftDepartingHandler.do_taxi_out"]], "send() (agents.flight.aircraftdepartinghandler method)": [[67, "agents.flight.AircraftDepartingHandler.send"]], "wait_for_taxi_out_time() (agents.flight.aircraftdepartinghandler method)": [[67, "agents.flight.AircraftDepartingHandler.wait_for_taxi_out_time"]], "departureslotrequester (class in agents.flight)": [[68, "agents.flight.DepartureSlotRequester"]], "__init__() (agents.flight.departureslotrequester method)": [[68, "agents.flight.DepartureSlotRequester.__init__"]], "check_push_back_ready() (agents.flight.departureslotrequester method)": [[68, "agents.flight.DepartureSlotRequester.check_push_back_ready"]], "send() (agents.flight.departureslotrequester method)": [[68, "agents.flight.DepartureSlotRequester.send"]], "wait_for_departure_slot() (agents.flight.departureslotrequester method)": [[68, "agents.flight.DepartureSlotRequester.wait_for_departure_slot"]], "wait_for_taxi_out_time_estimation() (agents.flight.departureslotrequester method)": [[68, "agents.flight.DepartureSlotRequester.wait_for_taxi_out_time_estimation"]], "fpinfoprovider (class in agents.flight)": [[69, "agents.flight.FPInfoProvider"]], "__init__() (agents.flight.fpinfoprovider method)": [[69, "agents.flight.FPInfoProvider.__init__"]], "compute_fp_metrics() (agents.flight.fpinfoprovider method)": [[69, "agents.flight.FPInfoProvider.compute_fp_metrics"]], "send() (agents.flight.fpinfoprovider method)": [[69, "agents.flight.FPInfoProvider.send"]], "flight (class in agents.flight)": [[70, "agents.flight.Flight"]], "__init__() (agents.flight.flight method)": [[70, "agents.flight.Flight.__init__"]], "apply_agent_modifications() (agents.flight.flight method)": [[70, "agents.flight.Flight.apply_agent_modifications"]], "print_full() (agents.flight.flight method)": [[70, "agents.flight.Flight.print_full"]], "receive() (agents.flight.flight method)": [[70, "agents.flight.Flight.receive"]], "reschedule_fai_request() (agents.flight.flight method)": [[70, "agents.flight.Flight.reschedule_fai_request"]], "set_log_file() (agents.flight.flight method)": [[70, "agents.flight.Flight.set_log_file"]], "transfer_to_aoc() (agents.flight.flight method)": [[70, "agents.flight.Flight.transfer_to_aoc"]], "flightarrivalinformationprovider (class in agents.flight)": [[71, "agents.flight.FlightArrivalInformationProvider"]], "__init__() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.__init__"]], "check_fai_request() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.check_fai_request"]], "compute_cost_slots() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.compute_cost_slots"]], "provide_flight_arrival_information() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.provide_flight_arrival_information"]], "provide_flight_estimated_landing_time() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.provide_flight_estimated_landing_time"]], "send() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.send"]], "wait_for_flight_arrival_information_request() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.wait_for_flight_arrival_information_request"]], "wait_for_flight_estimated_landing_time_request() (agents.flight.flightarrivalinformationprovider method)": [[71, "agents.flight.FlightArrivalInformationProvider.wait_for_flight_estimated_landing_time_request"]], "flightplanconstraintupdater (class in agents.flight)": [[72, "agents.flight.FlightPlanConstraintUpdater"]], "__init__() (agents.flight.flightplanconstraintupdater method)": [[72, "agents.flight.FlightPlanConstraintUpdater.__init__"]], "send() (agents.flight.flightplanconstraintupdater method)": [[72, "agents.flight.FlightPlanConstraintUpdater.send"]], "update_flight_plan_constraint_controlled_landing_time() (agents.flight.flightplanconstraintupdater method)": [[72, "agents.flight.FlightPlanConstraintUpdater.update_flight_plan_constraint_controlled_landing_time"]], "wait_for_flight_plan_controlled_landing_time_constraint_update_request() (agents.flight.flightplanconstraintupdater method)": [[72, "agents.flight.FlightPlanConstraintUpdater.wait_for_flight_plan_controlled_landing_time_constraint_update_request"]], "flightplanupdater (class in agents.flight)": [[73, "agents.flight.FlightPlanUpdater"]], "__init__() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.__init__"]], "assing_fp_no_compute() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.assing_FP_no_compute"]], "send() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.send"]], "update_fp_information() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.update_FP_information"]], "update_eobt() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.update_eobt"]], "update_speed() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.update_speed"]], "wait_for_fp_assigment_no_compute() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.wait_for_FP_assigment_no_compute"]], "wait_for_fp_update() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.wait_for_FP_update"]], "wait_for_eobt_update() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.wait_for_eobt_update"]], "wait_for_speed_update() (agents.flight.flightplanupdater method)": [[73, "agents.flight.FlightPlanUpdater.wait_for_speed_update"]], "groundarrivalhandler (class in agents.flight)": [[74, "agents.flight.GroundArrivalHandler"]], "__init__() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.__init__"]], "check_landed() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.check_landed"]], "do_taxi_in() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.do_taxi_in"]], "request_taxi_in_time() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.request_taxi_in_time"]], "send() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.send"]], "wait_for_taxi_in_time() (agents.flight.groundarrivalhandler method)": [[74, "agents.flight.GroundArrivalHandler.wait_for_taxi_in_time"]], "operatetrajectory (class in agents.flight)": [[75, "agents.flight.OperateTrajectory"]], "__init__() (agents.flight.operatetrajectory method)": [[75, "agents.flight.OperateTrajectory.__init__"]], "check_taxi_out_done() (agents.flight.operatetrajectory method)": [[75, "agents.flight.OperateTrajectory.check_taxi_out_done"]], "send() (agents.flight.operatetrajectory method)": [[75, "agents.flight.OperateTrajectory.send"]], "potentialdelayrecoveryprovider (class in agents.flight)": [[76, "agents.flight.PotentialDelayRecoveryProvider"]], "__init__() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.__init__"]], "compute_potential_delay_recovery() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.compute_potential_delay_recovery"]], "estimate_time_fuel_at_speed_change() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.estimate_time_fuel_at_speed_change"]], "estimate_time_fuel_speed_changes() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.estimate_time_fuel_speed_changes"]], "provide_potential_delay_recover_information() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.provide_potential_delay_recover_information"]], "send() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.send"]], "wait_for_potential_delay_recover_request() (agents.flight.potentialdelayrecoveryprovider method)": [[76, "agents.flight.PotentialDelayRecoveryProvider.wait_for_potential_delay_recover_request"]], "agents.ground_airport": [[77, "module-agents.ground_airport"]], "groundairport (class in agents.ground_airport)": [[78, "agents.ground_airport.GroundAirport"]], "__init__() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.__init__"]], "apply_agent_modifications() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.apply_agent_modifications"]], "give_connecting_time_dist() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.give_connecting_time_dist"]], "give_taxi_in_time_estimation_dist() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.give_taxi_in_time_estimation_dist"]], "give_taxi_out_time_estimation_dist() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.give_taxi_out_time_estimation_dist"]], "give_taxi_time_add_dist() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.give_taxi_time_add_dist"]], "give_turnaround_time_dists() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.give_turnaround_time_dists"]], "receive() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.receive"]], "register_dman() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.register_dman"]], "register_eaman() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.register_eaman"]], "register_flight() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.register_flight"]], "set_log_file() (agents.ground_airport.groundairport method)": [[78, "agents.ground_airport.GroundAirport.set_log_file"]], "groundhandler (class in agents.ground_airport)": [[79, "agents.ground_airport.GroundHandler"]], "__init__() (agents.ground_airport.groundhandler method)": [[79, "agents.ground_airport.GroundHandler.__init__"]], "compute_turnaround_time() (agents.ground_airport.groundhandler method)": [[79, "agents.ground_airport.GroundHandler.compute_turnaround_time"]], "do_turnaround() (agents.ground_airport.groundhandler method)": [[79, "agents.ground_airport.GroundHandler.do_turnaround"]], "send() (agents.ground_airport.groundhandler method)": [[79, "agents.ground_airport.GroundHandler.send"]], "wait_for_turnaround_request() (agents.ground_airport.groundhandler method)": [[79, "agents.ground_airport.GroundHandler.wait_for_turnaround_request"]], "provideconnectingtime (class in agents.ground_airport)": [[80, "agents.ground_airport.ProvideConnectingTime"]], "__init__() (agents.ground_airport.provideconnectingtime method)": [[80, "agents.ground_airport.ProvideConnectingTime.__init__"]], "send() (agents.ground_airport.provideconnectingtime method)": [[80, "agents.ground_airport.ProvideConnectingTime.send"]], "taxiinprovider (class in agents.ground_airport)": [[81, "agents.ground_airport.TaxiInProvider"]], "__init__() (agents.ground_airport.taxiinprovider method)": [[81, "agents.ground_airport.TaxiInProvider.__init__"]], "compute_taxi_in_time() (agents.ground_airport.taxiinprovider method)": [[81, "agents.ground_airport.TaxiInProvider.compute_taxi_in_time"]], "send() (agents.ground_airport.taxiinprovider method)": [[81, "agents.ground_airport.TaxiInProvider.send"]], "taxioutestimator (class in agents.ground_airport)": [[82, "agents.ground_airport.TaxiOutEstimator"]], "__init__() (agents.ground_airport.taxioutestimator method)": [[82, "agents.ground_airport.TaxiOutEstimator.__init__"]], "send() (agents.ground_airport.taxioutestimator method)": [[82, "agents.ground_airport.TaxiOutEstimator.send"]], "taxioutprovider (class in agents.ground_airport)": [[83, "agents.ground_airport.TaxiOutProvider"]], "__init__() (agents.ground_airport.taxioutprovider method)": [[83, "agents.ground_airport.TaxiOutProvider.__init__"]], "compute_taxi_out_time() (agents.ground_airport.taxioutprovider method)": [[83, "agents.ground_airport.TaxiOutProvider.compute_taxi_out_time"]], "send() (agents.ground_airport.taxioutprovider method)": [[83, "agents.ground_airport.TaxiOutProvider.send"]], "agents.network_manager": [[84, "module-agents.network_manager"]], "hotspotmanager (class in agents.network_manager)": [[85, "agents.network_manager.HotspotManager"]], "__init__() (agents.network_manager.hotspotmanager method)": [[85, "agents.network_manager.HotspotManager.__init__"]], "send() (agents.network_manager.hotspotmanager method)": [[85, "agents.network_manager.HotspotManager.send"]], "networkmanager (class in agents.network_manager)": [[86, "agents.network_manager.NetworkManager"]], "__init__() (agents.network_manager.networkmanager method)": [[86, "agents.network_manager.NetworkManager.__init__"]], "apply_agent_modifications() (agents.network_manager.networkmanager method)": [[86, "agents.network_manager.NetworkManager.apply_agent_modifications"]], "register_atfm_regulation() (agents.network_manager.networkmanager method)": [[86, "agents.network_manager.NetworkManager.register_atfm_regulation"]], "remove_regulation_slots_except() (agents.network_manager.networkmanager method)": [[86, "agents.network_manager.NetworkManager.remove_regulation_slots_except"]], "networkmanageracceptanddisseminatefp (class in agents.network_manager)": [[87, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP"]], "__init__() (agents.network_manager.networkmanageracceptanddisseminatefp method)": [[87, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP.__init__"]], "send() (agents.network_manager.networkmanageracceptanddisseminatefp method)": [[87, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP.send"]], "networkmanagercancelfp (class in agents.network_manager)": [[88, "agents.network_manager.NetworkManagerCancelFP"]], "__init__() (agents.network_manager.networkmanagercancelfp method)": [[88, "agents.network_manager.NetworkManagerCancelFP.__init__"]], "send() (agents.network_manager.networkmanagercancelfp method)": [[88, "agents.network_manager.NetworkManagerCancelFP.send"]], "networkmanagerflightplanprocessing (class in agents.network_manager)": [[89, "agents.network_manager.NetworkManagerFlightPlanProcessing"]], "__init__() (agents.network_manager.networkmanagerflightplanprocessing method)": [[89, "agents.network_manager.NetworkManagerFlightPlanProcessing.__init__"]], "compute_atfm_delay() (agents.network_manager.networkmanagerflightplanprocessing method)": [[89, "agents.network_manager.NetworkManagerFlightPlanProcessing.compute_atfm_delay"]], "send() (agents.network_manager.networkmanagerflightplanprocessing method)": [[89, "agents.network_manager.NetworkManagerFlightPlanProcessing.send"]], "agents.radar": [[90, "module-agents.radar"]], "disseminatecancellationflightplan (class in agents.radar)": [[91, "agents.radar.DisseminateCancellationFlightPlan"]], "__init__() (agents.radar.disseminatecancellationflightplan method)": [[91, "agents.radar.DisseminateCancellationFlightPlan.__init__"]], "send() (agents.radar.disseminatecancellationflightplan method)": [[91, "agents.radar.DisseminateCancellationFlightPlan.send"]], "disseminateflightplan (class in agents.radar)": [[92, "agents.radar.DisseminateFlightPlan"]], "__init__() (agents.radar.disseminateflightplan method)": [[92, "agents.radar.DisseminateFlightPlan.__init__"]], "add_subscription() (agents.radar.disseminateflightplan method)": [[92, "agents.radar.DisseminateFlightPlan.add_subscription"]], "disseminate_flight_plan() (agents.radar.disseminateflightplan method)": [[92, "agents.radar.DisseminateFlightPlan.disseminate_flight_plan"]], "send() (agents.radar.disseminateflightplan method)": [[92, "agents.radar.DisseminateFlightPlan.send"]], "disseminateflightpositionupdate (class in agents.radar)": [[93, "agents.radar.DisseminateFlightPositionUpdate"]], "__init__() (agents.radar.disseminateflightpositionupdate method)": [[93, "agents.radar.DisseminateFlightPositionUpdate.__init__"]], "check_flight_crossing_point() (agents.radar.disseminateflightpositionupdate method)": [[93, "agents.radar.DisseminateFlightPositionUpdate.check_flight_crossing_point"]], "send() (agents.radar.disseminateflightpositionupdate method)": [[93, "agents.radar.DisseminateFlightPositionUpdate.send"]], "radar (class in agents.radar)": [[94, "agents.radar.Radar"]], "__init__() (agents.radar.radar method)": [[94, "agents.radar.Radar.__init__"]], "apply_agent_modifications() (agents.radar.radar method)": [[94, "agents.radar.Radar.apply_agent_modifications"]], "receive() (agents.radar.radar method)": [[94, "agents.radar.Radar.receive"]], "register_airport() (agents.radar.radar method)": [[94, "agents.radar.Radar.register_airport"]], "set_log_file() (agents.radar.radar method)": [[94, "agents.radar.Radar.set_log_file"]], "radaraugmentflightplan (class in agents.radar)": [[95, "agents.radar.RadarAugmentFlightPlan"]], "__init__() (agents.radar.radaraugmentflightplan method)": [[95, "agents.radar.RadarAugmentFlightPlan.__init__"]], "augment_flight_plan() (agents.radar.radaraugmentflightplan method)": [[95, "agents.radar.RadarAugmentFlightPlan.augment_flight_plan"]], "send() (agents.radar.radaraugmentflightplan method)": [[95, "agents.radar.RadarAugmentFlightPlan.send"]], "agents.seed": [[96, "module-agents.seed"]], "core": [[97, "module-core"]], "core.delivery_system": [[98, "module-core.delivery_system"]], "letter (class in core.delivery_system)": [[99, "core.delivery_system.Letter"]], "__init__() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.__init__"]], "clear() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.clear"]], "copy() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.copy"]], "fromkeys() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.fromkeys"]], "get() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.get"]], "items() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.items"]], "keys() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.keys"]], "pop() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.pop"]], "popitem() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.popitem"]], "setdefault() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.setdefault"]], "update() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.update"]], "values() (core.delivery_system.letter method)": [[99, "core.delivery_system.Letter.values"]], "letterbox (class in core.delivery_system)": [[100, "core.delivery_system.LetterBox"]], "__init__() (core.delivery_system.letterbox method)": [[100, "core.delivery_system.LetterBox.__init__"]], "postman (class in core.delivery_system)": [[101, "core.delivery_system.Postman"]], "__init__() (core.delivery_system.postman method)": [[101, "core.delivery_system.Postman.__init__"]], "register_agent() (core.delivery_system.postman method)": [[101, "core.delivery_system.Postman.register_agent"]], "send_hmi() (core.delivery_system.postman method)": [[101, "core.delivery_system.Postman.send_hmi"]], "core.module_management": [[102, "module-core.module_management"]], "check_incompatibilities() (in module core.module_management)": [[103, "core.module_management.check_incompatibilities"]], "find_actual_module_name() (in module core.module_management)": [[104, "core.module_management.find_actual_module_name"]], "get_all_modules() (in module core.module_management)": [[105, "core.module_management.get_all_modules"]], "get_module_paras() (in module core.module_management)": [[106, "core.module_management.get_module_paras"]], "load_mercury_module() (in module core.module_management)": [[107, "core.module_management.load_mercury_module"]], "core.parametriser": [[108, "module-core.parametriser"]], "parametriser (class in core.parametriser)": [[109, "core.parametriser.Parametriser"]], "__init__() (core.parametriser.parametriser method)": [[109, "core.parametriser.Parametriser.__init__"]], "parametrisercapacity (class in core.parametriser)": [[110, "core.parametriser.ParametriserCapacity"]], "__init__() (core.parametriser.parametrisercapacity method)": [[110, "core.parametriser.ParametriserCapacity.__init__"]], "parametriserselector (class in core.parametriser)": [[111, "core.parametriser.ParametriserSelector"]], "__init__() (core.parametriser.parametriserselector method)": [[111, "core.parametriser.ParametriserSelector.__init__"]], "parametriserstandard (class in core.parametriser)": [[112, "core.parametriser.ParametriserStandard"]], "__init__() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.__init__"]], "apply_alpha_compensation_magnitude() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_alpha_compensation_magnitude"]], "apply_alpha_doc_magnitude() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_alpha_doc_magnitude"]], "apply_alpha_mct() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_alpha_mct"]], "apply_alpha_non_atfm() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_alpha_non_ATFM"]], "apply_alpha_tat_mean() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_alpha_tat_mean"]], "apply_anchor() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_anchor"]], "apply_dci_max_threshold() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_dci_max_threshold"]], "apply_dci_min_threshold() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_dci_min_threshold"]], "apply_delta_mct() (core.parametriser.parametriserstandard method)": [[112, "core.parametriser.ParametriserStandard.apply_delta_mct"]], "core.read_config": [[113, "module-core.read_config"]], "add_output_process() (in module core.read_config)": [[114, "core.read_config.add_output_process"]], "find_paras_categories() (in module core.read_config)": [[115, "core.read_config.find_paras_categories"]], "flatten_paras_dict() (in module core.read_config)": [[116, "core.read_config.flatten_paras_dict"]], "read_mercury_config() (in module core.read_config)": [[117, "core.read_config.read_mercury_config"]], "read_scenario_config() (in module core.read_config)": [[118, "core.read_config.read_scenario_config"]], "read_toml() (in module core.read_config)": [[119, "core.read_config.read_toml"]], "transform_conf_paras() (in module core.read_config)": [[120, "core.read_config.transform_conf_paras"]], "unflatten_profiles() (in module core.read_config)": [[121, "core.read_config.unflatten_profiles"]], "unfold_paras_dict() (in module core.read_config)": [[122, "core.read_config.unfold_paras_dict"]], "update_scenario_paras_based_on_case_study() (in module core.read_config)": [[123, "core.read_config.update_scenario_paras_based_on_case_study"]], "core.results_aggregator": [[124, "module-core.results_aggregator"]], "resultaggregatoradvanced (class in core.results_aggregator)": [[125, "core.results_aggregator.ResultAggregatorAdvanced"]], "__init__() (core.results_aggregator.resultaggregatoradvanced method)": [[125, "core.results_aggregator.ResultAggregatorAdvanced.__init__"]], "resultsaggregator (class in core.results_aggregator)": [[126, "core.results_aggregator.ResultsAggregator"]], "__init__() (core.results_aggregator.resultsaggregator method)": [[126, "core.results_aggregator.ResultsAggregator.__init__"]], "resultsaggregatorselector (class in core.results_aggregator)": [[127, "core.results_aggregator.ResultsAggregatorSelector"]], "__init__() (core.results_aggregator.resultsaggregatorselector method)": [[127, "core.results_aggregator.ResultsAggregatorSelector.__init__"]], "resultsaggregatorsimple (class in core.results_aggregator)": [[128, "core.results_aggregator.ResultsAggregatorSimple"]], "__init__() (core.results_aggregator.resultsaggregatorsimple method)": [[128, "core.results_aggregator.ResultsAggregatorSimple.__init__"]], "resultsaggregatorsimplereduced (class in core.results_aggregator)": [[129, "core.results_aggregator.ResultsAggregatorSimpleReduced"]], "__init__() (core.results_aggregator.resultsaggregatorsimplereduced method)": [[129, "core.results_aggregator.ResultsAggregatorSimpleReduced.__init__"]], "core.scenario_loader": [[130, "module-core.scenario_loader"]], "scenarioloader (class in core.scenario_loader)": [[131, "core.scenario_loader.ScenarioLoader"]], "__init__() (core.scenario_loader.scenarioloader method)": [[131, "core.scenario_loader.ScenarioLoader.__init__"]], "scenarioloaderselector (class in core.scenario_loader)": [[132, "core.scenario_loader.ScenarioLoaderSelector"]], "__init__() (core.scenario_loader.scenarioloaderselector method)": [[132, "core.scenario_loader.ScenarioLoaderSelector.__init__"]], "scenarioloadersimple (class in core.scenario_loader)": [[133, "core.scenario_loader.ScenarioLoaderSimple"]], "__init__() (core.scenario_loader.scenarioloadersimple method)": [[133, "core.scenario_loader.ScenarioLoaderSimple.__init__"]], "reload() (core.scenario_loader.scenarioloadersimple method)": [[133, "core.scenario_loader.ScenarioLoaderSimple.reload"]], "scenarioloaderstandard (class in core.scenario_loader)": [[134, "core.scenario_loader.ScenarioLoaderStandard"]], "__init__() (core.scenario_loader.scenarioloaderstandard method)": [[134, "core.scenario_loader.ScenarioLoaderStandard.__init__"]], "create_flight_plans() (core.scenario_loader.scenarioloaderstandard method)": [[134, "core.scenario_loader.ScenarioLoaderStandard.create_flight_plans"]], "reload() (core.scenario_loader.scenarioloaderstandard method)": [[134, "core.scenario_loader.ScenarioLoaderStandard.reload"]], "scenarioloaderstandardlocal (class in core.scenario_loader)": [[135, "core.scenario_loader.ScenarioLoaderStandardLocal"]], "__init__() (core.scenario_loader.scenarioloaderstandardlocal method)": [[135, "core.scenario_loader.ScenarioLoaderStandardLocal.__init__"]], "create_flight_plans() (core.scenario_loader.scenarioloaderstandardlocal method)": [[135, "core.scenario_loader.ScenarioLoaderStandardLocal.create_flight_plans"]], "reload() (core.scenario_loader.scenarioloaderstandardlocal method)": [[135, "core.scenario_loader.ScenarioLoaderStandardLocal.reload"]], "core.simulation_manager": [[136, "module-core.simulation_manager"]], "mercury (class in core.simulation_manager)": [[137, "core.simulation_manager.Mercury"]], "__init__() (core.simulation_manager.mercury method)": [[137, "core.simulation_manager.Mercury.__init__"]], "build_agents() (core.simulation_manager.mercury method)": [[137, "core.simulation_manager.Mercury.build_agents"]], "compute_path() (core.simulation_manager.mercury method)": [[137, "core.simulation_manager.Mercury.compute_path"]], "run() (core.simulation_manager.mercury method)": [[137, "core.simulation_manager.Mercury.run"]], "build_command() (in module core.simulation_manager)": [[138, "core.simulation_manager.build_command"]], "create_paras_file_from_dict() (in module core.simulation_manager)": [[139, "core.simulation_manager.create_paras_file_from_dict"]], "core.world_builder": [[140, "module-core.world_builder"]], "world (class in core.world_builder)": [[141, "core.world_builder.World"]], "__init__() (core.world_builder.world method)": [[141, "core.world_builder.World.__init__"]], "create_amans() (core.world_builder.world method)": [[141, "core.world_builder.World.create_AMANs"]], "load_scenario() (core.world_builder.world method)": [[141, "core.world_builder.World.load_scenario"]], "trace() (in module core.world_builder)": [[142, "core.world_builder.trace"]], "dashboard": [[143, "module-dashboard"]], "dashboard.mercury_gui": [[144, "module-dashboard.mercury_gui"]], "libs": [[145, "module-libs"]], "libs.airspace_particularities": [[146, "module-libs.airspace_particularities"]], "get_nas_airport() (in module libs.airspace_particularities)": [[147, "libs.airspace_particularities.get_nas_airport"]], "is_atfm_area() (in module libs.airspace_particularities)": [[148, "libs.airspace_particularities.is_ATFM_AREA"]], "is_ecac() (in module libs.airspace_particularities)": [[149, "libs.airspace_particularities.is_ECAC"]], "libs.db_access_functions": [[150, "module-libs.db_access_functions"]], "dataaccessbada4 (class in libs.db_access_functions)": [[151, "libs.db_access_functions.DataAccessBADA4"]], "__init__() (libs.db_access_functions.dataaccessbada4 method)": [[151, "libs.db_access_functions.DataAccessBADA4.__init__"]], "read_dict_wtc_engine_model() (libs.db_access_functions.dataaccessbada4 method)": [[151, "libs.db_access_functions.DataAccessBADA4.read_dict_wtc_engine_model"]], "dataaccessperformance (class in libs.db_access_functions)": [[152, "libs.db_access_functions.DataAccessPerformance"]], "__init__() (libs.db_access_functions.dataaccessperformance method)": [[152, "libs.db_access_functions.DataAccessPerformance.__init__"]], "read_dict_wtc_engine_model() (libs.db_access_functions.dataaccessperformance method)": [[152, "libs.db_access_functions.DataAccessPerformance.read_dict_wtc_engine_model"]], "add_crco_to_flights_in_db() (in module libs.db_access_functions)": [[153, "libs.db_access_functions.add_crco_to_flights_in_db"]], "get_information_routes_o_d_generated() (in module libs.db_access_functions)": [[154, "libs.db_access_functions.get_information_routes_o_d_generated"]], "read_atfm_at_airports() (in module libs.db_access_functions)": [[155, "libs.db_access_functions.read_ATFM_at_airports"]], "read_atfm_at_airports_days() (in module libs.db_access_functions)": [[156, "libs.db_access_functions.read_ATFM_at_airports_days"]], "read_atfm_at_airports_manual() (in module libs.db_access_functions)": [[157, "libs.db_access_functions.read_ATFM_at_airports_manual"]], "read_atfm_at_airports_old() (in module libs.db_access_functions)": [[158, "libs.db_access_functions.read_ATFM_at_airports_old"]], "read_mct() (in module libs.db_access_functions)": [[159, "libs.db_access_functions.read_MCT"]], "read_airlines_data() (in module libs.db_access_functions)": [[160, "libs.db_access_functions.read_airlines_data"]], "read_airport_coords() (in module libs.db_access_functions)": [[161, "libs.db_access_functions.read_airport_coords"]], "read_airports_curfew_data() (in module libs.db_access_functions)": [[162, "libs.db_access_functions.read_airports_curfew_data"]], "read_airports_data() (in module libs.db_access_functions)": [[163, "libs.db_access_functions.read_airports_data"]], "read_airports_modif_data() (in module libs.db_access_functions)": [[164, "libs.db_access_functions.read_airports_modif_data"]], "read_airspace_static() (in module libs.db_access_functions)": [[165, "libs.db_access_functions.read_airspace_static"]], "read_all_regulation_days() (in module libs.db_access_functions)": [[166, "libs.db_access_functions.read_all_regulation_days"]], "read_compensation_data() (in module libs.db_access_functions)": [[167, "libs.db_access_functions.read_compensation_data"]], "read_coord_trajectory_route() (in module libs.db_access_functions)": [[168, "libs.db_access_functions.read_coord_trajectory_route"]], "read_coord_trajectory_route_based_on_id() (in module libs.db_access_functions)": [[169, "libs.db_access_functions.read_coord_trajectory_route_based_on_id"]], "read_countries_atfm_nas() (in module libs.db_access_functions)": [[170, "libs.db_access_functions.read_countries_ATFM_NAS"]], "read_crco() (in module libs.db_access_functions)": [[171, "libs.db_access_functions.read_crco"]], "read_crco_charges() (in module libs.db_access_functions)": [[172, "libs.db_access_functions.read_crco_charges"]], "read_dict_ac_bada_code_ac_model() (in module libs.db_access_functions)": [[173, "libs.db_access_functions.read_dict_ac_bada_code_ac_model"]], "read_dict_ac_type_wtc() (in module libs.db_access_functions)": [[174, "libs.db_access_functions.read_dict_ac_type_wtc"]], "read_dict_fp_pool_ids() (in module libs.db_access_functions)": [[175, "libs.db_access_functions.read_dict_fp_pool_ids"]], "read_doc_data() (in module libs.db_access_functions)": [[176, "libs.db_access_functions.read_doc_data"]], "read_eamans_data() (in module libs.db_access_functions)": [[177, "libs.db_access_functions.read_eamans_data"]], "read_estimated_avg_costs_curfews() (in module libs.db_access_functions)": [[178, "libs.db_access_functions.read_estimated_avg_costs_curfews"]], "read_extra_cruise_if_dci() (in module libs.db_access_functions)": [[179, "libs.db_access_functions.read_extra_cruise_if_dci"]], "read_flight_plan_ansps_weights_for_crco() (in module libs.db_access_functions)": [[180, "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco"]], "read_flight_schedules() (in module libs.db_access_functions)": [[181, "libs.db_access_functions.read_flight_schedules"]], "read_flight_schedules2() (in module libs.db_access_functions)": [[182, "libs.db_access_functions.read_flight_schedules2"]], "read_flight_set() (in module libs.db_access_functions)": [[183, "libs.db_access_functions.read_flight_set"]], "read_flight_uncertainty() (in module libs.db_access_functions)": [[184, "libs.db_access_functions.read_flight_uncertainty"]], "read_fp_pool() (in module libs.db_access_functions)": [[185, "libs.db_access_functions.read_fp_pool"]], "read_fp_pool_missing() (in module libs.db_access_functions)": [[186, "libs.db_access_functions.read_fp_pool_missing"]], "read_fp_routes_without_crco() (in module libs.db_access_functions)": [[187, "libs.db_access_functions.read_fp_routes_without_crco"]], "read_iedf_atfm() (in module libs.db_access_functions)": [[188, "libs.db_access_functions.read_iedf_atfm"]], "read_iedf_wind_dict() (in module libs.db_access_functions)": [[189, "libs.db_access_functions.read_iedf_wind_dict"]], "read_itineraries_data() (in module libs.db_access_functions)": [[190, "libs.db_access_functions.read_itineraries_data"]], "read_nas_route_pool() (in module libs.db_access_functions)": [[191, "libs.db_access_functions.read_nas_route_pool"]], "read_nas_route_pool_static_o_d() (in module libs.db_access_functions)": [[192, "libs.db_access_functions.read_nas_route_pool_static_o_d"]], "read_non_pax_cost_data() (in module libs.db_access_functions)": [[193, "libs.db_access_functions.read_non_pax_cost_data"]], "read_non_pax_cost_fit_data() (in module libs.db_access_functions)": [[194, "libs.db_access_functions.read_non_pax_cost_fit_data"]], "read_nonpax_cost_curfews() (in module libs.db_access_functions)": [[195, "libs.db_access_functions.read_nonpax_cost_curfews"]], "read_od_in_historic_od_computed_pool() (in module libs.db_access_functions)": [[196, "libs.db_access_functions.read_od_in_historic_od_computed_pool"]], "read_orig_destination_via_intermediate_shortest() (in module libs.db_access_functions)": [[197, "libs.db_access_functions.read_orig_destination_via_intermediate_shortest"]], "read_passenger_flows() (in module libs.db_access_functions)": [[198, "libs.db_access_functions.read_passenger_flows"]], "read_passenger_options() (in module libs.db_access_functions)": [[199, "libs.db_access_functions.read_passenger_options"]], "read_perc_min_perc_max_regulations_days() (in module libs.db_access_functions)": [[200, "libs.db_access_functions.read_perc_min_perc_max_regulations_days"]], "read_prob_atfm() (in module libs.db_access_functions)": [[201, "libs.db_access_functions.read_prob_atfm"]], "read_regulation_days_at_an_airport() (in module libs.db_access_functions)": [[202, "libs.db_access_functions.read_regulation_days_at_an_airport"]], "read_route_pool() (in module libs.db_access_functions)": [[203, "libs.db_access_functions.read_route_pool"]], "read_route_pool_o_d_generated() (in module libs.db_access_functions)": [[204, "libs.db_access_functions.read_route_pool_o_d_generated"]], "read_route_pool_static() (in module libs.db_access_functions)": [[205, "libs.db_access_functions.read_route_pool_static"]], "read_scenario() (in module libs.db_access_functions)": [[206, "libs.db_access_functions.read_scenario"]], "read_scenario_paras() (in module libs.db_access_functions)": [[207, "libs.db_access_functions.read_scenario_paras"]], "read_schedules() (in module libs.db_access_functions)": [[208, "libs.db_access_functions.read_schedules"]], "read_seed() (in module libs.db_access_functions)": [[209, "libs.db_access_functions.read_seed"]], "read_soft_cost_date() (in module libs.db_access_functions)": [[210, "libs.db_access_functions.read_soft_cost_date"]], "read_trajectories() (in module libs.db_access_functions)": [[211, "libs.db_access_functions.read_trajectories"]], "read_trajectories_dataframe() (in module libs.db_access_functions)": [[212, "libs.db_access_functions.read_trajectories_dataframe"]], "read_trajectories_ids() (in module libs.db_access_functions)": [[213, "libs.db_access_functions.read_trajectories_ids"]], "read_trajectories_missing() (in module libs.db_access_functions)": [[214, "libs.db_access_functions.read_trajectories_missing"]], "read_trajectories_missing_in_interval() (in module libs.db_access_functions)": [[215, "libs.db_access_functions.read_trajectories_missing_in_interval"]], "read_trajectories_options() (in module libs.db_access_functions)": [[216, "libs.db_access_functions.read_trajectories_options"]], "read_trajectories_pool() (in module libs.db_access_functions)": [[217, "libs.db_access_functions.read_trajectories_pool"]], "read_turnaround_data() (in module libs.db_access_functions)": [[218, "libs.db_access_functions.read_turnaround_data"]], "save_trajectories_pool() (in module libs.db_access_functions)": [[219, "libs.db_access_functions.save_trajectories_pool"]], "save_trajectories_segments() (in module libs.db_access_functions)": [[220, "libs.db_access_functions.save_trajectories_segments"]], "libs.input_manager": [[221, "module-libs.input_manager"]], "input_manager (class in libs.input_manager)": [[222, "libs.input_manager.Input_manager"]], "__init__() (libs.input_manager.input_manager method)": [[222, "libs.input_manager.Input_manager.__init__"]], "filter_df() (in module libs.input_manager)": [[223, "libs.input_manager.filter_df"]], "filter_sql() (in module libs.input_manager)": [[224, "libs.input_manager.filter_sql"]], "read_data_from_dict() (in module libs.input_manager)": [[225, "libs.input_manager.read_data_from_dict"]], "write_toml() (in module libs.input_manager)": [[226, "libs.input_manager.write_toml"]], "libs.other_tools": [[227, "module-libs.other_tools"]], "flightdummy (class in libs.other_tools)": [[228, "libs.other_tools.FlightDummy"]], "__init__() (libs.other_tools.flightdummy method)": [[228, "libs.other_tools.FlightDummy.__init__"]], "slotdummy (class in libs.other_tools)": [[229, "libs.other_tools.SlotDummy"]], "__init__() (libs.other_tools.slotdummy method)": [[229, "libs.other_tools.SlotDummy.__init__"]], "allocation_from_flights() (in module libs.other_tools)": [[230, "libs.other_tools.allocation_from_flights"]], "clone_pax() (in module libs.other_tools)": [[231, "libs.other_tools.clone_pax"]], "compatible_slots() (in module libs.other_tools)": [[232, "libs.other_tools.compatible_slots"]], "compute_fpfs_allocation() (in module libs.other_tools)": [[233, "libs.other_tools.compute_FPFS_allocation"]], "distance_func() (in module libs.other_tools)": [[234, "libs.other_tools.distance_func"]], "flight_str() (in module libs.other_tools)": [[235, "libs.other_tools.flight_str"]], "libs.performance_trajectory": [[236, "module-libs.performance_trajectory"]], "libs.performance_trajectory.ac_performances": [[237, "module-libs.performance_trajectory.ac_performances"]], "aircraftperformance (class in libs.performance_trajectory.ac_performances)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.avg_climb_descent_ff"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformance static method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformance static method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.estimate_descent_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[238, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3 (class in libs.performance_trajectory.ac_performances)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 static method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 static method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[239, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3jet (class in libs.performance_trajectory.ac_performances)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet static method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet static method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[240, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3tp (class in libs.performance_trajectory.ac_performances)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp static method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp static method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[241, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.standard_atmosphere": [[242, "module-libs.performance_trajectory.standard_atmosphere"]], "density() (in module libs.performance_trajectory.standard_atmosphere)": [[243, "libs.performance_trajectory.standard_atmosphere.density"]], "pressure() (in module libs.performance_trajectory.standard_atmosphere)": [[244, "libs.performance_trajectory.standard_atmosphere.pressure"]], "sound_speed() (in module libs.performance_trajectory.standard_atmosphere)": [[245, "libs.performance_trajectory.standard_atmosphere.sound_speed"]], "temperature() (in module libs.performance_trajectory.standard_atmosphere)": [[246, "libs.performance_trajectory.standard_atmosphere.temperature"]], "libs.performance_trajectory.trajectory": [[247, "module-libs.performance_trajectory.trajectory"]], "trajectory (class in libs.performance_trajectory.trajectory)": [[248, "libs.performance_trajectory.trajectory.Trajectory"]], "__init__() (libs.performance_trajectory.trajectory.trajectory method)": [[248, "libs.performance_trajectory.trajectory.Trajectory.__init__"]], "trajectorycomponent (class in libs.performance_trajectory.trajectory)": [[249, "libs.performance_trajectory.trajectory.TrajectoryComponent"]], "__init__() (libs.performance_trajectory.trajectory.trajectorycomponent method)": [[249, "libs.performance_trajectory.trajectory.TrajectoryComponent.__init__"]], "trajectorysegment (class in libs.performance_trajectory.trajectory)": [[250, "libs.performance_trajectory.trajectory.TrajectorySegment"]], "__init__() (libs.performance_trajectory.trajectory.trajectorysegment method)": [[250, "libs.performance_trajectory.trajectory.TrajectorySegment.__init__"]], "libs.performance_trajectory.unit_conversions": [[251, "module-libs.performance_trajectory.unit_conversions"]], "cas2tas() (in module libs.performance_trajectory.unit_conversions)": [[252, "libs.performance_trajectory.unit_conversions.cas2tas"]], "km2kt() (in module libs.performance_trajectory.unit_conversions)": [[253, "libs.performance_trajectory.unit_conversions.km2kt"]], "km2m() (in module libs.performance_trajectory.unit_conversions)": [[254, "libs.performance_trajectory.unit_conversions.km2m"]], "kt2m() (in module libs.performance_trajectory.unit_conversions)": [[255, "libs.performance_trajectory.unit_conversions.kt2m"]], "m2kt() (in module libs.performance_trajectory.unit_conversions)": [[256, "libs.performance_trajectory.unit_conversions.m2kt"]], "libs.result_manager": [[257, "module-libs.result_manager"]], "result_manager (class in libs.result_manager)": [[258, "libs.result_manager.Result_manager"]], "__init__() (libs.result_manager.result_manager method)": [[258, "libs.result_manager.Result_manager.__init__"]], "libs.result_tools": [[259, "module-libs.result_tools"]], "binarise() (in module libs.result_tools)": [[260, "libs.result_tools.binarise"]], "build_aligned_pax_flight_df() (in module libs.result_tools)": [[261, "libs.result_tools.build_aligned_pax_flight_df"]], "build_single_iteration_df() (in module libs.result_tools)": [[262, "libs.result_tools.build_single_iteration_df"]], "clone_pax() (in module libs.result_tools)": [[263, "libs.result_tools.clone_pax"]], "compute_derived_metrics_hist_sim() (in module libs.result_tools)": [[264, "libs.result_tools.compute_derived_metrics_hist_sim"]], "compute_derived_metrics_historical() (in module libs.result_tools)": [[265, "libs.result_tools.compute_derived_metrics_historical"]], "compute_derived_metrics_pax_generic() (in module libs.result_tools)": [[266, "libs.result_tools.compute_derived_metrics_pax_generic"]], "compute_derived_metrics_simulations() (in module libs.result_tools)": [[267, "libs.result_tools.compute_derived_metrics_simulations"]], "compute_metrics_flights() (in module libs.result_tools)": [[268, "libs.result_tools.compute_metrics_flights"]], "compute_metrics_pax() (in module libs.result_tools)": [[269, "libs.result_tools.compute_metrics_pax"]], "find_destination_generic() (in module libs.result_tools)": [[270, "libs.result_tools.find_destination_generic"]], "find_origin_generic() (in module libs.result_tools)": [[271, "libs.result_tools.find_origin_generic"]], "get_historical_flights() (in module libs.result_tools)": [[272, "libs.result_tools.get_historical_flights"]], "get_pax_schedules() (in module libs.result_tools)": [[273, "libs.result_tools.get_pax_schedules"]], "merge_hist_sim() (in module libs.result_tools)": [[274, "libs.result_tools.merge_hist_sim"]], "merge_pax_flights() (in module libs.result_tools)": [[275, "libs.result_tools.merge_pax_flights"]], "produce_hist_sim_df() (in module libs.result_tools)": [[276, "libs.result_tools.produce_hist_sim_df"]], "produce_historical_flight_pax_df() (in module libs.result_tools)": [[277, "libs.result_tools.produce_historical_flight_pax_df"]], "libs.uow_tool_belt": [[278, "module-libs.uow_tool_belt"]], "libs.uow_tool_belt.dtw": [[279, "module-libs.uow_tool_belt.DTW"]], "dtw() (in module libs.uow_tool_belt.dtw)": [[280, "libs.uow_tool_belt.DTW.dtw"]], "dtw_path() (in module libs.uow_tool_belt.dtw)": [[281, "libs.uow_tool_belt.DTW.dtw_path"]], "libs.uow_tool_belt.airspace_particularities": [[282, "module-libs.uow_tool_belt.airspace_particularities"]], "get_nas_airport() (in module libs.uow_tool_belt.airspace_particularities)": [[283, "libs.uow_tool_belt.airspace_particularities.get_nas_airport"]], "is_atfm_area() (in module libs.uow_tool_belt.airspace_particularities)": [[284, "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA"]], "is_ecac() (in module libs.uow_tool_belt.airspace_particularities)": [[285, "libs.uow_tool_belt.airspace_particularities.is_ECAC"]], "libs.uow_tool_belt.connection_tools": [[286, "module-libs.uow_tool_belt.connection_tools"]], "emptyconnection (class in libs.uow_tool_belt.connection_tools)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection"]], "__init__() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.__init__"]], "clear() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.clear"]], "copy() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.copy"]], "fromkeys() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.fromkeys"]], "get() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.get"]], "items() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.items"]], "keys() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.keys"]], "pop() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.pop"]], "popitem() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.popitem"]], "setdefault() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.setdefault"]], "update() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.update"]], "values() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[287, "libs.uow_tool_belt.connection_tools.EmptyConnection.values"]], "create_indexes_in_table() (in module libs.uow_tool_belt.connection_tools)": [[288, "libs.uow_tool_belt.connection_tools.create_indexes_in_table"]], "do_query() (in module libs.uow_tool_belt.connection_tools)": [[289, "libs.uow_tool_belt.connection_tools.do_query"]], "extract_ssh_parameters() (in module libs.uow_tool_belt.connection_tools)": [[290, "libs.uow_tool_belt.connection_tools.extract_ssh_parameters"]], "file_connection() (in module libs.uow_tool_belt.connection_tools)": [[291, "libs.uow_tool_belt.connection_tools.file_connection"]], "generic_connection() (in module libs.uow_tool_belt.connection_tools)": [[292, "libs.uow_tool_belt.connection_tools.generic_connection"]], "load_data_infile() (in module libs.uow_tool_belt.connection_tools)": [[293, "libs.uow_tool_belt.connection_tools.load_data_infile"]], "mysql_connection() (in module libs.uow_tool_belt.connection_tools)": [[294, "libs.uow_tool_belt.connection_tools.mysql_connection"]], "parquet_connection() (in module libs.uow_tool_belt.connection_tools)": [[295, "libs.uow_tool_belt.connection_tools.parquet_connection"]], "read_cred() (in module libs.uow_tool_belt.connection_tools)": [[296, "libs.uow_tool_belt.connection_tools.read_cred"]], "read_csv() (in module libs.uow_tool_belt.connection_tools)": [[297, "libs.uow_tool_belt.connection_tools.read_csv"]], "read_data() (in module libs.uow_tool_belt.connection_tools)": [[298, "libs.uow_tool_belt.connection_tools.read_data"]], "read_mysql() (in module libs.uow_tool_belt.connection_tools)": [[299, "libs.uow_tool_belt.connection_tools.read_mysql"]], "read_parquet() (in module libs.uow_tool_belt.connection_tools)": [[300, "libs.uow_tool_belt.connection_tools.read_parquet"]], "read_pickle() (in module libs.uow_tool_belt.connection_tools)": [[301, "libs.uow_tool_belt.connection_tools.read_pickle"]], "run_mysql_query() (in module libs.uow_tool_belt.connection_tools)": [[302, "libs.uow_tool_belt.connection_tools.run_mysql_query"]], "write_csv() (in module libs.uow_tool_belt.connection_tools)": [[303, "libs.uow_tool_belt.connection_tools.write_csv"]], "write_data() (in module libs.uow_tool_belt.connection_tools)": [[304, "libs.uow_tool_belt.connection_tools.write_data"]], "write_mysql() (in module libs.uow_tool_belt.connection_tools)": [[305, "libs.uow_tool_belt.connection_tools.write_mysql"]], "write_pickle() (in module libs.uow_tool_belt.connection_tools)": [[306, "libs.uow_tool_belt.connection_tools.write_pickle"]], "libs.uow_tool_belt.general_tools": [[307, "module-libs.uow_tool_belt.general_tools"]], "a_b() (in module libs.uow_tool_belt.general_tools)": [[308, "libs.uow_tool_belt.general_tools.A_B"]], "dummyfile (class in libs.uow_tool_belt.general_tools)": [[309, "libs.uow_tool_belt.general_tools.DummyFile"]], "__init__() (libs.uow_tool_belt.general_tools.dummyfile method)": [[309, "libs.uow_tool_belt.general_tools.DummyFile.__init__"]], "hiddenprints (class in libs.uow_tool_belt.general_tools)": [[310, "libs.uow_tool_belt.general_tools.HiddenPrints"]], "__init__() (libs.uow_tool_belt.general_tools.hiddenprints method)": [[310, "libs.uow_tool_belt.general_tools.HiddenPrints.__init__"]], "paras (class in libs.uow_tool_belt.general_tools)": [[311, "libs.uow_tool_belt.general_tools.Paras"]], "__init__() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.__init__"]], "analyse_dependance() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.analyse_dependance"]], "clear() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.clear"]], "copy() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.copy"]], "fromkeys() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.fromkeys"]], "get() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.get"]], "items() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.items"]], "keys() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.keys"]], "pop() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.pop"]], "popitem() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.popitem"]], "setdefault() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.setdefault"]], "update() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.update"]], "update_with_levels() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.update_with_levels"]], "values() (libs.uow_tool_belt.general_tools.paras method)": [[311, "libs.uow_tool_belt.general_tools.Paras.values"]], "twowaydict (class in libs.uow_tool_belt.general_tools)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict"]], "__init__() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.__init__"]], "clear() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.clear"]], "copy() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.copy"]], "fromkeys() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.fromkeys"]], "get() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.get"]], "items() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.items"]], "keys() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.keys"]], "pop() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.pop"]], "popitem() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.popitem"]], "setdefault() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.setdefault"]], "update() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.update"]], "values() (libs.uow_tool_belt.general_tools.twowaydict method)": [[312, "libs.uow_tool_belt.general_tools.TwoWayDict.values"]], "add_dicts() (in module libs.uow_tool_belt.general_tools)": [[313, "libs.uow_tool_belt.general_tools.add_dicts"]], "alert_print() (in module libs.uow_tool_belt.general_tools)": [[314, "libs.uow_tool_belt.general_tools.alert_print"]], "alphabet() (in module libs.uow_tool_belt.general_tools)": [[315, "libs.uow_tool_belt.general_tools.alphabet"]], "apply_args_and_kwargs() (in module libs.uow_tool_belt.general_tools)": [[316, "libs.uow_tool_belt.general_tools.apply_args_and_kwargs"]], "average_on_downsampled_interval() (in module libs.uow_tool_belt.general_tools)": [[317, "libs.uow_tool_belt.general_tools.average_on_downsampled_interval"]], "average_on_intervals() (in module libs.uow_tool_belt.general_tools)": [[318, "libs.uow_tool_belt.general_tools.average_on_intervals"]], "average_on_quantiles() (in module libs.uow_tool_belt.general_tools)": [[319, "libs.uow_tool_belt.general_tools.average_on_quantiles"]], "bootstrap_mean_test() (in module libs.uow_tool_belt.general_tools)": [[320, "libs.uow_tool_belt.general_tools.bootstrap_mean_test"]], "bootstrap_test() (in module libs.uow_tool_belt.general_tools)": [[321, "libs.uow_tool_belt.general_tools.bootstrap_test"]], "build_col_print_func() (in module libs.uow_tool_belt.general_tools)": [[322, "libs.uow_tool_belt.general_tools.build_col_print_func"]], "build_step_bivariate_function() (in module libs.uow_tool_belt.general_tools)": [[323, "libs.uow_tool_belt.general_tools.build_step_bivariate_function"]], "build_step_multi_valued_function() (in module libs.uow_tool_belt.general_tools)": [[324, "libs.uow_tool_belt.general_tools.build_step_multi_valued_function"]], "build_triangular() (in module libs.uow_tool_belt.general_tools)": [[325, "libs.uow_tool_belt.general_tools.build_triangular"]], "center_spatial_network() (in module libs.uow_tool_belt.general_tools)": [[326, "libs.uow_tool_belt.general_tools.center_spatial_network"]], "clock_time() (in module libs.uow_tool_belt.general_tools)": [[327, "libs.uow_tool_belt.general_tools.clock_time"]], "compute_percentile_with_weight() (in module libs.uow_tool_belt.general_tools)": [[328, "libs.uow_tool_belt.general_tools.compute_percentile_with_weight"]], "counter() (in module libs.uow_tool_belt.general_tools)": [[329, "libs.uow_tool_belt.general_tools.counter"]], "create_dir() (in module libs.uow_tool_belt.general_tools)": [[330, "libs.uow_tool_belt.general_tools.create_dir"]], "dict_depth() (in module libs.uow_tool_belt.general_tools)": [[331, "libs.uow_tool_belt.general_tools.dict_depth"]], "distance_euclidean() (in module libs.uow_tool_belt.general_tools)": [[332, "libs.uow_tool_belt.general_tools.distance_euclidean"]], "fit() (in module libs.uow_tool_belt.general_tools)": [[333, "libs.uow_tool_belt.general_tools.fit"]], "get_first_matching_element() (in module libs.uow_tool_belt.general_tools)": [[334, "libs.uow_tool_belt.general_tools.get_first_matching_element"]], "gini() (in module libs.uow_tool_belt.general_tools)": [[335, "libs.uow_tool_belt.general_tools.gini"]], "groupby_on_downsampled_interval() (in module libs.uow_tool_belt.general_tools)": [[336, "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval"]], "groupby_on_intervals() (in module libs.uow_tool_belt.general_tools)": [[337, "libs.uow_tool_belt.general_tools.groupby_on_intervals"]], "groupby_on_quantiles() (in module libs.uow_tool_belt.general_tools)": [[338, "libs.uow_tool_belt.general_tools.groupby_on_quantiles"]], "haversine() (in module libs.uow_tool_belt.general_tools)": [[339, "libs.uow_tool_belt.general_tools.haversine"]], "haversine_old() (in module libs.uow_tool_belt.general_tools)": [[340, "libs.uow_tool_belt.general_tools.haversine_old"]], "hex_to_rgb() (in module libs.uow_tool_belt.general_tools)": [[341, "libs.uow_tool_belt.general_tools.hex_to_rgb"]], "human_format() (in module libs.uow_tool_belt.general_tools)": [[342, "libs.uow_tool_belt.general_tools.human_format"]], "human_format_for_ticks() (in module libs.uow_tool_belt.general_tools)": [[343, "libs.uow_tool_belt.general_tools.human_format_for_ticks"]], "intermediate_point() (in module libs.uow_tool_belt.general_tools)": [[344, "libs.uow_tool_belt.general_tools.intermediate_point"]], "inv_mu_sig_lognorm() (in module libs.uow_tool_belt.general_tools)": [[345, "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm"]], "inv_s_loc_scale_lognorm() (in module libs.uow_tool_belt.general_tools)": [[346, "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm"]], "inv_s_scale_lognorm() (in module libs.uow_tool_belt.general_tools)": [[347, "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm"]], "inverted_edf() (in module libs.uow_tool_belt.general_tools)": [[348, "libs.uow_tool_belt.general_tools.inverted_edf"]], "keep_time() (in module libs.uow_tool_belt.general_tools)": [[349, "libs.uow_tool_belt.general_tools.keep_time"]], "loading() (in module libs.uow_tool_belt.general_tools)": [[350, "libs.uow_tool_belt.general_tools.loading"]], "logging() (in module libs.uow_tool_belt.general_tools)": [[351, "libs.uow_tool_belt.general_tools.logging"]], "loop() (in module libs.uow_tool_belt.general_tools)": [[352, "libs.uow_tool_belt.general_tools.loop"]], "make_df_with_3_levels() (in module libs.uow_tool_belt.general_tools)": [[353, "libs.uow_tool_belt.general_tools.make_df_with_3_levels"]], "make_df_with_3_levels_quick() (in module libs.uow_tool_belt.general_tools)": [[354, "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick"]], "make_nested_dict_from_df() (in module libs.uow_tool_belt.general_tools)": [[355, "libs.uow_tool_belt.general_tools.make_nested_dict_from_df"]], "mysql_server() (in module libs.uow_tool_belt.general_tools)": [[356, "libs.uow_tool_belt.general_tools.mysql_server"]], "parallelize() (in module libs.uow_tool_belt.general_tools)": [[357, "libs.uow_tool_belt.general_tools.parallelize"]], "partial_corr() (in module libs.uow_tool_belt.general_tools)": [[358, "libs.uow_tool_belt.general_tools.partial_corr"]], "percentile_10() (in module libs.uow_tool_belt.general_tools)": [[359, "libs.uow_tool_belt.general_tools.percentile_10"]], "percentile_90() (in module libs.uow_tool_belt.general_tools)": [[360, "libs.uow_tool_belt.general_tools.percentile_90"]], "percentile_custom() (in module libs.uow_tool_belt.general_tools)": [[361, "libs.uow_tool_belt.general_tools.percentile_custom"]], "permutation_test() (in module libs.uow_tool_belt.general_tools)": [[362, "libs.uow_tool_belt.general_tools.permutation_test"]], "permutation_test_only_diff() (in module libs.uow_tool_belt.general_tools)": [[363, "libs.uow_tool_belt.general_tools.permutation_test_only_diff"]], "proportional() (in module libs.uow_tool_belt.general_tools)": [[364, "libs.uow_tool_belt.general_tools.proportional"]], "r_squared() (in module libs.uow_tool_belt.general_tools)": [[365, "libs.uow_tool_belt.general_tools.r_squared"]], "read_paras() (in module libs.uow_tool_belt.general_tools)": [[366, "libs.uow_tool_belt.general_tools.read_paras"]], "recursive_concat() (in module libs.uow_tool_belt.general_tools)": [[367, "libs.uow_tool_belt.general_tools.recursive_concat"]], "recursive_minimization() (in module libs.uow_tool_belt.general_tools)": [[368, "libs.uow_tool_belt.general_tools.recursive_minimization"]], "remove_nan_coupled_lists() (in module libs.uow_tool_belt.general_tools)": [[369, "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists"]], "scale_and_s_from_mean_sigma_lognorm() (in module libs.uow_tool_belt.general_tools)": [[370, "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm"]], "scale_and_s_from_quantile_sigma_lognorm() (in module libs.uow_tool_belt.general_tools)": [[371, "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm"]], "set_interval() (in module libs.uow_tool_belt.general_tools)": [[372, "libs.uow_tool_belt.general_tools.set_interval"]], "shift_spatial_network() (in module libs.uow_tool_belt.general_tools)": [[373, "libs.uow_tool_belt.general_tools.shift_spatial_network"]], "show_dic() (in module libs.uow_tool_belt.general_tools)": [[374, "libs.uow_tool_belt.general_tools.show_dic"]], "silence() (in module libs.uow_tool_belt.general_tools)": [[375, "libs.uow_tool_belt.general_tools.silence"]], "simple_color_map_function() (in module libs.uow_tool_belt.general_tools)": [[376, "libs.uow_tool_belt.general_tools.simple_color_map_function"]], "simple_colormap_object() (in module libs.uow_tool_belt.general_tools)": [[377, "libs.uow_tool_belt.general_tools.simple_colormap_object"]], "sol_bs() (in module libs.uow_tool_belt.general_tools)": [[378, "libs.uow_tool_belt.general_tools.sol_Bs"]], "sort_lists() (in module libs.uow_tool_belt.general_tools)": [[379, "libs.uow_tool_belt.general_tools.sort_lists"]], "sort_paired_values() (in module libs.uow_tool_belt.general_tools)": [[380, "libs.uow_tool_belt.general_tools.sort_paired_values"]], "spread_integer() (in module libs.uow_tool_belt.general_tools)": [[381, "libs.uow_tool_belt.general_tools.spread_integer"]], "ssh_client_connection() (in module libs.uow_tool_belt.general_tools)": [[382, "libs.uow_tool_belt.general_tools.ssh_client_connection"]], "ssh_copy() (in module libs.uow_tool_belt.general_tools)": [[383, "libs.uow_tool_belt.general_tools.ssh_copy"]], "ssh_tunnel_connection() (in module libs.uow_tool_belt.general_tools)": [[384, "libs.uow_tool_belt.general_tools.ssh_tunnel_connection"]], "starmap_with_kwargs() (in module libs.uow_tool_belt.general_tools)": [[385, "libs.uow_tool_belt.general_tools.starmap_with_kwargs"]], "strip_string() (in module libs.uow_tool_belt.general_tools)": [[386, "libs.uow_tool_belt.general_tools.strip_string"]], "timeit() (in module libs.uow_tool_belt.general_tools)": [[387, "libs.uow_tool_belt.general_tools.timeit"]], "weight_avg() (in module libs.uow_tool_belt.general_tools)": [[388, "libs.uow_tool_belt.general_tools.weight_avg"]], "write_on_file() (in module libs.uow_tool_belt.general_tools)": [[389, "libs.uow_tool_belt.general_tools.write_on_file"]], "yes() (in module libs.uow_tool_belt.general_tools)": [[390, "libs.uow_tool_belt.general_tools.yes"]], "libs.uow_tool_belt.logging": [[391, "module-libs.uow_tool_belt.logging"]], "libs.uow_tool_belt.network_tools": [[392, "module-libs.uow_tool_belt.network_tools"]], "libs.uow_tool_belt.plot_tools": [[393, "module-libs.uow_tool_belt.plot_tools"]], "bar_plot_template() (in module libs.uow_tool_belt.plot_tools)": [[394, "libs.uow_tool_belt.plot_tools.bar_plot_template"]], "savefig() (in module libs.uow_tool_belt.plot_tools)": [[395, "libs.uow_tool_belt.plot_tools.savefig"]], "libs.uow_tool_belt.trajectory_tools": [[396, "module-libs.uow_tool_belt.trajectory_tools"]], "compute_ab() (in module libs.uow_tool_belt.trajectory_tools)": [[397, "libs.uow_tool_belt.trajectory_tools.compute_ab"]], "create_vertical_trajectory() (in module libs.uow_tool_belt.trajectory_tools)": [[398, "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory"]], "detect_toc_tod() (in module libs.uow_tool_belt.trajectory_tools)": [[399, "libs.uow_tool_belt.trajectory_tools.detect_toc_tod"]], "plot_traj() (in module libs.uow_tool_belt.trajectory_tools)": [[400, "libs.uow_tool_belt.trajectory_tools.plot_traj"]], "mercury": [[401, "module-mercury"]], "manual_bool_cast() (in module mercury)": [[402, "mercury.manual_bool_cast"]], "modules": [[403, "module-modules"]], "modules.auction": [[404, "module-modules.Auction"]], "modules.auction.auction": [[405, "module-modules.Auction.Auction"]], "modules.auction.module_definition": [[406, "module-modules.Auction.module_definition"]], "modules.auction.paras_auction": [[407, "module-modules.Auction.paras_Auction"]], "modules.cm": [[408, "module-modules.CM"]], "modules.cm.cm": [[409, "module-modules.CM.CM"]], "compute_adequate_default_parameters() (in module modules.cm.cm)": [[410, "modules.CM.CM.compute_adequate_default_parameters"]], "get_metric() (in module modules.cm.cm)": [[411, "modules.CM.CM.get_metric"]], "make_hotspot_decision_cm() (in module modules.cm.cm)": [[412, "modules.CM.CM.make_hotspot_decision_CM"]], "on_finalise_cm() (in module modules.cm.cm)": [[413, "modules.CM.CM.on_finalise_CM"]], "on_init_aoc() (in module modules.cm.cm)": [[414, "modules.CM.CM.on_init_AOC"]], "on_prepare_cm() (in module modules.cm.cm)": [[415, "modules.CM.CM.on_prepare_CM"]], "modules.cm.module_definition": [[416, "module-modules.CM.module_definition"]], "modules.cm.paras_cm": [[417, "module-modules.CM.paras_CM"]], "modules.fac": [[418, "module-modules.FAC"]], "modules.fac.fac_fifo_queue": [[419, "module-modules.FAC.FAC_FIFO_queue"]], "build_arrival_queue() (in module modules.fac.fac_fifo_queue)": [[420, "modules.FAC.FAC_FIFO_queue.build_arrival_queue"]], "update_arrival_queue() (in module modules.fac.fac_fifo_queue)": [[421, "modules.FAC.FAC_FIFO_queue.update_arrival_queue"]], "wait_for_flight_arrival_information_queue() (in module modules.fac.fac_fifo_queue)": [[422, "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue"]], "wait_for_flight_arrival_information_request_provide_landing_time() (in module modules.fac.fac_fifo_queue)": [[423, "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time"]], "wait_for_flight_in_planning_horizon_queue() (in module modules.fac.fac_fifo_queue)": [[424, "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue"]], "modules.fac.fac_total_cost": [[425, "module-modules.FAC.FAC_total_cost"]], "compute_cost_slots_total() (in module modules.fac.fac_total_cost)": [[426, "modules.FAC.FAC_total_cost.compute_cost_slots_total"]], "compute_costs_slots_arrival_delay_cost_func_slots_times() (in module modules.fac.fac_total_cost)": [[427, "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times"]], "compute_costs_slots_computing_all_costs() (in module modules.fac.fac_total_cost)": [[428, "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs"]], "request_cost_delay_function() (in module modules.fac.fac_total_cost)": [[429, "modules.FAC.FAC_total_cost.request_cost_delay_function"]], "wait_for_cost_delay_function() (in module modules.fac.fac_total_cost)": [[430, "modules.FAC.FAC_total_cost.wait_for_cost_delay_function"]], "modules.fac.fac_total_delay": [[431, "module-modules.FAC.FAC_total_delay"]], "compute_total_delay_slots() (in module modules.fac.fac_total_delay)": [[432, "modules.FAC.FAC_total_delay.compute_total_delay_slots"]], "request_time_propagate_delay() (in module modules.fac.fac_total_delay)": [[433, "modules.FAC.FAC_total_delay.request_time_propagate_delay"]], "wait_for_propagation_delay_time() (in module modules.fac.fac_total_delay)": [[434, "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time"]], "modules.fac.module_definition": [[435, "module-modules.FAC.module_definition"]], "modules.fp": [[436, "module-modules.FP"]], "modules.fp.fp_l1": [[437, "module-modules.FP.FP_L1"]], "consider_flight_swap_fp1() (in module modules.fp.fp_l1)": [[438, "modules.FP.FP_L1.consider_flight_swap_FP1"]], "modules.fp.fp_l2": [[439, "module-modules.FP.FP_L2"]], "consider_flight_swap_fp2() (in module modules.fp.fp_l2)": [[440, "modules.FP.FP_L2.consider_flight_swap_FP2"]], "modules.fp.module_definition": [[441, "module-modules.FP.module_definition"]], "modules.hmi_hotspot": [[442, "module-modules.HMI_HOTSPOT"]], "modules.hmi_hotspot.hmi_fp_sel": [[443, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"]], "on_init_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[444, "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi"]], "on_init_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[445, "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi"]], "receive_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[446, "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi"]], "select_fp_cli() (in module modules.hmi_hotspot.hmi_fp_sel)": [[447, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli"]], "select_fp_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[448, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi"]], "select_fp_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[449, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi"]], "send_fp_options_to_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[450, "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi"]], "wait_for_fp_remote_hmi_answer() (in module modules.hmi_hotspot.hmi_fp_sel)": [[451, "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer"]], "modules.hmi_hotspot.hmi_hotspot": [[452, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"]], "compute_hotspot_decision() (in module modules.hmi_hotspot.hmi_hotspot)": [[453, "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision"]], "make_hotspot_decision_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[454, "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi"]], "notify_aocs_of_final_allocation_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[455, "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi"]], "on_init_remote_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[456, "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi"]], "receive_final_allocation() (in module modules.hmi_hotspot.hmi_hotspot)": [[457, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation"]], "receive_new_messages() (in module modules.hmi_hotspot.hmi_hotspot)": [[458, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages"]], "receive_regulation_decisions_remote_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[459, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi"]], "send_final_allocation_to_airline() (in module modules.hmi_hotspot.hmi_hotspot)": [[460, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline"]], "send_final_allocation_to_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[461, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi"]], "send_regulation_info_to_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[462, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi"]], "modules.hmi_hotspot.hmi_hotspot_client_text": [[463, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text)": [[464, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text.messageclient method)": [[464, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient.__init__"]], "windowudpp (class in modules.hmi_hotspot.hmi_hotspot_client_text)": [[465, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text.windowudpp method)": [[465, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP.__init__"]], "modules.hmi_hotspot.hmi_hotspot_client_text2": [[466, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text2)": [[467, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text2.messageclient method)": [[467, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient.__init__"]], "windowudpp (class in modules.hmi_hotspot.hmi_hotspot_client_text2)": [[468, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text2.windowudpp method)": [[468, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP.__init__"]], "modules.hmi_hotspot.hmi_hotspot_client_text3": [[469, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text3)": [[470, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text3.messageclient method)": [[470, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient.__init__"]], "modules.hmi_hotspot.hmi_server": [[471, "module-modules.HMI_HOTSPOT.HMI_server"]], "mercuryserver (class in modules.hmi_hotspot.hmi_server)": [[472, "modules.HMI_HOTSPOT.HMI_server.MercuryServer"]], "__init__() (modules.hmi_hotspot.hmi_server.mercuryserver method)": [[472, "modules.HMI_HOTSPOT.HMI_server.MercuryServer.__init__"]], "main() (in module modules.hmi_hotspot.hmi_server)": [[473, "modules.HMI_HOTSPOT.HMI_server.main"]], "modules.hmi_hotspot.client_test": [[474, "module-modules.HMI_HOTSPOT.client_test"]], "client (class in modules.hmi_hotspot.client_test)": [[475, "modules.HMI_HOTSPOT.client_test.Client"]], "__init__() (modules.hmi_hotspot.client_test.client method)": [[475, "modules.HMI_HOTSPOT.client_test.Client.__init__"]], "modules.hmi_hotspot.client_test2": [[476, "module-modules.HMI_HOTSPOT.client_test2"]], "clienthmi (class in modules.hmi_hotspot.client_test2)": [[477, "modules.HMI_HOTSPOT.client_test2.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test2.clienthmi method)": [[477, "modules.HMI_HOTSPOT.client_test2.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_hmi": [[478, "module-modules.HMI_HOTSPOT.client_test_hmi"]], "clienthmi (class in modules.hmi_hotspot.client_test_hmi)": [[479, "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test_hmi.clienthmi method)": [[479, "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_hmi2": [[480, "module-modules.HMI_HOTSPOT.client_test_hmi2"]], "clienthmi (class in modules.hmi_hotspot.client_test_hmi2)": [[481, "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test_hmi2.clienthmi method)": [[481, "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_mercury": [[482, "module-modules.HMI_HOTSPOT.client_test_mercury"]], "clientmercury (class in modules.hmi_hotspot.client_test_mercury)": [[483, "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury"]], "__init__() (modules.hmi_hotspot.client_test_mercury.clientmercury method)": [[483, "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury.__init__"]], "modules.hmi_hotspot.hmi_regulation_test_hmi": [[484, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"]], "messageclient (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient"]], "messageclient.letter (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter"]], "__init__() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.__init__"]], "clear() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.clear"]], "copy() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.copy"]], "fromkeys() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.fromkeys"]], "get() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.get"]], "items() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.items"]], "keys() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.keys"]], "pop() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.pop"]], "popitem() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.popitem"]], "setdefault() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.setdefault"]], "update() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.update"]], "values() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[485, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.values"]], "windowselectfp (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[486, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP"]], "__init__() (modules.hmi_hotspot.hmi_regulation_test_hmi.windowselectfp method)": [[486, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP.__init__"]], "modules.hmi_hotspot.module_definition": [[487, "module-modules.HMI_HOTSPOT.module_definition"]], "modules.hmi_hotspot.paras_hmi_fp_sel": [[488, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"]], "modules.hmi_hotspot.paras_hmi_hotspot": [[489, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"]], "modules.ta": [[490, "module-modules.TA"]], "modules.ta.ta_l1": [[491, "module-modules.TA.TA_L1"]], "consider_waiting_pax_ta1() (in module modules.ta.ta_l1)": [[492, "modules.TA.TA_L1.consider_waiting_pax_TA1"]], "cost_index_assessment_ta1() (in module modules.ta.ta_l1)": [[493, "modules.TA.TA_L1.cost_index_assessment_TA1"]], "wait_for_toc_reached_message_ta1() (in module modules.ta.ta_l1)": [[494, "modules.TA.TA_L1.wait_for_toc_reached_message_TA1"]], "modules.ta.ta_l2": [[495, "module-modules.TA.TA_L2"]], "consider_waiting_pax_ta2() (in module modules.ta.ta_l2)": [[496, "modules.TA.TA_L2.consider_waiting_pax_TA2"]], "cost_index_assessment_ta2() (in module modules.ta.ta_l2)": [[497, "modules.TA.TA_L2.cost_index_assessment_TA2"]], "wait_for_toc_reached_message_ta2() (in module modules.ta.ta_l2)": [[498, "modules.TA.TA_L2.wait_for_toc_reached_message_TA2"]], "modules.ta.module_definition": [[499, "module-modules.TA.module_definition"]], "modules.nostromo_eaman": [[500, "module-modules.nostromo_EAMAN"]], "modules.nostromo_eaman.module_definition": [[501, "module-modules.nostromo_EAMAN.module_definition"]], "modules.nostromo_eaman.nostromo_eaman": [[502, "module-modules.nostromo_EAMAN.nostromo_EAMAN"]], "ask_radar_update_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[503, "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW"]], "build_matrices() (in module modules.nostromo_eaman.nostromo_eaman)": [[504, "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices"]], "build_stuff() (in module modules.nostromo_eaman.nostromo_eaman)": [[505, "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff"]], "compute_allocation_cost_for_flight() (in module modules.nostromo_eaman.nostromo_eaman)": [[506, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight"]], "compute_allocation_for_all_flights() (in module modules.nostromo_eaman.nostromo_eaman)": [[507, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights"]], "compute_initial_allocation() (in module modules.nostromo_eaman.nostromo_eaman)": [[508, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation"]], "generate_probas_speed_gen() (in module modules.nostromo_eaman.nostromo_eaman)": [[509, "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen"]], "get_p() (in module modules.nostromo_eaman.nostromo_eaman)": [[510, "modules.nostromo_EAMAN.nostromo_EAMAN.get_p"]], "notify_flight_in_data_horizon() (in module modules.nostromo_eaman.nostromo_eaman)": [[511, "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon"]], "notify_flight_landing() (in module modules.nostromo_eaman.nostromo_eaman)": [[512, "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing"]], "on_init() (in module modules.nostromo_eaman.nostromo_eaman)": [[513, "modules.nostromo_EAMAN.nostromo_EAMAN.on_init"]], "on_init_agent() (in module modules.nostromo_eaman.nostromo_eaman)": [[514, "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent"]], "prepare_data_for_optimizer_advanced() (in module modules.nostromo_eaman.nostromo_eaman)": [[515, "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced"]], "prepare_data_for_optimizer_baseline() (in module modules.nostromo_eaman.nostromo_eaman)": [[516, "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline"]], "receive_new_messages() (in module modules.nostromo_eaman.nostromo_eaman)": [[517, "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages"]], "rescale() (in module modules.nostromo_eaman.nostromo_eaman)": [[518, "modules.nostromo_EAMAN.nostromo_EAMAN.rescale"]], "send_request_for_cost_function() (in module modules.nostromo_eaman.nostromo_eaman)": [[519, "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function"]], "send_request_for_potential_delay_recovery_request() (in module modules.nostromo_eaman.nostromo_eaman)": [[520, "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request"]], "update_arrival_sequence_planning_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[521, "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW"]], "wait_for_cost_function() (in module modules.nostromo_eaman.nostromo_eaman)": [[522, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function"]], "wait_for_estimated_landing_time_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[523, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW"]], "wait_for_flight_arrival_information_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[524, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW"]], "wait_for_flight_in_data_horizon() (in module modules.nostromo_eaman.nostromo_eaman)": [[525, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon"]], "wait_for_flight_in_eaman_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[526, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW"]], "wait_for_flight_potential_delay_recover_information() (in module modules.nostromo_eaman.nostromo_eaman)": [[527, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information"]], "modules.nostromo_eaman.optimiser_advanced": [[528, "module-modules.nostromo_EAMAN.optimiser_advanced"]], "dummyfile (class in modules.nostromo_eaman.optimiser_advanced)": [[529, "modules.nostromo_EAMAN.optimiser_advanced.DummyFile"]], "__init__() (modules.nostromo_eaman.optimiser_advanced.dummyfile method)": [[529, "modules.nostromo_EAMAN.optimiser_advanced.DummyFile.__init__"]], "nosolution": [[530, "modules.nostromo_EAMAN.optimiser_advanced.NoSolution"]], "allocation_from_variable() (in module modules.nostromo_eaman.optimiser_advanced)": [[531, "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable"]], "clock_time() (in module modules.nostromo_eaman.optimiser_advanced)": [[532, "modules.nostromo_EAMAN.optimiser_advanced.clock_time"]], "get_first_matching_element() (in module modules.nostromo_eaman.optimiser_advanced)": [[533, "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element"]], "optimizer_advanced() (in module modules.nostromo_eaman.optimiser_advanced)": [[534, "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced"]], "silence() (in module modules.nostromo_eaman.optimiser_advanced)": [[535, "modules.nostromo_EAMAN.optimiser_advanced.silence"]], "modules.nostromo_eaman.optimiser_baseline": [[536, "module-modules.nostromo_EAMAN.optimiser_baseline"]], "optimizer_baseline() (in module modules.nostromo_eaman.optimiser_baseline)": [[537, "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline"]], "modules.nostromo_eaman.optimiser_baseline_fast": [[538, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "optimizer_baseline() (in module modules.nostromo_eaman.optimiser_baseline_fast)": [[539, "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline"]]}})