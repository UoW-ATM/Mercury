Search.setIndex({"docnames": ["Agents", "Data Input", "Events", "Examples", "GUI", "Manual", "Modules", "Overview of Mercury", "Quickstart", "References", "about", "api", "example_cli", "generated/agents", "generated/agents.agent_base", "generated/agents.agent_base.Agent", "generated/agents.agent_base.Role", "generated/agents.airline_operating_centre", "generated/agents.airline_operating_centre.AirlineFlightPlanner", "generated/agents.airline_operating_centre.AirlineOperatingCentre", "generated/agents.airline_operating_centre.AirlinePaxHandler", "generated/agents.airline_operating_centre.DynamicCostIndexComputer", "generated/agents.airline_operating_centre.FlightPlanSelector", "generated/agents.airline_operating_centre.PassengerReallocation", "generated/agents.airline_operating_centre.TurnaroundOperations", "generated/agents.aman", "generated/agents.aman.AMAN", "generated/agents.aman.ArrivalCancellationHandler", "generated/agents.aman.ArrivalQueuePlannedUpdater", "generated/agents.aman.ArrivalTacticalProvider", "generated/agents.aman.FlightInAMANHandler", "generated/agents.aman.SlotAssigner", "generated/agents.aman.StrategicArrivalQueueBuilder", "generated/agents.commodities", "generated/agents.commodities.aircraft", "generated/agents.commodities.aircraft.Aircraft", "generated/agents.commodities.alliance", "generated/agents.commodities.alliance.Alliance", "generated/agents.commodities.arrival_slot", "generated/agents.commodities.arrival_slot.ArrivalSlot", "generated/agents.commodities.atfm_delay", "generated/agents.commodities.atfm_delay.ATFMDelay", "generated/agents.commodities.atfm_regulation", "generated/agents.commodities.atfm_regulation.ATFMBooker", "generated/agents.commodities.atfm_regulation.ATFMRegulation", "generated/agents.commodities.central_registry", "generated/agents.commodities.central_registry.CentralRegistry", "generated/agents.commodities.debug_flights", "generated/agents.commodities.flight_plan", "generated/agents.commodities.flight_plan.FlightPlan", "generated/agents.commodities.flight_plan.FlightPlanPoint", "generated/agents.commodities.flight_plan.build_proj", "generated/agents.commodities.pax_itinerary_group", "generated/agents.commodities.pax_itinerary_group.PaxItineraryGroup", "generated/agents.commodities.pax_itinerary_group.func", "generated/agents.commodities.route", "generated/agents.commodities.route.Route", "generated/agents.commodities.route.RoutePoint", "generated/agents.commodities.slot_queue", "generated/agents.commodities.slot_queue.CapacityPeriod", "generated/agents.commodities.slot_queue.Slot", "generated/agents.commodities.slot_queue.SlotQueue", "generated/agents.commodities.slot_queue_eaman", "generated/agents.commodities.slot_queue_eaman.EAMANSlot", "generated/agents.commodities.slot_queue_eaman.EAMANSlotQueue", "generated/agents.dman", "generated/agents.dman.DMAN", "generated/agents.dman.DepartureCancellationHandler", "generated/agents.dman.DepartureQueueUpdater", "generated/agents.dman.DepartureSlotProvider", "generated/agents.dman.StrategicDepartureQueueBuilder", "generated/agents.eaman", "generated/agents.eaman.ArrivalPlannerProvider", "generated/agents.eaman.ArrivalQueuePlannedUpdaterE", "generated/agents.eaman.EAMAN", "generated/agents.eaman.FlightInAMANHandlerE", "generated/agents.flight", "generated/agents.flight.AircraftDepartingHandler", "generated/agents.flight.DepartureSlotRequester", "generated/agents.flight.FPInfoProvider", "generated/agents.flight.Flight", "generated/agents.flight.FlightArrivalInformationProvider", "generated/agents.flight.FlightPlanConstraintUpdater", "generated/agents.flight.FlightPlanUpdater", "generated/agents.flight.GroundArrivalHandler", "generated/agents.flight.OperateTrajectory", "generated/agents.flight.PotentialDelayRecoveryProvider", "generated/agents.ground_airport", "generated/agents.ground_airport.GroundAirport", "generated/agents.ground_airport.GroundHandler", "generated/agents.ground_airport.ProvideConnectingTime", "generated/agents.ground_airport.TaxiInProvider", "generated/agents.ground_airport.TaxiOutEstimator", "generated/agents.ground_airport.TaxiOutProvider", "generated/agents.network_manager", "generated/agents.network_manager.HotspotManager", "generated/agents.network_manager.NetworkManager", "generated/agents.network_manager.NetworkManagerAcceptAndDisseminateFP", "generated/agents.network_manager.NetworkManagerCancelFP", "generated/agents.network_manager.NetworkManagerFlightPlanProcessing", "generated/agents.radar", "generated/agents.radar.DisseminateCancellationFlightPlan", "generated/agents.radar.DisseminateFlightPlan", "generated/agents.radar.DisseminateFlightPositionUpdate", "generated/agents.radar.Radar", "generated/agents.radar.RadarAugmentFlightPlan", "generated/agents.seed", "generated/core", "generated/core.delivery_system", "generated/core.delivery_system.Letter", "generated/core.delivery_system.LetterBox", "generated/core.delivery_system.Postman", "generated/core.module_management", "generated/core.module_management.check_incompatibilities", "generated/core.module_management.find_actual_module_name", "generated/core.module_management.get_all_modules", "generated/core.module_management.get_module_paras", "generated/core.module_management.load_mercury_module", "generated/core.parametriser", "generated/core.parametriser.Parametriser", "generated/core.parametriser.ParametriserCapacity", "generated/core.parametriser.ParametriserSelector", "generated/core.parametriser.ParametriserStandard", "generated/core.read_config", "generated/core.read_config.add_output_process", "generated/core.read_config.find_paras_categories", "generated/core.read_config.flatten_paras_dict", "generated/core.read_config.read_mercury_config", "generated/core.read_config.read_scenario_config", "generated/core.read_config.read_toml", "generated/core.read_config.transform_conf_paras", "generated/core.read_config.unflatten_profiles", "generated/core.read_config.unfold_paras_dict", "generated/core.read_config.update_scenario_paras_based_on_case_study", "generated/core.results_aggregator", "generated/core.results_aggregator.ResultAggregatorAdvanced", "generated/core.results_aggregator.ResultsAggregator", "generated/core.results_aggregator.ResultsAggregatorSelector", "generated/core.results_aggregator.ResultsAggregatorSimple", "generated/core.results_aggregator.ResultsAggregatorSimpleReduced", "generated/core.scenario_loader", "generated/core.scenario_loader.ScenarioLoader", "generated/core.scenario_loader.ScenarioLoaderSelector", "generated/core.scenario_loader.ScenarioLoaderSimple", "generated/core.scenario_loader.ScenarioLoaderStandard", "generated/core.scenario_loader.ScenarioLoaderStandardLocal", "generated/core.simulation_manager", "generated/core.simulation_manager.Mercury", "generated/core.simulation_manager.build_command", "generated/core.simulation_manager.create_paras_file_from_dict", "generated/core.world_builder", "generated/core.world_builder.World", "generated/core.world_builder.trace", "generated/dashboard", "generated/dashboard.mercury_gui", "generated/libs", "generated/libs.airspace_particularities", "generated/libs.airspace_particularities.get_nas_airport", "generated/libs.airspace_particularities.is_ATFM_AREA", "generated/libs.airspace_particularities.is_ECAC", "generated/libs.db_access_functions", "generated/libs.db_access_functions.DataAccessBADA4", "generated/libs.db_access_functions.DataAccessPerformance", "generated/libs.db_access_functions.add_crco_to_flights_in_db", "generated/libs.db_access_functions.get_information_routes_o_d_generated", "generated/libs.db_access_functions.read_ATFM_at_airports", "generated/libs.db_access_functions.read_ATFM_at_airports_days", "generated/libs.db_access_functions.read_ATFM_at_airports_manual", "generated/libs.db_access_functions.read_ATFM_at_airports_old", "generated/libs.db_access_functions.read_MCT", "generated/libs.db_access_functions.read_airlines_data", "generated/libs.db_access_functions.read_airport_coords", "generated/libs.db_access_functions.read_airports_curfew_data", "generated/libs.db_access_functions.read_airports_data", "generated/libs.db_access_functions.read_airports_modif_data", "generated/libs.db_access_functions.read_airspace_static", "generated/libs.db_access_functions.read_all_regulation_days", "generated/libs.db_access_functions.read_compensation_data", "generated/libs.db_access_functions.read_coord_trajectory_route", "generated/libs.db_access_functions.read_coord_trajectory_route_based_on_id", "generated/libs.db_access_functions.read_countries_ATFM_NAS", "generated/libs.db_access_functions.read_crco", "generated/libs.db_access_functions.read_crco_charges", "generated/libs.db_access_functions.read_dict_ac_bada_code_ac_model", "generated/libs.db_access_functions.read_dict_ac_type_wtc", "generated/libs.db_access_functions.read_dict_fp_pool_ids", "generated/libs.db_access_functions.read_doc_data", "generated/libs.db_access_functions.read_eamans_data", "generated/libs.db_access_functions.read_estimated_avg_costs_curfews", "generated/libs.db_access_functions.read_extra_cruise_if_dci", "generated/libs.db_access_functions.read_flight_plan_ansps_weights_for_crco", "generated/libs.db_access_functions.read_flight_schedules", "generated/libs.db_access_functions.read_flight_schedules2", "generated/libs.db_access_functions.read_flight_set", "generated/libs.db_access_functions.read_flight_uncertainty", "generated/libs.db_access_functions.read_fp_pool", "generated/libs.db_access_functions.read_fp_pool_missing", "generated/libs.db_access_functions.read_fp_routes_without_crco", "generated/libs.db_access_functions.read_iedf_atfm", "generated/libs.db_access_functions.read_iedf_wind_dict", "generated/libs.db_access_functions.read_itineraries_data", "generated/libs.db_access_functions.read_nas_route_pool", "generated/libs.db_access_functions.read_nas_route_pool_static_o_d", "generated/libs.db_access_functions.read_non_pax_cost_data", "generated/libs.db_access_functions.read_non_pax_cost_fit_data", "generated/libs.db_access_functions.read_nonpax_cost_curfews", "generated/libs.db_access_functions.read_od_in_historic_od_computed_pool", "generated/libs.db_access_functions.read_orig_destination_via_intermediate_shortest", "generated/libs.db_access_functions.read_passenger_flows", "generated/libs.db_access_functions.read_passenger_options", "generated/libs.db_access_functions.read_perc_min_perc_max_regulations_days", "generated/libs.db_access_functions.read_prob_atfm", "generated/libs.db_access_functions.read_regulation_days_at_an_airport", "generated/libs.db_access_functions.read_route_pool", "generated/libs.db_access_functions.read_route_pool_o_d_generated", "generated/libs.db_access_functions.read_route_pool_static", "generated/libs.db_access_functions.read_scenario", "generated/libs.db_access_functions.read_scenario_paras", "generated/libs.db_access_functions.read_schedules", "generated/libs.db_access_functions.read_seed", "generated/libs.db_access_functions.read_soft_cost_date", "generated/libs.db_access_functions.read_trajectories", "generated/libs.db_access_functions.read_trajectories_dataframe", "generated/libs.db_access_functions.read_trajectories_ids", "generated/libs.db_access_functions.read_trajectories_missing", "generated/libs.db_access_functions.read_trajectories_missing_in_interval", "generated/libs.db_access_functions.read_trajectories_options", "generated/libs.db_access_functions.read_trajectories_pool", "generated/libs.db_access_functions.read_turnaround_data", "generated/libs.db_access_functions.save_trajectories_pool", "generated/libs.db_access_functions.save_trajectories_segments", "generated/libs.input_manager", "generated/libs.input_manager.Input_manager", "generated/libs.input_manager.filter_df", "generated/libs.input_manager.filter_sql", "generated/libs.input_manager.read_data_from_dict", "generated/libs.input_manager.write_toml", "generated/libs.other_tools", "generated/libs.other_tools.FlightDummy", "generated/libs.other_tools.SlotDummy", "generated/libs.other_tools.allocation_from_flights", "generated/libs.other_tools.clone_pax", "generated/libs.other_tools.compatible_slots", "generated/libs.other_tools.compute_FPFS_allocation", "generated/libs.other_tools.distance_func", "generated/libs.other_tools.flight_str", "generated/libs.performance_trajectory", "generated/libs.performance_trajectory.ac_performances", "generated/libs.performance_trajectory.ac_performances.AircraftPerformance", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP", "generated/libs.performance_trajectory.standard_atmosphere", "generated/libs.performance_trajectory.standard_atmosphere.density", "generated/libs.performance_trajectory.standard_atmosphere.pressure", "generated/libs.performance_trajectory.standard_atmosphere.sound_speed", "generated/libs.performance_trajectory.standard_atmosphere.temperature", "generated/libs.performance_trajectory.trajectory", "generated/libs.performance_trajectory.trajectory.Trajectory", "generated/libs.performance_trajectory.trajectory.TrajectoryComponent", "generated/libs.performance_trajectory.trajectory.TrajectorySegment", "generated/libs.performance_trajectory.unit_conversions", "generated/libs.performance_trajectory.unit_conversions.cas2tas", "generated/libs.performance_trajectory.unit_conversions.km2kt", "generated/libs.performance_trajectory.unit_conversions.km2m", "generated/libs.performance_trajectory.unit_conversions.kt2m", "generated/libs.performance_trajectory.unit_conversions.m2kt", "generated/libs.result_manager", "generated/libs.result_manager.Result_manager", "generated/libs.result_tools", "generated/libs.result_tools.binarise", "generated/libs.result_tools.build_aligned_pax_flight_df", "generated/libs.result_tools.build_single_iteration_df", "generated/libs.result_tools.clone_pax", "generated/libs.result_tools.compute_derived_metrics_hist_sim", "generated/libs.result_tools.compute_derived_metrics_historical", "generated/libs.result_tools.compute_derived_metrics_pax_generic", "generated/libs.result_tools.compute_derived_metrics_simulations", "generated/libs.result_tools.compute_metrics_flights", "generated/libs.result_tools.compute_metrics_pax", "generated/libs.result_tools.find_destination_generic", "generated/libs.result_tools.find_origin_generic", "generated/libs.result_tools.get_historical_flights", "generated/libs.result_tools.get_pax_schedules", "generated/libs.result_tools.merge_hist_sim", "generated/libs.result_tools.merge_pax_flights", "generated/libs.result_tools.produce_hist_sim_df", "generated/libs.result_tools.produce_historical_flight_pax_df", "generated/libs.uow_tool_belt", "generated/libs.uow_tool_belt.DTW", "generated/libs.uow_tool_belt.DTW.dtw", "generated/libs.uow_tool_belt.DTW.dtw_path", "generated/libs.uow_tool_belt.airspace_particularities", "generated/libs.uow_tool_belt.airspace_particularities.get_nas_airport", "generated/libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA", "generated/libs.uow_tool_belt.airspace_particularities.is_ECAC", "generated/libs.uow_tool_belt.connection_tools", "generated/libs.uow_tool_belt.connection_tools.EmptyConnection", "generated/libs.uow_tool_belt.connection_tools.create_indexes_in_table", "generated/libs.uow_tool_belt.connection_tools.do_query", "generated/libs.uow_tool_belt.connection_tools.extract_ssh_parameters", "generated/libs.uow_tool_belt.connection_tools.file_connection", "generated/libs.uow_tool_belt.connection_tools.generic_connection", "generated/libs.uow_tool_belt.connection_tools.load_data_infile", "generated/libs.uow_tool_belt.connection_tools.mysql_connection", "generated/libs.uow_tool_belt.connection_tools.parquet_connection", "generated/libs.uow_tool_belt.connection_tools.read_cred", "generated/libs.uow_tool_belt.connection_tools.read_csv", "generated/libs.uow_tool_belt.connection_tools.read_data", "generated/libs.uow_tool_belt.connection_tools.read_mysql", "generated/libs.uow_tool_belt.connection_tools.read_parquet", "generated/libs.uow_tool_belt.connection_tools.read_pickle", "generated/libs.uow_tool_belt.connection_tools.run_mysql_query", "generated/libs.uow_tool_belt.connection_tools.write_csv", "generated/libs.uow_tool_belt.connection_tools.write_data", "generated/libs.uow_tool_belt.connection_tools.write_mysql", "generated/libs.uow_tool_belt.connection_tools.write_pickle", "generated/libs.uow_tool_belt.general_tools", "generated/libs.uow_tool_belt.general_tools.A_B", "generated/libs.uow_tool_belt.general_tools.DummyFile", "generated/libs.uow_tool_belt.general_tools.HiddenPrints", "generated/libs.uow_tool_belt.general_tools.Paras", "generated/libs.uow_tool_belt.general_tools.TwoWayDict", "generated/libs.uow_tool_belt.general_tools.add_dicts", "generated/libs.uow_tool_belt.general_tools.alert_print", "generated/libs.uow_tool_belt.general_tools.alphabet", "generated/libs.uow_tool_belt.general_tools.apply_args_and_kwargs", "generated/libs.uow_tool_belt.general_tools.average_on_downsampled_interval", "generated/libs.uow_tool_belt.general_tools.average_on_intervals", "generated/libs.uow_tool_belt.general_tools.average_on_quantiles", "generated/libs.uow_tool_belt.general_tools.bootstrap_mean_test", "generated/libs.uow_tool_belt.general_tools.bootstrap_test", "generated/libs.uow_tool_belt.general_tools.build_col_print_func", "generated/libs.uow_tool_belt.general_tools.build_step_bivariate_function", "generated/libs.uow_tool_belt.general_tools.build_step_multi_valued_function", "generated/libs.uow_tool_belt.general_tools.build_triangular", "generated/libs.uow_tool_belt.general_tools.center_spatial_network", "generated/libs.uow_tool_belt.general_tools.clock_time", "generated/libs.uow_tool_belt.general_tools.compute_percentile_with_weight", "generated/libs.uow_tool_belt.general_tools.counter", "generated/libs.uow_tool_belt.general_tools.create_dir", "generated/libs.uow_tool_belt.general_tools.dict_depth", "generated/libs.uow_tool_belt.general_tools.distance_euclidean", "generated/libs.uow_tool_belt.general_tools.fit", "generated/libs.uow_tool_belt.general_tools.get_first_matching_element", "generated/libs.uow_tool_belt.general_tools.gini", "generated/libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval", "generated/libs.uow_tool_belt.general_tools.groupby_on_intervals", "generated/libs.uow_tool_belt.general_tools.groupby_on_quantiles", "generated/libs.uow_tool_belt.general_tools.haversine", "generated/libs.uow_tool_belt.general_tools.haversine_old", "generated/libs.uow_tool_belt.general_tools.hex_to_rgb", "generated/libs.uow_tool_belt.general_tools.human_format", "generated/libs.uow_tool_belt.general_tools.human_format_for_ticks", "generated/libs.uow_tool_belt.general_tools.intermediate_point", "generated/libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm", "generated/libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm", "generated/libs.uow_tool_belt.general_tools.inv_s_scale_lognorm", "generated/libs.uow_tool_belt.general_tools.inverted_edf", "generated/libs.uow_tool_belt.general_tools.keep_time", "generated/libs.uow_tool_belt.general_tools.loading", "generated/libs.uow_tool_belt.general_tools.logging", "generated/libs.uow_tool_belt.general_tools.loop", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick", "generated/libs.uow_tool_belt.general_tools.make_nested_dict_from_df", "generated/libs.uow_tool_belt.general_tools.mysql_server", "generated/libs.uow_tool_belt.general_tools.parallelize", "generated/libs.uow_tool_belt.general_tools.partial_corr", "generated/libs.uow_tool_belt.general_tools.percentile_10", "generated/libs.uow_tool_belt.general_tools.percentile_90", "generated/libs.uow_tool_belt.general_tools.percentile_custom", "generated/libs.uow_tool_belt.general_tools.permutation_test", "generated/libs.uow_tool_belt.general_tools.permutation_test_only_diff", "generated/libs.uow_tool_belt.general_tools.proportional", "generated/libs.uow_tool_belt.general_tools.r_squared", "generated/libs.uow_tool_belt.general_tools.read_paras", "generated/libs.uow_tool_belt.general_tools.recursive_concat", "generated/libs.uow_tool_belt.general_tools.recursive_minimization", "generated/libs.uow_tool_belt.general_tools.remove_nan_coupled_lists", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm", "generated/libs.uow_tool_belt.general_tools.set_interval", "generated/libs.uow_tool_belt.general_tools.shift_spatial_network", "generated/libs.uow_tool_belt.general_tools.show_dic", "generated/libs.uow_tool_belt.general_tools.silence", "generated/libs.uow_tool_belt.general_tools.simple_color_map_function", "generated/libs.uow_tool_belt.general_tools.simple_colormap_object", "generated/libs.uow_tool_belt.general_tools.sol_Bs", "generated/libs.uow_tool_belt.general_tools.sort_lists", "generated/libs.uow_tool_belt.general_tools.sort_paired_values", "generated/libs.uow_tool_belt.general_tools.spread_integer", "generated/libs.uow_tool_belt.general_tools.ssh_client_connection", "generated/libs.uow_tool_belt.general_tools.ssh_copy", "generated/libs.uow_tool_belt.general_tools.ssh_tunnel_connection", "generated/libs.uow_tool_belt.general_tools.starmap_with_kwargs", "generated/libs.uow_tool_belt.general_tools.strip_string", "generated/libs.uow_tool_belt.general_tools.timeit", "generated/libs.uow_tool_belt.general_tools.weight_avg", "generated/libs.uow_tool_belt.general_tools.write_on_file", "generated/libs.uow_tool_belt.general_tools.yes", "generated/libs.uow_tool_belt.logging", "generated/libs.uow_tool_belt.network_tools", "generated/libs.uow_tool_belt.plot_tools", "generated/libs.uow_tool_belt.plot_tools.bar_plot_template", "generated/libs.uow_tool_belt.plot_tools.savefig", "generated/libs.uow_tool_belt.trajectory_tools", "generated/libs.uow_tool_belt.trajectory_tools.compute_ab", "generated/libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory", "generated/libs.uow_tool_belt.trajectory_tools.detect_toc_tod", "generated/libs.uow_tool_belt.trajectory_tools.plot_traj", "generated/mercury", "generated/mercury.manual_bool_cast", "generated/modules", "generated/modules.Auction", "generated/modules.Auction.Auction", "generated/modules.Auction.module_definition", "generated/modules.Auction.paras_Auction", "generated/modules.CM", "generated/modules.CM.CM", "generated/modules.CM.CM.compute_adequate_default_parameters", "generated/modules.CM.CM.get_metric", "generated/modules.CM.CM.make_hotspot_decision_CM", "generated/modules.CM.CM.on_finalise_CM", "generated/modules.CM.CM.on_init_AOC", "generated/modules.CM.CM.on_prepare_CM", "generated/modules.CM.module_definition", "generated/modules.CM.paras_CM", "generated/modules.FAC", "generated/modules.FAC.FAC_FIFO_queue", "generated/modules.FAC.FAC_FIFO_queue.build_arrival_queue", "generated/modules.FAC.FAC_FIFO_queue.update_arrival_queue", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue", "generated/modules.FAC.FAC_total_cost", "generated/modules.FAC.FAC_total_cost.compute_cost_slots_total", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs", "generated/modules.FAC.FAC_total_cost.request_cost_delay_function", "generated/modules.FAC.FAC_total_cost.wait_for_cost_delay_function", "generated/modules.FAC.FAC_total_delay", "generated/modules.FAC.FAC_total_delay.compute_total_delay_slots", "generated/modules.FAC.FAC_total_delay.request_time_propagate_delay", "generated/modules.FAC.FAC_total_delay.wait_for_propagation_delay_time", "generated/modules.FAC.module_definition", "generated/modules.FP", "generated/modules.FP.FP_L1", "generated/modules.FP.FP_L1.consider_flight_swap_FP1", "generated/modules.FP.FP_L2", "generated/modules.FP.FP_L2.consider_flight_swap_FP2", "generated/modules.FP.module_definition", "generated/modules.HMI_HOTSPOT", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient", "generated/modules.HMI_HOTSPOT.HMI_server", "generated/modules.HMI_HOTSPOT.HMI_server.MercuryServer", "generated/modules.HMI_HOTSPOT.HMI_server.main", "generated/modules.HMI_HOTSPOT.client_test", "generated/modules.HMI_HOTSPOT.client_test.Client", "generated/modules.HMI_HOTSPOT.client_test2", "generated/modules.HMI_HOTSPOT.client_test2.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_hmi", "generated/modules.HMI_HOTSPOT.client_test_hmi.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_hmi2", "generated/modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI", "generated/modules.HMI_HOTSPOT.client_test_mercury", "generated/modules.HMI_HOTSPOT.client_test_mercury.ClientMercury", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP", "generated/modules.HMI_HOTSPOT.module_definition", "generated/modules.HMI_HOTSPOT.paras_HMI_FP_SEL", "generated/modules.HMI_HOTSPOT.paras_HMI_HOTSPOT", "generated/modules.TA", "generated/modules.TA.TA_L1", "generated/modules.TA.TA_L1.consider_waiting_pax_TA1", "generated/modules.TA.TA_L1.cost_index_assessment_TA1", "generated/modules.TA.TA_L1.wait_for_toc_reached_message_TA1", "generated/modules.TA.TA_L2", "generated/modules.TA.TA_L2.consider_waiting_pax_TA2", "generated/modules.TA.TA_L2.cost_index_assessment_TA2", "generated/modules.TA.TA_L2.wait_for_toc_reached_message_TA2", "generated/modules.TA.module_definition", "generated/modules.nostromo_EAMAN", "generated/modules.nostromo_EAMAN.module_definition", "generated/modules.nostromo_EAMAN.nostromo_EAMAN", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.get_p", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rescale", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information", "generated/modules.nostromo_EAMAN.optimiser_advanced", "generated/modules.nostromo_EAMAN.optimiser_advanced.DummyFile", "generated/modules.nostromo_EAMAN.optimiser_advanced.NoSolution", "generated/modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable", "generated/modules.nostromo_EAMAN.optimiser_advanced.clock_time", "generated/modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element", "generated/modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced", "generated/modules.nostromo_EAMAN.optimiser_advanced.silence", "generated/modules.nostromo_EAMAN.optimiser_baseline", "generated/modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline", "index"], "filenames": ["Agents.rst", "Data Input.rst", "Events.rst", "Examples.rst", "GUI.rst", "Manual.rst", "Modules.rst", "Overview of Mercury.rst", "Quickstart.rst", "References.rst", "about.rst", "api.rst", "example_cli.rst", "generated/agents.rst", "generated/agents.agent_base.rst", "generated/agents.agent_base.Agent.rst", "generated/agents.agent_base.Role.rst", "generated/agents.airline_operating_centre.rst", "generated/agents.airline_operating_centre.AirlineFlightPlanner.rst", "generated/agents.airline_operating_centre.AirlineOperatingCentre.rst", "generated/agents.airline_operating_centre.AirlinePaxHandler.rst", "generated/agents.airline_operating_centre.DynamicCostIndexComputer.rst", "generated/agents.airline_operating_centre.FlightPlanSelector.rst", "generated/agents.airline_operating_centre.PassengerReallocation.rst", "generated/agents.airline_operating_centre.TurnaroundOperations.rst", "generated/agents.aman.rst", "generated/agents.aman.AMAN.rst", "generated/agents.aman.ArrivalCancellationHandler.rst", "generated/agents.aman.ArrivalQueuePlannedUpdater.rst", "generated/agents.aman.ArrivalTacticalProvider.rst", "generated/agents.aman.FlightInAMANHandler.rst", "generated/agents.aman.SlotAssigner.rst", "generated/agents.aman.StrategicArrivalQueueBuilder.rst", "generated/agents.commodities.rst", "generated/agents.commodities.aircraft.rst", "generated/agents.commodities.aircraft.Aircraft.rst", "generated/agents.commodities.alliance.rst", "generated/agents.commodities.alliance.Alliance.rst", "generated/agents.commodities.arrival_slot.rst", "generated/agents.commodities.arrival_slot.ArrivalSlot.rst", "generated/agents.commodities.atfm_delay.rst", "generated/agents.commodities.atfm_delay.ATFMDelay.rst", "generated/agents.commodities.atfm_regulation.rst", "generated/agents.commodities.atfm_regulation.ATFMBooker.rst", "generated/agents.commodities.atfm_regulation.ATFMRegulation.rst", "generated/agents.commodities.central_registry.rst", "generated/agents.commodities.central_registry.CentralRegistry.rst", "generated/agents.commodities.debug_flights.rst", "generated/agents.commodities.flight_plan.rst", "generated/agents.commodities.flight_plan.FlightPlan.rst", "generated/agents.commodities.flight_plan.FlightPlanPoint.rst", "generated/agents.commodities.flight_plan.build_proj.rst", "generated/agents.commodities.pax_itinerary_group.rst", "generated/agents.commodities.pax_itinerary_group.PaxItineraryGroup.rst", "generated/agents.commodities.pax_itinerary_group.func.rst", "generated/agents.commodities.route.rst", "generated/agents.commodities.route.Route.rst", "generated/agents.commodities.route.RoutePoint.rst", "generated/agents.commodities.slot_queue.rst", "generated/agents.commodities.slot_queue.CapacityPeriod.rst", "generated/agents.commodities.slot_queue.Slot.rst", "generated/agents.commodities.slot_queue.SlotQueue.rst", "generated/agents.commodities.slot_queue_eaman.rst", "generated/agents.commodities.slot_queue_eaman.EAMANSlot.rst", "generated/agents.commodities.slot_queue_eaman.EAMANSlotQueue.rst", "generated/agents.dman.rst", "generated/agents.dman.DMAN.rst", "generated/agents.dman.DepartureCancellationHandler.rst", "generated/agents.dman.DepartureQueueUpdater.rst", "generated/agents.dman.DepartureSlotProvider.rst", "generated/agents.dman.StrategicDepartureQueueBuilder.rst", "generated/agents.eaman.rst", "generated/agents.eaman.ArrivalPlannerProvider.rst", "generated/agents.eaman.ArrivalQueuePlannedUpdaterE.rst", "generated/agents.eaman.EAMAN.rst", "generated/agents.eaman.FlightInAMANHandlerE.rst", "generated/agents.flight.rst", "generated/agents.flight.AircraftDepartingHandler.rst", "generated/agents.flight.DepartureSlotRequester.rst", "generated/agents.flight.FPInfoProvider.rst", "generated/agents.flight.Flight.rst", "generated/agents.flight.FlightArrivalInformationProvider.rst", "generated/agents.flight.FlightPlanConstraintUpdater.rst", "generated/agents.flight.FlightPlanUpdater.rst", "generated/agents.flight.GroundArrivalHandler.rst", "generated/agents.flight.OperateTrajectory.rst", "generated/agents.flight.PotentialDelayRecoveryProvider.rst", "generated/agents.ground_airport.rst", "generated/agents.ground_airport.GroundAirport.rst", "generated/agents.ground_airport.GroundHandler.rst", "generated/agents.ground_airport.ProvideConnectingTime.rst", "generated/agents.ground_airport.TaxiInProvider.rst", "generated/agents.ground_airport.TaxiOutEstimator.rst", "generated/agents.ground_airport.TaxiOutProvider.rst", "generated/agents.network_manager.rst", "generated/agents.network_manager.HotspotManager.rst", "generated/agents.network_manager.NetworkManager.rst", "generated/agents.network_manager.NetworkManagerAcceptAndDisseminateFP.rst", "generated/agents.network_manager.NetworkManagerCancelFP.rst", "generated/agents.network_manager.NetworkManagerFlightPlanProcessing.rst", "generated/agents.radar.rst", "generated/agents.radar.DisseminateCancellationFlightPlan.rst", "generated/agents.radar.DisseminateFlightPlan.rst", "generated/agents.radar.DisseminateFlightPositionUpdate.rst", "generated/agents.radar.Radar.rst", "generated/agents.radar.RadarAugmentFlightPlan.rst", "generated/agents.seed.rst", "generated/core.rst", "generated/core.delivery_system.rst", "generated/core.delivery_system.Letter.rst", "generated/core.delivery_system.LetterBox.rst", "generated/core.delivery_system.Postman.rst", "generated/core.module_management.rst", "generated/core.module_management.check_incompatibilities.rst", "generated/core.module_management.find_actual_module_name.rst", "generated/core.module_management.get_all_modules.rst", "generated/core.module_management.get_module_paras.rst", "generated/core.module_management.load_mercury_module.rst", "generated/core.parametriser.rst", "generated/core.parametriser.Parametriser.rst", "generated/core.parametriser.ParametriserCapacity.rst", "generated/core.parametriser.ParametriserSelector.rst", "generated/core.parametriser.ParametriserStandard.rst", "generated/core.read_config.rst", "generated/core.read_config.add_output_process.rst", "generated/core.read_config.find_paras_categories.rst", "generated/core.read_config.flatten_paras_dict.rst", "generated/core.read_config.read_mercury_config.rst", "generated/core.read_config.read_scenario_config.rst", "generated/core.read_config.read_toml.rst", "generated/core.read_config.transform_conf_paras.rst", "generated/core.read_config.unflatten_profiles.rst", "generated/core.read_config.unfold_paras_dict.rst", "generated/core.read_config.update_scenario_paras_based_on_case_study.rst", "generated/core.results_aggregator.rst", "generated/core.results_aggregator.ResultAggregatorAdvanced.rst", "generated/core.results_aggregator.ResultsAggregator.rst", "generated/core.results_aggregator.ResultsAggregatorSelector.rst", "generated/core.results_aggregator.ResultsAggregatorSimple.rst", "generated/core.results_aggregator.ResultsAggregatorSimpleReduced.rst", "generated/core.scenario_loader.rst", "generated/core.scenario_loader.ScenarioLoader.rst", "generated/core.scenario_loader.ScenarioLoaderSelector.rst", "generated/core.scenario_loader.ScenarioLoaderSimple.rst", "generated/core.scenario_loader.ScenarioLoaderStandard.rst", "generated/core.scenario_loader.ScenarioLoaderStandardLocal.rst", "generated/core.simulation_manager.rst", "generated/core.simulation_manager.Mercury.rst", "generated/core.simulation_manager.build_command.rst", "generated/core.simulation_manager.create_paras_file_from_dict.rst", "generated/core.world_builder.rst", "generated/core.world_builder.World.rst", "generated/core.world_builder.trace.rst", "generated/dashboard.rst", "generated/dashboard.mercury_gui.rst", "generated/libs.rst", "generated/libs.airspace_particularities.rst", "generated/libs.airspace_particularities.get_nas_airport.rst", "generated/libs.airspace_particularities.is_ATFM_AREA.rst", "generated/libs.airspace_particularities.is_ECAC.rst", "generated/libs.db_access_functions.rst", "generated/libs.db_access_functions.DataAccessBADA4.rst", "generated/libs.db_access_functions.DataAccessPerformance.rst", "generated/libs.db_access_functions.add_crco_to_flights_in_db.rst", "generated/libs.db_access_functions.get_information_routes_o_d_generated.rst", "generated/libs.db_access_functions.read_ATFM_at_airports.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_days.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_manual.rst", "generated/libs.db_access_functions.read_ATFM_at_airports_old.rst", "generated/libs.db_access_functions.read_MCT.rst", "generated/libs.db_access_functions.read_airlines_data.rst", "generated/libs.db_access_functions.read_airport_coords.rst", "generated/libs.db_access_functions.read_airports_curfew_data.rst", "generated/libs.db_access_functions.read_airports_data.rst", "generated/libs.db_access_functions.read_airports_modif_data.rst", "generated/libs.db_access_functions.read_airspace_static.rst", "generated/libs.db_access_functions.read_all_regulation_days.rst", "generated/libs.db_access_functions.read_compensation_data.rst", "generated/libs.db_access_functions.read_coord_trajectory_route.rst", "generated/libs.db_access_functions.read_coord_trajectory_route_based_on_id.rst", "generated/libs.db_access_functions.read_countries_ATFM_NAS.rst", "generated/libs.db_access_functions.read_crco.rst", "generated/libs.db_access_functions.read_crco_charges.rst", "generated/libs.db_access_functions.read_dict_ac_bada_code_ac_model.rst", "generated/libs.db_access_functions.read_dict_ac_type_wtc.rst", "generated/libs.db_access_functions.read_dict_fp_pool_ids.rst", "generated/libs.db_access_functions.read_doc_data.rst", "generated/libs.db_access_functions.read_eamans_data.rst", "generated/libs.db_access_functions.read_estimated_avg_costs_curfews.rst", "generated/libs.db_access_functions.read_extra_cruise_if_dci.rst", "generated/libs.db_access_functions.read_flight_plan_ansps_weights_for_crco.rst", "generated/libs.db_access_functions.read_flight_schedules.rst", "generated/libs.db_access_functions.read_flight_schedules2.rst", "generated/libs.db_access_functions.read_flight_set.rst", "generated/libs.db_access_functions.read_flight_uncertainty.rst", "generated/libs.db_access_functions.read_fp_pool.rst", "generated/libs.db_access_functions.read_fp_pool_missing.rst", "generated/libs.db_access_functions.read_fp_routes_without_crco.rst", "generated/libs.db_access_functions.read_iedf_atfm.rst", "generated/libs.db_access_functions.read_iedf_wind_dict.rst", "generated/libs.db_access_functions.read_itineraries_data.rst", "generated/libs.db_access_functions.read_nas_route_pool.rst", "generated/libs.db_access_functions.read_nas_route_pool_static_o_d.rst", "generated/libs.db_access_functions.read_non_pax_cost_data.rst", "generated/libs.db_access_functions.read_non_pax_cost_fit_data.rst", "generated/libs.db_access_functions.read_nonpax_cost_curfews.rst", "generated/libs.db_access_functions.read_od_in_historic_od_computed_pool.rst", "generated/libs.db_access_functions.read_orig_destination_via_intermediate_shortest.rst", "generated/libs.db_access_functions.read_passenger_flows.rst", "generated/libs.db_access_functions.read_passenger_options.rst", "generated/libs.db_access_functions.read_perc_min_perc_max_regulations_days.rst", "generated/libs.db_access_functions.read_prob_atfm.rst", "generated/libs.db_access_functions.read_regulation_days_at_an_airport.rst", "generated/libs.db_access_functions.read_route_pool.rst", "generated/libs.db_access_functions.read_route_pool_o_d_generated.rst", "generated/libs.db_access_functions.read_route_pool_static.rst", "generated/libs.db_access_functions.read_scenario.rst", "generated/libs.db_access_functions.read_scenario_paras.rst", "generated/libs.db_access_functions.read_schedules.rst", "generated/libs.db_access_functions.read_seed.rst", "generated/libs.db_access_functions.read_soft_cost_date.rst", "generated/libs.db_access_functions.read_trajectories.rst", "generated/libs.db_access_functions.read_trajectories_dataframe.rst", "generated/libs.db_access_functions.read_trajectories_ids.rst", "generated/libs.db_access_functions.read_trajectories_missing.rst", "generated/libs.db_access_functions.read_trajectories_missing_in_interval.rst", "generated/libs.db_access_functions.read_trajectories_options.rst", "generated/libs.db_access_functions.read_trajectories_pool.rst", "generated/libs.db_access_functions.read_turnaround_data.rst", "generated/libs.db_access_functions.save_trajectories_pool.rst", "generated/libs.db_access_functions.save_trajectories_segments.rst", "generated/libs.input_manager.rst", "generated/libs.input_manager.Input_manager.rst", "generated/libs.input_manager.filter_df.rst", "generated/libs.input_manager.filter_sql.rst", "generated/libs.input_manager.read_data_from_dict.rst", "generated/libs.input_manager.write_toml.rst", "generated/libs.other_tools.rst", "generated/libs.other_tools.FlightDummy.rst", "generated/libs.other_tools.SlotDummy.rst", "generated/libs.other_tools.allocation_from_flights.rst", "generated/libs.other_tools.clone_pax.rst", "generated/libs.other_tools.compatible_slots.rst", "generated/libs.other_tools.compute_FPFS_allocation.rst", "generated/libs.other_tools.distance_func.rst", "generated/libs.other_tools.flight_str.rst", "generated/libs.performance_trajectory.rst", "generated/libs.performance_trajectory.ac_performances.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformance.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.rst", "generated/libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.rst", "generated/libs.performance_trajectory.standard_atmosphere.rst", "generated/libs.performance_trajectory.standard_atmosphere.density.rst", "generated/libs.performance_trajectory.standard_atmosphere.pressure.rst", "generated/libs.performance_trajectory.standard_atmosphere.sound_speed.rst", "generated/libs.performance_trajectory.standard_atmosphere.temperature.rst", "generated/libs.performance_trajectory.trajectory.rst", "generated/libs.performance_trajectory.trajectory.Trajectory.rst", "generated/libs.performance_trajectory.trajectory.TrajectoryComponent.rst", "generated/libs.performance_trajectory.trajectory.TrajectorySegment.rst", "generated/libs.performance_trajectory.unit_conversions.rst", "generated/libs.performance_trajectory.unit_conversions.cas2tas.rst", "generated/libs.performance_trajectory.unit_conversions.km2kt.rst", "generated/libs.performance_trajectory.unit_conversions.km2m.rst", "generated/libs.performance_trajectory.unit_conversions.kt2m.rst", "generated/libs.performance_trajectory.unit_conversions.m2kt.rst", "generated/libs.result_manager.rst", "generated/libs.result_manager.Result_manager.rst", "generated/libs.result_tools.rst", "generated/libs.result_tools.binarise.rst", "generated/libs.result_tools.build_aligned_pax_flight_df.rst", "generated/libs.result_tools.build_single_iteration_df.rst", "generated/libs.result_tools.clone_pax.rst", "generated/libs.result_tools.compute_derived_metrics_hist_sim.rst", "generated/libs.result_tools.compute_derived_metrics_historical.rst", "generated/libs.result_tools.compute_derived_metrics_pax_generic.rst", "generated/libs.result_tools.compute_derived_metrics_simulations.rst", "generated/libs.result_tools.compute_metrics_flights.rst", "generated/libs.result_tools.compute_metrics_pax.rst", "generated/libs.result_tools.find_destination_generic.rst", "generated/libs.result_tools.find_origin_generic.rst", "generated/libs.result_tools.get_historical_flights.rst", "generated/libs.result_tools.get_pax_schedules.rst", "generated/libs.result_tools.merge_hist_sim.rst", "generated/libs.result_tools.merge_pax_flights.rst", "generated/libs.result_tools.produce_hist_sim_df.rst", "generated/libs.result_tools.produce_historical_flight_pax_df.rst", "generated/libs.uow_tool_belt.rst", "generated/libs.uow_tool_belt.DTW.rst", "generated/libs.uow_tool_belt.DTW.dtw.rst", "generated/libs.uow_tool_belt.DTW.dtw_path.rst", "generated/libs.uow_tool_belt.airspace_particularities.rst", "generated/libs.uow_tool_belt.airspace_particularities.get_nas_airport.rst", "generated/libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA.rst", "generated/libs.uow_tool_belt.airspace_particularities.is_ECAC.rst", "generated/libs.uow_tool_belt.connection_tools.rst", "generated/libs.uow_tool_belt.connection_tools.EmptyConnection.rst", "generated/libs.uow_tool_belt.connection_tools.create_indexes_in_table.rst", "generated/libs.uow_tool_belt.connection_tools.do_query.rst", "generated/libs.uow_tool_belt.connection_tools.extract_ssh_parameters.rst", "generated/libs.uow_tool_belt.connection_tools.file_connection.rst", "generated/libs.uow_tool_belt.connection_tools.generic_connection.rst", "generated/libs.uow_tool_belt.connection_tools.load_data_infile.rst", "generated/libs.uow_tool_belt.connection_tools.mysql_connection.rst", "generated/libs.uow_tool_belt.connection_tools.parquet_connection.rst", "generated/libs.uow_tool_belt.connection_tools.read_cred.rst", "generated/libs.uow_tool_belt.connection_tools.read_csv.rst", "generated/libs.uow_tool_belt.connection_tools.read_data.rst", "generated/libs.uow_tool_belt.connection_tools.read_mysql.rst", "generated/libs.uow_tool_belt.connection_tools.read_parquet.rst", "generated/libs.uow_tool_belt.connection_tools.read_pickle.rst", "generated/libs.uow_tool_belt.connection_tools.run_mysql_query.rst", "generated/libs.uow_tool_belt.connection_tools.write_csv.rst", "generated/libs.uow_tool_belt.connection_tools.write_data.rst", "generated/libs.uow_tool_belt.connection_tools.write_mysql.rst", "generated/libs.uow_tool_belt.connection_tools.write_pickle.rst", "generated/libs.uow_tool_belt.general_tools.rst", "generated/libs.uow_tool_belt.general_tools.A_B.rst", "generated/libs.uow_tool_belt.general_tools.DummyFile.rst", "generated/libs.uow_tool_belt.general_tools.HiddenPrints.rst", "generated/libs.uow_tool_belt.general_tools.Paras.rst", "generated/libs.uow_tool_belt.general_tools.TwoWayDict.rst", "generated/libs.uow_tool_belt.general_tools.add_dicts.rst", "generated/libs.uow_tool_belt.general_tools.alert_print.rst", "generated/libs.uow_tool_belt.general_tools.alphabet.rst", "generated/libs.uow_tool_belt.general_tools.apply_args_and_kwargs.rst", "generated/libs.uow_tool_belt.general_tools.average_on_downsampled_interval.rst", "generated/libs.uow_tool_belt.general_tools.average_on_intervals.rst", "generated/libs.uow_tool_belt.general_tools.average_on_quantiles.rst", "generated/libs.uow_tool_belt.general_tools.bootstrap_mean_test.rst", "generated/libs.uow_tool_belt.general_tools.bootstrap_test.rst", "generated/libs.uow_tool_belt.general_tools.build_col_print_func.rst", "generated/libs.uow_tool_belt.general_tools.build_step_bivariate_function.rst", "generated/libs.uow_tool_belt.general_tools.build_step_multi_valued_function.rst", "generated/libs.uow_tool_belt.general_tools.build_triangular.rst", "generated/libs.uow_tool_belt.general_tools.center_spatial_network.rst", "generated/libs.uow_tool_belt.general_tools.clock_time.rst", "generated/libs.uow_tool_belt.general_tools.compute_percentile_with_weight.rst", "generated/libs.uow_tool_belt.general_tools.counter.rst", "generated/libs.uow_tool_belt.general_tools.create_dir.rst", "generated/libs.uow_tool_belt.general_tools.dict_depth.rst", "generated/libs.uow_tool_belt.general_tools.distance_euclidean.rst", "generated/libs.uow_tool_belt.general_tools.fit.rst", "generated/libs.uow_tool_belt.general_tools.get_first_matching_element.rst", "generated/libs.uow_tool_belt.general_tools.gini.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_intervals.rst", "generated/libs.uow_tool_belt.general_tools.groupby_on_quantiles.rst", "generated/libs.uow_tool_belt.general_tools.haversine.rst", "generated/libs.uow_tool_belt.general_tools.haversine_old.rst", "generated/libs.uow_tool_belt.general_tools.hex_to_rgb.rst", "generated/libs.uow_tool_belt.general_tools.human_format.rst", "generated/libs.uow_tool_belt.general_tools.human_format_for_ticks.rst", "generated/libs.uow_tool_belt.general_tools.intermediate_point.rst", "generated/libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inv_s_scale_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.inverted_edf.rst", "generated/libs.uow_tool_belt.general_tools.keep_time.rst", "generated/libs.uow_tool_belt.general_tools.loading.rst", "generated/libs.uow_tool_belt.general_tools.logging.rst", "generated/libs.uow_tool_belt.general_tools.loop.rst", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels.rst", "generated/libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick.rst", "generated/libs.uow_tool_belt.general_tools.make_nested_dict_from_df.rst", "generated/libs.uow_tool_belt.general_tools.mysql_server.rst", "generated/libs.uow_tool_belt.general_tools.parallelize.rst", "generated/libs.uow_tool_belt.general_tools.partial_corr.rst", "generated/libs.uow_tool_belt.general_tools.percentile_10.rst", "generated/libs.uow_tool_belt.general_tools.percentile_90.rst", "generated/libs.uow_tool_belt.general_tools.percentile_custom.rst", "generated/libs.uow_tool_belt.general_tools.permutation_test.rst", "generated/libs.uow_tool_belt.general_tools.permutation_test_only_diff.rst", "generated/libs.uow_tool_belt.general_tools.proportional.rst", "generated/libs.uow_tool_belt.general_tools.r_squared.rst", "generated/libs.uow_tool_belt.general_tools.read_paras.rst", "generated/libs.uow_tool_belt.general_tools.recursive_concat.rst", "generated/libs.uow_tool_belt.general_tools.recursive_minimization.rst", "generated/libs.uow_tool_belt.general_tools.remove_nan_coupled_lists.rst", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm.rst", "generated/libs.uow_tool_belt.general_tools.set_interval.rst", "generated/libs.uow_tool_belt.general_tools.shift_spatial_network.rst", "generated/libs.uow_tool_belt.general_tools.show_dic.rst", "generated/libs.uow_tool_belt.general_tools.silence.rst", "generated/libs.uow_tool_belt.general_tools.simple_color_map_function.rst", "generated/libs.uow_tool_belt.general_tools.simple_colormap_object.rst", "generated/libs.uow_tool_belt.general_tools.sol_Bs.rst", "generated/libs.uow_tool_belt.general_tools.sort_lists.rst", "generated/libs.uow_tool_belt.general_tools.sort_paired_values.rst", "generated/libs.uow_tool_belt.general_tools.spread_integer.rst", "generated/libs.uow_tool_belt.general_tools.ssh_client_connection.rst", "generated/libs.uow_tool_belt.general_tools.ssh_copy.rst", "generated/libs.uow_tool_belt.general_tools.ssh_tunnel_connection.rst", "generated/libs.uow_tool_belt.general_tools.starmap_with_kwargs.rst", "generated/libs.uow_tool_belt.general_tools.strip_string.rst", "generated/libs.uow_tool_belt.general_tools.timeit.rst", "generated/libs.uow_tool_belt.general_tools.weight_avg.rst", "generated/libs.uow_tool_belt.general_tools.write_on_file.rst", "generated/libs.uow_tool_belt.general_tools.yes.rst", "generated/libs.uow_tool_belt.logging.rst", "generated/libs.uow_tool_belt.network_tools.rst", "generated/libs.uow_tool_belt.plot_tools.rst", "generated/libs.uow_tool_belt.plot_tools.bar_plot_template.rst", "generated/libs.uow_tool_belt.plot_tools.savefig.rst", "generated/libs.uow_tool_belt.trajectory_tools.rst", "generated/libs.uow_tool_belt.trajectory_tools.compute_ab.rst", "generated/libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory.rst", "generated/libs.uow_tool_belt.trajectory_tools.detect_toc_tod.rst", "generated/libs.uow_tool_belt.trajectory_tools.plot_traj.rst", "generated/mercury.rst", "generated/mercury.manual_bool_cast.rst", "generated/modules.rst", "generated/modules.Auction.rst", "generated/modules.Auction.Auction.rst", "generated/modules.Auction.module_definition.rst", "generated/modules.Auction.paras_Auction.rst", "generated/modules.CM.rst", "generated/modules.CM.CM.rst", "generated/modules.CM.CM.compute_adequate_default_parameters.rst", "generated/modules.CM.CM.get_metric.rst", "generated/modules.CM.CM.make_hotspot_decision_CM.rst", "generated/modules.CM.CM.on_finalise_CM.rst", "generated/modules.CM.CM.on_init_AOC.rst", "generated/modules.CM.CM.on_prepare_CM.rst", "generated/modules.CM.module_definition.rst", "generated/modules.CM.paras_CM.rst", "generated/modules.FAC.rst", "generated/modules.FAC.FAC_FIFO_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.build_arrival_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.update_arrival_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time.rst", "generated/modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue.rst", "generated/modules.FAC.FAC_total_cost.rst", "generated/modules.FAC.FAC_total_cost.compute_cost_slots_total.rst", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times.rst", "generated/modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs.rst", "generated/modules.FAC.FAC_total_cost.request_cost_delay_function.rst", "generated/modules.FAC.FAC_total_cost.wait_for_cost_delay_function.rst", "generated/modules.FAC.FAC_total_delay.rst", "generated/modules.FAC.FAC_total_delay.compute_total_delay_slots.rst", "generated/modules.FAC.FAC_total_delay.request_time_propagate_delay.rst", "generated/modules.FAC.FAC_total_delay.wait_for_propagation_delay_time.rst", "generated/modules.FAC.module_definition.rst", "generated/modules.FP.rst", "generated/modules.FP.FP_L1.rst", "generated/modules.FP.FP_L1.consider_flight_swap_FP1.rst", "generated/modules.FP.FP_L2.rst", "generated/modules.FP.FP_L2.consider_flight_swap_FP2.rst", "generated/modules.FP.module_definition.rst", "generated/modules.HMI_HOTSPOT.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.rst", "generated/modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient.rst", "generated/modules.HMI_HOTSPOT.HMI_server.rst", "generated/modules.HMI_HOTSPOT.HMI_server.MercuryServer.rst", "generated/modules.HMI_HOTSPOT.HMI_server.main.rst", "generated/modules.HMI_HOTSPOT.client_test.rst", "generated/modules.HMI_HOTSPOT.client_test.Client.rst", "generated/modules.HMI_HOTSPOT.client_test2.rst", "generated/modules.HMI_HOTSPOT.client_test2.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi2.rst", "generated/modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI.rst", "generated/modules.HMI_HOTSPOT.client_test_mercury.rst", "generated/modules.HMI_HOTSPOT.client_test_mercury.ClientMercury.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.rst", "generated/modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP.rst", "generated/modules.HMI_HOTSPOT.module_definition.rst", "generated/modules.HMI_HOTSPOT.paras_HMI_FP_SEL.rst", "generated/modules.HMI_HOTSPOT.paras_HMI_HOTSPOT.rst", "generated/modules.TA.rst", "generated/modules.TA.TA_L1.rst", "generated/modules.TA.TA_L1.consider_waiting_pax_TA1.rst", "generated/modules.TA.TA_L1.cost_index_assessment_TA1.rst", "generated/modules.TA.TA_L1.wait_for_toc_reached_message_TA1.rst", "generated/modules.TA.TA_L2.rst", "generated/modules.TA.TA_L2.consider_waiting_pax_TA2.rst", "generated/modules.TA.TA_L2.cost_index_assessment_TA2.rst", "generated/modules.TA.TA_L2.wait_for_toc_reached_message_TA2.rst", "generated/modules.TA.module_definition.rst", "generated/modules.nostromo_EAMAN.rst", "generated/modules.nostromo_EAMAN.module_definition.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.get_p.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.rescale.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW.rst", "generated/modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.DummyFile.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.NoSolution.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.clock_time.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced.rst", "generated/modules.nostromo_EAMAN.optimiser_advanced.silence.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.rst", "generated/modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline.rst", "index.rst"], "titles": ["Agents", "Data Input", "Events", "Examples", "GUI", "Manual", "Modules", "Overview of Mercury", "Quickstart", "References", "About", "API", "CLI example", "agents", "agents.agent_base", "agents.agent_base.Agent", "agents.agent_base.Role", "agents.airline_operating_centre", "agents.airline_operating_centre.AirlineFlightPlanner", "agents.airline_operating_centre.AirlineOperatingCentre", "agents.airline_operating_centre.AirlinePaxHandler", "agents.airline_operating_centre.DynamicCostIndexComputer", "agents.airline_operating_centre.FlightPlanSelector", "agents.airline_operating_centre.PassengerReallocation", "agents.airline_operating_centre.TurnaroundOperations", "agents.aman", "agents.aman.AMAN", "agents.aman.ArrivalCancellationHandler", "agents.aman.ArrivalQueuePlannedUpdater", "agents.aman.ArrivalTacticalProvider", "agents.aman.FlightInAMANHandler", "agents.aman.SlotAssigner", "agents.aman.StrategicArrivalQueueBuilder", "agents.commodities", "agents.commodities.aircraft", "agents.commodities.aircraft.Aircraft", "agents.commodities.alliance", "agents.commodities.alliance.Alliance", "agents.commodities.arrival_slot", "agents.commodities.arrival_slot.ArrivalSlot", "agents.commodities.atfm_delay", "agents.commodities.atfm_delay.ATFMDelay", "agents.commodities.atfm_regulation", "agents.commodities.atfm_regulation.ATFMBooker", "agents.commodities.atfm_regulation.ATFMRegulation", "agents.commodities.central_registry", "agents.commodities.central_registry.CentralRegistry", "agents.commodities.debug_flights", "agents.commodities.flight_plan", "agents.commodities.flight_plan.FlightPlan", "agents.commodities.flight_plan.FlightPlanPoint", "agents.commodities.flight_plan.build_proj", "agents.commodities.pax_itinerary_group", "agents.commodities.pax_itinerary_group.PaxItineraryGroup", "agents.commodities.pax_itinerary_group.func", "agents.commodities.route", "agents.commodities.route.Route", "agents.commodities.route.RoutePoint", "agents.commodities.slot_queue", "agents.commodities.slot_queue.CapacityPeriod", "agents.commodities.slot_queue.Slot", "agents.commodities.slot_queue.SlotQueue", "agents.commodities.slot_queue_eaman", "agents.commodities.slot_queue_eaman.EAMANSlot", "agents.commodities.slot_queue_eaman.EAMANSlotQueue", "agents.dman", "agents.dman.DMAN", "agents.dman.DepartureCancellationHandler", "agents.dman.DepartureQueueUpdater", "agents.dman.DepartureSlotProvider", "agents.dman.StrategicDepartureQueueBuilder", "agents.eaman", "agents.eaman.ArrivalPlannerProvider", "agents.eaman.ArrivalQueuePlannedUpdaterE", "agents.eaman.EAMAN", "agents.eaman.FlightInAMANHandlerE", "agents.flight", "agents.flight.AircraftDepartingHandler", "agents.flight.DepartureSlotRequester", "agents.flight.FPInfoProvider", "agents.flight.Flight", "agents.flight.FlightArrivalInformationProvider", "agents.flight.FlightPlanConstraintUpdater", "agents.flight.FlightPlanUpdater", "agents.flight.GroundArrivalHandler", "agents.flight.OperateTrajectory", "agents.flight.PotentialDelayRecoveryProvider", "agents.ground_airport", "agents.ground_airport.GroundAirport", "agents.ground_airport.GroundHandler", "agents.ground_airport.ProvideConnectingTime", "agents.ground_airport.TaxiInProvider", "agents.ground_airport.TaxiOutEstimator", "agents.ground_airport.TaxiOutProvider", "agents.network_manager", "agents.network_manager.HotspotManager", "agents.network_manager.NetworkManager", "agents.network_manager.NetworkManagerAcceptAndDisseminateFP", "agents.network_manager.NetworkManagerCancelFP", "agents.network_manager.NetworkManagerFlightPlanProcessing", "agents.radar", "agents.radar.DisseminateCancellationFlightPlan", "agents.radar.DisseminateFlightPlan", "agents.radar.DisseminateFlightPositionUpdate", "agents.radar.Radar", "agents.radar.RadarAugmentFlightPlan", "agents.seed", "core", "core.delivery_system", "core.delivery_system.Letter", "core.delivery_system.LetterBox", "core.delivery_system.Postman", "core.module_management", "core.module_management.check_incompatibilities", "core.module_management.find_actual_module_name", "core.module_management.get_all_modules", "core.module_management.get_module_paras", "core.module_management.load_mercury_module", "core.parametriser", "core.parametriser.Parametriser", "core.parametriser.ParametriserCapacity", "core.parametriser.ParametriserSelector", "core.parametriser.ParametriserStandard", "core.read_config", "core.read_config.add_output_process", "core.read_config.find_paras_categories", "core.read_config.flatten_paras_dict", "core.read_config.read_mercury_config", "core.read_config.read_scenario_config", "core.read_config.read_toml", "core.read_config.transform_conf_paras", "core.read_config.unflatten_profiles", "core.read_config.unfold_paras_dict", "core.read_config.update_scenario_paras_based_on_case_study", "core.results_aggregator", "core.results_aggregator.ResultAggregatorAdvanced", "core.results_aggregator.ResultsAggregator", "core.results_aggregator.ResultsAggregatorSelector", "core.results_aggregator.ResultsAggregatorSimple", "core.results_aggregator.ResultsAggregatorSimpleReduced", "core.scenario_loader", "core.scenario_loader.ScenarioLoader", "core.scenario_loader.ScenarioLoaderSelector", "core.scenario_loader.ScenarioLoaderSimple", "core.scenario_loader.ScenarioLoaderStandard", "core.scenario_loader.ScenarioLoaderStandardLocal", "core.simulation_manager", "core.simulation_manager.Mercury", "core.simulation_manager.build_command", "core.simulation_manager.create_paras_file_from_dict", "core.world_builder", "core.world_builder.World", "core.world_builder.trace", "dashboard", "dashboard.mercury_gui", "libs", "libs.airspace_particularities", "libs.airspace_particularities.get_nas_airport", "libs.airspace_particularities.is_ATFM_AREA", "libs.airspace_particularities.is_ECAC", "libs.db_access_functions", "libs.db_access_functions.DataAccessBADA4", "libs.db_access_functions.DataAccessPerformance", "libs.db_access_functions.add_crco_to_flights_in_db", "libs.db_access_functions.get_information_routes_o_d_generated", "libs.db_access_functions.read_ATFM_at_airports", "libs.db_access_functions.read_ATFM_at_airports_days", "libs.db_access_functions.read_ATFM_at_airports_manual", "libs.db_access_functions.read_ATFM_at_airports_old", "libs.db_access_functions.read_MCT", "libs.db_access_functions.read_airlines_data", "libs.db_access_functions.read_airport_coords", "libs.db_access_functions.read_airports_curfew_data", "libs.db_access_functions.read_airports_data", "libs.db_access_functions.read_airports_modif_data", "libs.db_access_functions.read_airspace_static", "libs.db_access_functions.read_all_regulation_days", "libs.db_access_functions.read_compensation_data", "libs.db_access_functions.read_coord_trajectory_route", "libs.db_access_functions.read_coord_trajectory_route_based_on_id", "libs.db_access_functions.read_countries_ATFM_NAS", "libs.db_access_functions.read_crco", "libs.db_access_functions.read_crco_charges", "libs.db_access_functions.read_dict_ac_bada_code_ac_model", "libs.db_access_functions.read_dict_ac_type_wtc", "libs.db_access_functions.read_dict_fp_pool_ids", "libs.db_access_functions.read_doc_data", "libs.db_access_functions.read_eamans_data", "libs.db_access_functions.read_estimated_avg_costs_curfews", "libs.db_access_functions.read_extra_cruise_if_dci", "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco", "libs.db_access_functions.read_flight_schedules", "libs.db_access_functions.read_flight_schedules2", "libs.db_access_functions.read_flight_set", "libs.db_access_functions.read_flight_uncertainty", "libs.db_access_functions.read_fp_pool", "libs.db_access_functions.read_fp_pool_missing", "libs.db_access_functions.read_fp_routes_without_crco", "libs.db_access_functions.read_iedf_atfm", "libs.db_access_functions.read_iedf_wind_dict", "libs.db_access_functions.read_itineraries_data", "libs.db_access_functions.read_nas_route_pool", "libs.db_access_functions.read_nas_route_pool_static_o_d", "libs.db_access_functions.read_non_pax_cost_data", "libs.db_access_functions.read_non_pax_cost_fit_data", "libs.db_access_functions.read_nonpax_cost_curfews", "libs.db_access_functions.read_od_in_historic_od_computed_pool", "libs.db_access_functions.read_orig_destination_via_intermediate_shortest", "libs.db_access_functions.read_passenger_flows", "libs.db_access_functions.read_passenger_options", "libs.db_access_functions.read_perc_min_perc_max_regulations_days", "libs.db_access_functions.read_prob_atfm", "libs.db_access_functions.read_regulation_days_at_an_airport", "libs.db_access_functions.read_route_pool", "libs.db_access_functions.read_route_pool_o_d_generated", "libs.db_access_functions.read_route_pool_static", "libs.db_access_functions.read_scenario", "libs.db_access_functions.read_scenario_paras", "libs.db_access_functions.read_schedules", "libs.db_access_functions.read_seed", "libs.db_access_functions.read_soft_cost_date", "libs.db_access_functions.read_trajectories", "libs.db_access_functions.read_trajectories_dataframe", "libs.db_access_functions.read_trajectories_ids", "libs.db_access_functions.read_trajectories_missing", "libs.db_access_functions.read_trajectories_missing_in_interval", "libs.db_access_functions.read_trajectories_options", "libs.db_access_functions.read_trajectories_pool", "libs.db_access_functions.read_turnaround_data", "libs.db_access_functions.save_trajectories_pool", "libs.db_access_functions.save_trajectories_segments", "libs.input_manager", "libs.input_manager.Input_manager", "libs.input_manager.filter_df", "libs.input_manager.filter_sql", "libs.input_manager.read_data_from_dict", "libs.input_manager.write_toml", "libs.other_tools", "libs.other_tools.FlightDummy", "libs.other_tools.SlotDummy", "libs.other_tools.allocation_from_flights", "libs.other_tools.clone_pax", "libs.other_tools.compatible_slots", "libs.other_tools.compute_FPFS_allocation", "libs.other_tools.distance_func", "libs.other_tools.flight_str", "libs.performance_trajectory", "libs.performance_trajectory.ac_performances", "libs.performance_trajectory.ac_performances.AircraftPerformance", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet", "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP", "libs.performance_trajectory.standard_atmosphere", "libs.performance_trajectory.standard_atmosphere.density", "libs.performance_trajectory.standard_atmosphere.pressure", "libs.performance_trajectory.standard_atmosphere.sound_speed", "libs.performance_trajectory.standard_atmosphere.temperature", "libs.performance_trajectory.trajectory", "libs.performance_trajectory.trajectory.Trajectory", "libs.performance_trajectory.trajectory.TrajectoryComponent", "libs.performance_trajectory.trajectory.TrajectorySegment", "libs.performance_trajectory.unit_conversions", "libs.performance_trajectory.unit_conversions.cas2tas", "libs.performance_trajectory.unit_conversions.km2kt", "libs.performance_trajectory.unit_conversions.km2m", "libs.performance_trajectory.unit_conversions.kt2m", "libs.performance_trajectory.unit_conversions.m2kt", "libs.result_manager", "libs.result_manager.Result_manager", "libs.result_tools", "libs.result_tools.binarise", "libs.result_tools.build_aligned_pax_flight_df", "libs.result_tools.build_single_iteration_df", "libs.result_tools.clone_pax", "libs.result_tools.compute_derived_metrics_hist_sim", "libs.result_tools.compute_derived_metrics_historical", "libs.result_tools.compute_derived_metrics_pax_generic", "libs.result_tools.compute_derived_metrics_simulations", "libs.result_tools.compute_metrics_flights", "libs.result_tools.compute_metrics_pax", "libs.result_tools.find_destination_generic", "libs.result_tools.find_origin_generic", "libs.result_tools.get_historical_flights", "libs.result_tools.get_pax_schedules", "libs.result_tools.merge_hist_sim", "libs.result_tools.merge_pax_flights", "libs.result_tools.produce_hist_sim_df", "libs.result_tools.produce_historical_flight_pax_df", "libs.uow_tool_belt", "libs.uow_tool_belt.DTW", "libs.uow_tool_belt.DTW.dtw", "libs.uow_tool_belt.DTW.dtw_path", "libs.uow_tool_belt.airspace_particularities", "libs.uow_tool_belt.airspace_particularities.get_nas_airport", "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA", "libs.uow_tool_belt.airspace_particularities.is_ECAC", "libs.uow_tool_belt.connection_tools", "libs.uow_tool_belt.connection_tools.EmptyConnection", "libs.uow_tool_belt.connection_tools.create_indexes_in_table", "libs.uow_tool_belt.connection_tools.do_query", "libs.uow_tool_belt.connection_tools.extract_ssh_parameters", "libs.uow_tool_belt.connection_tools.file_connection", "libs.uow_tool_belt.connection_tools.generic_connection", "libs.uow_tool_belt.connection_tools.load_data_infile", "libs.uow_tool_belt.connection_tools.mysql_connection", "libs.uow_tool_belt.connection_tools.parquet_connection", "libs.uow_tool_belt.connection_tools.read_cred", "libs.uow_tool_belt.connection_tools.read_csv", "libs.uow_tool_belt.connection_tools.read_data", "libs.uow_tool_belt.connection_tools.read_mysql", "libs.uow_tool_belt.connection_tools.read_parquet", "libs.uow_tool_belt.connection_tools.read_pickle", "libs.uow_tool_belt.connection_tools.run_mysql_query", "libs.uow_tool_belt.connection_tools.write_csv", "libs.uow_tool_belt.connection_tools.write_data", "libs.uow_tool_belt.connection_tools.write_mysql", "libs.uow_tool_belt.connection_tools.write_pickle", "libs.uow_tool_belt.general_tools", "libs.uow_tool_belt.general_tools.A_B", "libs.uow_tool_belt.general_tools.DummyFile", "libs.uow_tool_belt.general_tools.HiddenPrints", "libs.uow_tool_belt.general_tools.Paras", "libs.uow_tool_belt.general_tools.TwoWayDict", "libs.uow_tool_belt.general_tools.add_dicts", "libs.uow_tool_belt.general_tools.alert_print", "libs.uow_tool_belt.general_tools.alphabet", "libs.uow_tool_belt.general_tools.apply_args_and_kwargs", "libs.uow_tool_belt.general_tools.average_on_downsampled_interval", "libs.uow_tool_belt.general_tools.average_on_intervals", "libs.uow_tool_belt.general_tools.average_on_quantiles", "libs.uow_tool_belt.general_tools.bootstrap_mean_test", "libs.uow_tool_belt.general_tools.bootstrap_test", "libs.uow_tool_belt.general_tools.build_col_print_func", "libs.uow_tool_belt.general_tools.build_step_bivariate_function", "libs.uow_tool_belt.general_tools.build_step_multi_valued_function", "libs.uow_tool_belt.general_tools.build_triangular", "libs.uow_tool_belt.general_tools.center_spatial_network", "libs.uow_tool_belt.general_tools.clock_time", "libs.uow_tool_belt.general_tools.compute_percentile_with_weight", "libs.uow_tool_belt.general_tools.counter", "libs.uow_tool_belt.general_tools.create_dir", "libs.uow_tool_belt.general_tools.dict_depth", "libs.uow_tool_belt.general_tools.distance_euclidean", "libs.uow_tool_belt.general_tools.fit", "libs.uow_tool_belt.general_tools.get_first_matching_element", "libs.uow_tool_belt.general_tools.gini", "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval", "libs.uow_tool_belt.general_tools.groupby_on_intervals", "libs.uow_tool_belt.general_tools.groupby_on_quantiles", "libs.uow_tool_belt.general_tools.haversine", "libs.uow_tool_belt.general_tools.haversine_old", "libs.uow_tool_belt.general_tools.hex_to_rgb", "libs.uow_tool_belt.general_tools.human_format", "libs.uow_tool_belt.general_tools.human_format_for_ticks", "libs.uow_tool_belt.general_tools.intermediate_point", "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm", "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm", "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm", "libs.uow_tool_belt.general_tools.inverted_edf", "libs.uow_tool_belt.general_tools.keep_time", "libs.uow_tool_belt.general_tools.loading", "libs.uow_tool_belt.general_tools.logging", "libs.uow_tool_belt.general_tools.loop", "libs.uow_tool_belt.general_tools.make_df_with_3_levels", "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick", "libs.uow_tool_belt.general_tools.make_nested_dict_from_df", "libs.uow_tool_belt.general_tools.mysql_server", "libs.uow_tool_belt.general_tools.parallelize", "libs.uow_tool_belt.general_tools.partial_corr", "libs.uow_tool_belt.general_tools.percentile_10", "libs.uow_tool_belt.general_tools.percentile_90", "libs.uow_tool_belt.general_tools.percentile_custom", "libs.uow_tool_belt.general_tools.permutation_test", "libs.uow_tool_belt.general_tools.permutation_test_only_diff", "libs.uow_tool_belt.general_tools.proportional", "libs.uow_tool_belt.general_tools.r_squared", "libs.uow_tool_belt.general_tools.read_paras", "libs.uow_tool_belt.general_tools.recursive_concat", "libs.uow_tool_belt.general_tools.recursive_minimization", "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists", "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm", "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm", "libs.uow_tool_belt.general_tools.set_interval", "libs.uow_tool_belt.general_tools.shift_spatial_network", "libs.uow_tool_belt.general_tools.show_dic", "libs.uow_tool_belt.general_tools.silence", "libs.uow_tool_belt.general_tools.simple_color_map_function", "libs.uow_tool_belt.general_tools.simple_colormap_object", "libs.uow_tool_belt.general_tools.sol_Bs", "libs.uow_tool_belt.general_tools.sort_lists", "libs.uow_tool_belt.general_tools.sort_paired_values", "libs.uow_tool_belt.general_tools.spread_integer", "libs.uow_tool_belt.general_tools.ssh_client_connection", "libs.uow_tool_belt.general_tools.ssh_copy", "libs.uow_tool_belt.general_tools.ssh_tunnel_connection", "libs.uow_tool_belt.general_tools.starmap_with_kwargs", "libs.uow_tool_belt.general_tools.strip_string", "libs.uow_tool_belt.general_tools.timeit", "libs.uow_tool_belt.general_tools.weight_avg", "libs.uow_tool_belt.general_tools.write_on_file", "libs.uow_tool_belt.general_tools.yes", "libs.uow_tool_belt.logging", "libs.uow_tool_belt.network_tools", "libs.uow_tool_belt.plot_tools", "libs.uow_tool_belt.plot_tools.bar_plot_template", "libs.uow_tool_belt.plot_tools.savefig", "libs.uow_tool_belt.trajectory_tools", "libs.uow_tool_belt.trajectory_tools.compute_ab", "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory", "libs.uow_tool_belt.trajectory_tools.detect_toc_tod", "libs.uow_tool_belt.trajectory_tools.plot_traj", "mercury", "mercury.manual_bool_cast", "modules", "modules.Auction", "modules.Auction.Auction", "modules.Auction.module_definition", "modules.Auction.paras_Auction", "modules.CM", "modules.CM.CM", "modules.CM.CM.compute_adequate_default_parameters", "modules.CM.CM.get_metric", "modules.CM.CM.make_hotspot_decision_CM", "modules.CM.CM.on_finalise_CM", "modules.CM.CM.on_init_AOC", "modules.CM.CM.on_prepare_CM", "modules.CM.module_definition", "modules.CM.paras_CM", "modules.FAC", "modules.FAC.FAC_FIFO_queue", "modules.FAC.FAC_FIFO_queue.build_arrival_queue", "modules.FAC.FAC_FIFO_queue.update_arrival_queue", "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue", "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time", "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue", "modules.FAC.FAC_total_cost", "modules.FAC.FAC_total_cost.compute_cost_slots_total", "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times", "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs", "modules.FAC.FAC_total_cost.request_cost_delay_function", "modules.FAC.FAC_total_cost.wait_for_cost_delay_function", "modules.FAC.FAC_total_delay", "modules.FAC.FAC_total_delay.compute_total_delay_slots", "modules.FAC.FAC_total_delay.request_time_propagate_delay", "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time", "modules.FAC.module_definition", "modules.FP", "modules.FP.FP_L1", "modules.FP.FP_L1.consider_flight_swap_FP1", "modules.FP.FP_L2", "modules.FP.FP_L2.consider_flight_swap_FP2", "modules.FP.module_definition", "modules.HMI_HOTSPOT", "modules.HMI_HOTSPOT.HMI_FP_SEL", "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi", "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer", "modules.HMI_HOTSPOT.HMI_HOTSPOT", "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision", "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages", "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3", "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient", "modules.HMI_HOTSPOT.HMI_server", "modules.HMI_HOTSPOT.HMI_server.MercuryServer", "modules.HMI_HOTSPOT.HMI_server.main", "modules.HMI_HOTSPOT.client_test", "modules.HMI_HOTSPOT.client_test.Client", "modules.HMI_HOTSPOT.client_test2", "modules.HMI_HOTSPOT.client_test2.ClientHMI", "modules.HMI_HOTSPOT.client_test_hmi", "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI", "modules.HMI_HOTSPOT.client_test_hmi2", "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI", "modules.HMI_HOTSPOT.client_test_mercury", "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient", "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP", "modules.HMI_HOTSPOT.module_definition", "modules.HMI_HOTSPOT.paras_HMI_FP_SEL", "modules.HMI_HOTSPOT.paras_HMI_HOTSPOT", "modules.TA", "modules.TA.TA_L1", "modules.TA.TA_L1.consider_waiting_pax_TA1", "modules.TA.TA_L1.cost_index_assessment_TA1", "modules.TA.TA_L1.wait_for_toc_reached_message_TA1", "modules.TA.TA_L2", "modules.TA.TA_L2.consider_waiting_pax_TA2", "modules.TA.TA_L2.cost_index_assessment_TA2", "modules.TA.TA_L2.wait_for_toc_reached_message_TA2", "modules.TA.module_definition", "modules.nostromo_EAMAN", "modules.nostromo_EAMAN.module_definition", "modules.nostromo_EAMAN.nostromo_EAMAN", "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices", "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights", "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation", "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen", "modules.nostromo_EAMAN.nostromo_EAMAN.get_p", "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon", "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing", "modules.nostromo_EAMAN.nostromo_EAMAN.on_init", "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent", "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced", "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline", "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages", "modules.nostromo_EAMAN.nostromo_EAMAN.rescale", "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function", "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request", "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW", "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information", "modules.nostromo_EAMAN.optimiser_advanced", "modules.nostromo_EAMAN.optimiser_advanced.DummyFile", "modules.nostromo_EAMAN.optimiser_advanced.NoSolution", "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable", "modules.nostromo_EAMAN.optimiser_advanced.clock_time", "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element", "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced", "modules.nostromo_EAMAN.optimiser_advanced.silence", "modules.nostromo_EAMAN.optimiser_baseline", "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline", "modules.nostromo_EAMAN.optimiser_baseline_fast", "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline", "Mercury\u2019s documentation"], "terms": {"i": [5, 8, 10, 18, 19, 20, 21, 22, 23, 24, 28, 29, 32, 35, 37, 43, 44, 46, 49, 51, 53, 59, 61, 64, 66, 68, 69, 70, 72, 73, 78, 80, 81, 83, 84, 86, 88, 89, 95, 96, 99, 102, 104, 105, 106, 109, 111, 114, 122, 143, 144, 145, 147, 152, 161, 162, 248, 249, 250, 251, 255, 297, 301, 304, 305, 308, 309, 310, 312, 315, 321, 322, 330, 331, 339, 343, 344, 360, 361, 366, 368, 372, 387, 392, 402, 425, 495, 515, 541, 543, 550], "love": [], "hola": [], "api": 550, "index": [10, 19, 21, 59, 239, 291, 298, 315, 343, 550], "modul": [5, 10, 13, 15, 19, 22, 26, 33, 66, 72, 74, 80, 81, 88, 96, 104, 107, 112, 114, 116, 117, 153, 155, 246, 288, 317, 550], "search": 550, "page": 550, "core": [], "ar": [18, 19, 20, 23, 35, 37, 43, 46, 49, 51, 59, 66, 77, 81, 82, 101, 103, 109, 111, 112, 116, 125, 147, 161, 162, 242, 248, 249, 250, 251, 297, 304, 309, 317, 321, 322, 331, 343, 353, 372, 380, 495], "add": [19, 49, 82, 91, 102, 111, 112, 248, 249, 250, 251, 323, 544], "ons": 112, "model": [8, 15, 16, 112, 147, 425], "chang": [18, 21, 44, 81, 83, 86, 112, 248, 249, 250, 251, 321], "its": [8, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 46, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105, 112, 117, 125, 152, 448], "behaviour": [88, 112], "thei": [18, 20, 46, 49, 51, 59, 103, 104, 112, 147], "declar": [112, 360], "name": [49, 50, 51, 112, 114, 116, 117, 125, 147, 195, 238, 308, 309, 314, 315, 340, 485, 487, 489, 491, 493], "should": [18, 19, 23, 24, 44, 46, 49, 59, 96, 102, 112, 114, 116, 147, 308, 309, 314, 317, 321, 343, 355, 360, 544], "contain": [49, 112, 248, 249, 250, 251, 368], "short": [18, 112], "descript": [18, 20, 21, 23, 24, 27, 28, 29, 30, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 105, 112], "file": [8, 19, 66, 80, 88, 104, 112, 114, 116, 129, 143, 144, 145, 147, 301, 302, 304, 305, 308, 310, 314, 317, 360, 376, 402, 550], "modifi": [8, 21, 44, 83, 104, 112, 122], "method": [15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 41, 43, 44, 46, 49, 50, 51, 53, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 112, 119, 120, 121, 122, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 151, 152, 161, 162, 232, 238, 239, 248, 249, 250, 251, 258, 259, 260, 268, 297, 319, 320, 321, 322, 323, 411, 474, 475, 477, 478, 480, 482, 485, 487, 489, 491, 493, 495, 496, 539], "function": [15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 48, 52, 59, 61, 64, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105, 112, 116, 123, 146, 150, 152, 156, 160, 231, 237, 248, 249, 250, 251, 252, 261, 269, 289, 290, 292, 296, 310, 312, 317, 321, 337, 343, 344, 352, 357, 358, 367, 382, 386, 387, 403, 406, 411, 419, 429, 435, 441, 447, 449, 453, 462, 481, 501, 505, 512, 538, 542, 543, 546, 548], "list_modul": 113, "module_nam": [114, 116, 117], "becaus": [51, 114, 248, 249, 250, 251, 402, 424], "can": [8, 10, 18, 19, 21, 35, 49, 66, 81, 83, 86, 102, 104, 114, 116, 117, 125, 146, 147, 248, 249, 250, 251, 301, 304, 305, 308, 309, 343, 360, 361, 411, 424, 550], "have": [8, 18, 19, 20, 23, 49, 61, 64, 66, 81, 83, 91, 111, 114, 125, 248, 249, 250, 251, 290, 308, 314, 330, 343, 360, 373, 424, 515, 544], "differ": [18, 22, 49, 88, 106, 114, 125, 248, 249, 250, 251, 330, 331, 368, 372, 373, 519], "flavour": [114, 116, 117], "doe": [22, 37, 49, 61, 64, 89, 109, 114, 151, 248, 249, 250, 251, 297, 321, 322, 424, 495], "alwai": [21, 114, 147, 425], "match": [114, 147, 290, 291, 309, 315, 344, 543, 544], "definin": 114, "For": [18, 19, 114, 122, 146, 176, 212, 248, 249, 250, 251], "instanc": [8, 18, 114, 147, 152, 248, 249, 250, 251], "fp": [18, 19, 22, 78, 79, 83, 96, 99, 101, 102, 104, 105, 114, 116, 117, 195], "defin": [60, 63, 114, 116, 125, 248, 249, 250, 251, 314], "two": [19, 88, 114, 290, 330, 331, 349, 350, 353, 360, 372, 373, 386], "l1": [114, 116, 117], "l2": 114, "mai": [8, 114], "chosen": 114, "from": [8, 15, 16, 20, 21, 22, 23, 28, 30, 35, 37, 46, 50, 59, 66, 73, 75, 79, 86, 93, 96, 109, 114, 116, 126, 144, 145, 195, 248, 249, 250, 251, 297, 309, 314, 321, 322, 331, 345, 358, 360, 372, 425, 495], "like": [8, 37, 109, 114, 297, 310, 321, 322, 368, 495], "thi": [5, 8, 18, 19, 20, 22, 23, 24, 37, 43, 44, 46, 49, 53, 59, 61, 64, 66, 69, 80, 81, 82, 83, 84, 88, 96, 99, 104, 105, 109, 111, 114, 116, 125, 126, 143, 144, 145, 147, 151, 176, 212, 242, 248, 249, 250, 251, 297, 302, 308, 310, 312, 317, 321, 322, 331, 360, 387, 392, 402, 411, 424, 425, 495, 515, 550], "In": [8, 18, 37, 86, 91, 109, 111, 114, 161, 162, 248, 249, 250, 251, 297, 321, 322, 330, 495], "case": [8, 18, 22, 24, 37, 59, 83, 99, 109, 114, 147, 248, 249, 250, 251, 297, 321, 322, 360, 361, 373, 495], "correspond": [18, 37, 96, 109, 114, 248, 249, 250, 251, 297, 301, 304, 305, 321, 322, 495], "fp_l1": 114, "py": [3, 8, 12, 114, 143, 147, 301, 304, 305], "note": [8, 18, 19, 20, 23, 24, 32, 46, 49, 59, 61, 64, 81, 83, 91, 96, 114, 126, 147, 248, 249, 250, 251, 308, 321, 331, 343, 355, 375, 392], "ha": [8, 10, 22, 23, 24, 27, 30, 37, 67, 75, 83, 84, 86, 96, 101, 103, 109, 114, 297, 321, 322, 344, 425, 495, 543], "specifi": [37, 59, 96, 109, 114, 144, 145, 297, 308, 321, 322, 349, 350, 495], "string": [114, 116, 117, 301, 304, 305, 308, 309, 314, 315, 321, 360, 412], "form": [114, 116, 117, 145], "name_bas": 114, "base": [15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 41, 43, 44, 46, 49, 50, 51, 53, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 114, 119, 120, 121, 122, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 151, 161, 162, 232, 238, 239, 248, 249, 250, 251, 258, 259, 260, 268, 297, 308, 309, 315, 319, 320, 321, 322, 474, 475, 477, 478, 480, 482, 485, 487, 489, 491, 493, 495, 496, 539], "e": [18, 19, 22, 28, 37, 51, 73, 80, 81, 83, 84, 88, 101, 102, 104, 105, 106, 109, 114, 248, 249, 250, 251, 297, 312, 321, 322, 367, 495, 541], "cm": [114, 116, 117, 335], "name_fil": [114, 399], "which": [15, 16, 18, 19, 22, 37, 49, 70, 81, 82, 95, 104, 114, 125, 161, 162, 248, 249, 250, 251, 314, 321, 360, 361], "definit": [18, 114], "li": [114, 382], "path_modul": [116, 117], "none": [15, 18, 19, 23, 26, 35, 37, 39, 41, 44, 46, 49, 50, 53, 56, 59, 60, 61, 63, 64, 66, 74, 88, 95, 96, 104, 106, 109, 111, 116, 117, 138, 139, 141, 143, 144, 145, 147, 151, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 183, 186, 187, 188, 189, 194, 198, 199, 200, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 228, 232, 238, 239, 249, 250, 251, 260, 268, 272, 282, 283, 287, 290, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 333, 334, 337, 338, 343, 344, 345, 359, 362, 364, 366, 367, 376, 382, 392, 398, 399, 410, 430, 495, 519, 542, 543, 544, 547, 549], "us": [10, 18, 19, 21, 22, 23, 32, 35, 43, 46, 49, 51, 53, 60, 63, 66, 70, 83, 84, 86, 95, 99, 106, 111, 116, 117, 126, 143, 144, 145, 147, 248, 249, 250, 251, 253, 254, 255, 256, 262, 309, 312, 315, 317, 321, 331, 343, 358, 360, 372, 373, 387, 392, 411, 424, 550], "get": [8, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 37, 43, 59, 61, 64, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 109, 116, 248, 249, 250, 251, 297, 309, 314, 321, 322, 495], "all": [8, 10, 15, 16, 18, 19, 20, 37, 46, 50, 96, 109, 116, 122, 125, 143, 144, 145, 147, 151, 176, 212, 248, 249, 250, 251, 297, 304, 317, 321, 322, 495, 544], "valu": [19, 37, 102, 106, 109, 116, 125, 147, 248, 249, 250, 251, 290, 297, 308, 309, 321, 322, 323, 331, 343, 351, 353, 358, 375, 382, 389, 495], "given": [18, 19, 20, 21, 22, 37, 81, 82, 83, 86, 89, 106, 109, 116, 145, 176, 212, 248, 249, 250, 251, 255, 262, 290, 291, 297, 309, 315, 321, 322, 331, 344, 355, 356, 366, 392, 495, 515, 543], "toml": [116, 127], "format": [116, 126, 144, 308, 310, 352], "under": [8, 10, 66, 116], "para": [15, 26, 74, 116, 125, 126, 144, 151, 362], "flag": 116, "posix": [116, 117], "path": [116, 117, 147, 236, 307, 311, 313, 316, 360], "without": [19, 46, 49, 83, 116, 117, 424], "see": [22, 59, 116, 117, 147], "find_actual_module_nam": [116, 117], "more": [18, 21, 116, 117, 248, 249, 250, 251, 309, 321, 345], "detail": [116, 117, 248, 249, 250, 251], "module_para": 116, "dict": [37, 88, 109, 116, 125, 147, 297, 321, 322, 495], "kei": [19, 37, 88, 109, 116, 125, 147, 235, 297, 308, 309, 314, 315, 321, 322, 359, 495], "warn": [18, 20, 116, 125], "take": [19, 22, 69, 85, 89, 102, 116, 290, 321], "first": [19, 20, 21, 28, 37, 49, 68, 73, 109, 116, 125, 144, 145, 297, 321, 322, 343, 344, 495, 543], "start": [8, 78, 116, 248, 249, 250, 251, 339], "paras_": 116, "teh": [], "todo": [19, 49, 60, 61, 63, 64, 116, 147, 249, 250, 251, 315, 331, 360, 544], "fix": [18, 29, 106, 116, 147], "load": [15, 19, 26, 66, 74, 80, 88, 96, 104, 117, 143, 144, 145], "mercuri": [3, 5, 10, 12, 15, 16, 117], "cred": 117, "attribut": [15, 19, 26, 35, 43, 66, 74, 80, 88, 96, 104, 111, 117, 144, 145, 151, 248, 249, 250, 251, 258, 259, 260, 309, 321, 424], "__getattribute__": 117, "attribute_nam": 117, "mercury_conf": [124, 130, 131], "paras_dict": [125, 149], "invert": [125, 358], "dictionari": [19, 37, 102, 109, 125, 126, 132, 161, 162, 235, 248, 249, 250, 251, 297, 308, 314, 321, 322, 495, 541], "allow": [21, 125, 248, 249, 250, 251, 310], "find": [125, 382], "categori": [89, 125], "particular": 125, "live": [18, 125], "thu": [29, 125], "henc": 125, "you": [8, 18, 59, 125, 360, 373, 550], "know": [59, 125], "do": [19, 21, 22, 31, 46, 61, 64, 77, 84, 89, 104, 125, 248, 249, 250, 251, 309, 312, 315, 387], "cat_dict": 125, "value_para": 125, "value_nam": 125, "also": [8, 10, 21, 49, 81, 96, 104, 125], "easili": 125, "look": 125, "assum": [18, 19, 20, 46, 49, 61, 64, 83, 111, 122, 125, 242, 308, 380, 381, 425], "THAT": [21, 111, 125], "A": [21, 49, 50, 72, 79, 82, 125, 367], "across": [104, 125], "level": [19, 21, 125, 126, 146, 248, 249, 250, 251, 264, 265, 266, 321, 362], "second": [19, 125, 144, 145, 321], "paras_unflatten": 126, "convert": [126, 263, 264, 265, 266], "paramet": [8, 18, 19, 49, 83, 114, 116, 117, 125, 126, 146, 147, 248, 249, 250, 251, 253, 254, 255, 256, 262, 263, 264, 265, 266, 304, 308, 309, 314, 315, 321, 335, 343, 356, 358, 367, 375, 376], "airports__sig_ct": 126, "0": [18, 21, 41, 49, 50, 51, 59, 64, 81, 88, 95, 122, 126, 193, 196, 208, 218, 224, 225, 248, 249, 250, 251, 258, 329, 330, 331, 333, 334, 335, 336, 339, 341, 343, 344, 348, 362, 366, 372, 373, 378, 380, 381, 383, 386, 387, 394, 407, 408, 485, 487, 489, 491, 493, 514, 515, 519, 543], "10": [8, 126, 248, 249, 250, 251, 327, 346, 362, 408, 515], "work": [126, 314, 382, 550], "onli": [18, 19, 21, 22, 23, 24, 32, 46, 49, 59, 83, 96, 126, 248, 249, 250, 251, 312, 314, 317, 373], "one": [18, 19, 21, 23, 49, 61, 64, 86, 96, 126, 248, 249, 250, 251, 290, 321, 331, 392, 425], "config_fil": 127, "config": 127, "mercury_config": 127, "return_paras_format": 127, "true": [15, 18, 20, 21, 26, 61, 64, 74, 83, 86, 127, 172, 195, 248, 249, 250, 251, 279, 290, 311, 313, 316, 330, 331, 332, 343, 352, 360, 372, 373, 385, 545], "case_study_id": 128, "scenario_id": [128, 191, 192, 208, 209, 219, 226], "input_path": 128, "data_path": [132, 235], "posixpath": 132, "scenario_para": 133, "case_study_para": 133, "architectur": 146, "iter": [3, 12, 37, 109, 146, 147, 151, 297, 321, 322, 343, 344, 367, 375, 424, 425, 495, 543], "scenario": [8, 146, 147, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 183, 186, 187, 188, 189, 194, 195, 196, 198, 200, 203, 204, 205, 210, 211, 216, 217, 218, 220, 224, 225, 227, 228, 308, 310], "same": [3, 12, 18, 21, 91, 145, 146, 248, 249, 250, 251, 330, 331, 344, 372, 425, 543], "last": [18, 19, 20, 37, 49, 53, 83, 109, 146, 290, 297, 321, 322, 343, 344, 495, 543], "hard": [19, 146], "reboot": 146, "simul": [32, 80, 85, 104, 106, 146, 147, 321, 376, 550], "everi": [146, 151], "n": [3, 12, 51, 146, 249, 250, 251, 327, 335, 346, 368, 371, 378, 391, 408, 515], "batch": 146, "within": [19, 59, 66, 72, 80, 83, 88, 104, 146], "parallelis": 146, "class": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 118, 119, 120, 121, 122, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 160, 161, 162, 231, 232, 237, 238, 239, 247, 248, 249, 250, 251, 257, 258, 259, 260, 267, 268, 296, 297, 317, 319, 320, 322, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 538, 539], "paras_simul": 147, "object": [8, 15, 16, 37, 39, 41, 44, 46, 49, 50, 53, 56, 57, 59, 60, 61, 109, 110, 111, 119, 121, 136, 137, 141, 142, 147, 151, 161, 162, 232, 238, 239, 248, 249, 250, 251, 259, 268, 291, 297, 309, 314, 315, 319, 320, 321, 322, 411, 474, 475, 477, 478, 480, 482, 485, 487, 489, 491, 493, 495, 496, 539], "__init__": [15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 41, 43, 44, 46, 49, 50, 53, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 119, 120, 121, 122, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 151, 161, 162, 232, 238, 239, 248, 249, 250, 251, 258, 259, 260, 268, 297, 319, 320, 321, 322, 474, 475, 477, 478, 480, 482, 485, 487, 489, 491, 493, 495, 496, 539], "build_ag": 147, "parametris": 147, "world": 147, "log_fil": [15, 19, 26, 66, 74, 80, 88, 104, 141, 143, 144, 145, 147, 151], "stream": [147, 361], "compute_path": 147, "n_iter": [147, 219, 272, 424], "info_scenario": [141, 143, 144, 145, 147, 151], "paras_scenario": [141, 143, 144, 145, 147, 151], "info_case_studi": 147, "comput": [18, 19, 20, 21, 24, 46, 77, 78, 79, 83, 84, 86, 99, 147, 248, 249, 250, 251, 253, 254, 255, 256, 290, 291, 321, 331, 360, 372, 541], "where": [19, 22, 28, 73, 82, 97, 147, 195, 198, 211, 314, 321, 343, 360, 382], "result": [8, 147, 248, 249, 250, 251, 309], "save": [78, 83, 147, 360], "either": [37, 66, 109, 147, 297, 308, 314, 315, 321, 322, 495], "databas": [144, 147, 302, 309, 310, 315, 366], "rel": [147, 321], "base_path": [147, 301, 305], "profil": [147, 272, 282, 283, 287, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "connect": [19, 20, 23, 46, 88, 90, 143, 144, 145, 147, 151, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 298, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 392], "run": [147, 550], "case_studi": 147, "paras_sc_fix": 147, "paras_sc_iter": 147, "arg": [19, 35, 43, 61, 64, 66, 78, 80, 88, 96, 104, 147, 148, 244, 321, 322, 324, 326, 353, 362, 367, 405], "results_aggreg": 147, "default": [21, 37, 51, 72, 81, 86, 95, 109, 147, 248, 249, 250, 251, 297, 315, 321, 322, 344, 360, 495, 543], "connection_read": 147, "connection_writ": 147, "main": [8, 66, 147], "entri": [22, 81, 82, 84, 85, 86, 147, 321], "point": [22, 28, 49, 50, 73, 81, 82, 84, 85, 86, 97, 102, 103, 104, 105, 147, 248, 249, 250, 251, 290, 308, 343, 349, 350, 375, 410, 424], "through": 147, "ask": [23, 66, 86, 147], "link": 147, "how": [20, 21, 23, 147, 248, 249, 250, 251, 313, 314, 315, 316, 360], "list": [8, 18, 19, 22, 23, 35, 43, 49, 53, 81, 147, 161, 162, 290, 291, 309, 315, 321, 343, 360, 367], "id": [3, 8, 12, 49, 147, 152, 195, 315], "folder": [8, 147], "input": [5, 8, 83, 147, 290, 291, 308, 314, 358, 367, 550], "studi": [8, 147], "iterated_paras_sc": 147, "swept": 147, "combin": 147, "addit": [147, 308, 314, 360], "argument": [8, 19, 147, 301, 304, 305, 308, 314, 321, 344, 411, 543], "configur": 147, "read": [8, 145, 147, 161, 162, 308, 309, 310, 360, 376], "data": [5, 8, 143, 144, 145, 147, 248, 249, 250, 251, 303, 308, 312, 313, 314, 315, 316, 360, 550], "connection_tool": 147, "write": [147, 314, 315], "resultsaggreg": [135, 138, 147], "lib": 147, "regist": [19, 32, 46, 66, 88, 96, 104, 147], "If": [18, 19, 20, 21, 28, 37, 46, 49, 59, 66, 68, 73, 83, 96, 106, 109, 147, 248, 249, 250, 251, 297, 308, 309, 315, 321, 322, 343, 344, 366, 367, 372, 392, 495, 543, 550], "aggreg": 147, "done": [18, 21, 22, 49, 66, 80, 82, 85, 147, 248, 249, 250, 251, 309, 317], "someth": [147, 304, 308, 309, 360], "even": [147, 424], "empti": [37, 109, 147, 297, 304, 321, 322, 344, 495, 543], "name_file_output": 149, "kwarg": [19, 35, 43, 49, 66, 78, 80, 88, 96, 104, 109, 244, 301, 302, 304, 305, 308, 314, 322, 324, 326, 367, 405, 495], "clear": [37, 109, 297, 321, 322, 495], "remov": [37, 49, 66, 96, 109, 297, 321, 322, 495], "item": [37, 109, 297, 321, 322, 344, 495, 543], "d": [8, 37, 109, 248, 249, 250, 251, 253, 291, 297, 321, 322, 341, 367, 409, 495, 515, 519], "copi": [8, 37, 50, 109, 297, 321, 322, 495], "shallow": [37, 109, 297, 321, 322, 495], "fromkei": [37, 109, 297, 321, 322, 495], "creat": [8, 23, 37, 66, 96, 105, 109, 111, 143, 151, 161, 162, 297, 304, 309, 315, 321, 322, 367, 495], "new": [8, 21, 37, 49, 96, 104, 105, 109, 143, 144, 145, 297, 321, 322, 495], "set": [8, 19, 37, 50, 66, 80, 81, 88, 104, 109, 248, 249, 250, 251, 297, 309, 321, 322, 495], "return": [18, 19, 22, 23, 37, 46, 81, 97, 99, 109, 114, 116, 117, 125, 147, 176, 212, 248, 249, 250, 251, 253, 254, 255, 256, 262, 263, 264, 265, 266, 290, 297, 308, 309, 312, 321, 322, 330, 335, 343, 344, 349, 350, 355, 356, 358, 361, 362, 368, 375, 392, 495, 543], "els": [35, 37, 109, 297, 321, 322, 495], "provid": [15, 16, 18, 22, 23, 28, 37, 44, 66, 69, 73, 79, 81, 83, 84, 86, 88, 89, 90, 91, 92, 93, 109, 248, 249, 250, 251, 297, 310, 321, 322, 495], "view": [37, 109, 297, 321, 322, 495], "": [8, 37, 49, 68, 83, 109, 195, 248, 249, 250, 251, 255, 262, 297, 315, 321, 322, 356, 396, 495], "pop": [37, 109, 297, 321, 322, 495], "k": [37, 54, 109, 249, 250, 251, 255, 256, 263, 297, 321, 322, 330, 331, 372, 373, 387, 495], "v": [37, 109, 297, 321, 322, 495, 515], "found": [8, 10, 37, 109, 297, 321, 322, 344, 495, 543], "otherwis": [18, 37, 59, 86, 109, 297, 308, 314, 321, 322, 495], "rais": [8, 37, 109, 297, 321, 322, 344, 495, 543], "keyerror": [37, 109, 297, 321, 322, 495], "popitem": [37, 109, 297, 321, 322, 495], "pair": [37, 109, 297, 321, 322, 368, 495], "2": [3, 12, 23, 37, 59, 77, 78, 83, 84, 109, 249, 250, 251, 297, 321, 322, 329, 335, 344, 348, 349, 350, 362, 408, 495, 519, 543], "tupl": [37, 109, 291, 297, 321, 322, 495], "lifo": [37, 109, 297, 321, 322, 495], "out": [21, 37, 69, 77, 78, 85, 88, 91, 92, 93, 109, 297, 321, 322, 495], "order": [18, 35, 37, 61, 64, 69, 91, 109, 195, 242, 297, 317, 321, 322, 495], "setdefault": [37, 109, 297, 321, 322, 495], "insert": [37, 109, 297, 321, 322, 495], "updat": [8, 18, 21, 22, 24, 27, 28, 37, 49, 61, 64, 66, 67, 68, 72, 73, 77, 78, 80, 82, 83, 84, 96, 103, 104, 105, 109, 297, 314, 315, 321, 322, 495], "f": [37, 109, 195, 248, 249, 250, 251, 290, 297, 321, 322, 367, 378, 393, 397, 495], "present": [37, 109, 297, 308, 321, 322, 360, 495, 519], "lack": [37, 109, 297, 321, 322, 495], "follow": [8, 18, 19, 23, 37, 109, 144, 145, 248, 249, 250, 251, 297, 321, 322, 425, 495], "an": [8, 18, 19, 22, 32, 37, 50, 61, 64, 70, 83, 88, 89, 92, 96, 99, 109, 111, 152, 291, 297, 304, 310, 321, 322, 358, 424, 495, 515], "postman": [15, 26, 74, 110], "count_messag": 111, "fals": [18, 20, 21, 41, 50, 86, 111, 138, 139, 195, 196, 198, 201, 218, 224, 225, 226, 227, 242, 243, 248, 249, 250, 251, 290, 303, 315, 330, 337, 360, 366, 372, 373, 389, 394, 407, 409, 542], "env": [15, 26, 35, 43, 44, 74, 111, 152], "hmi": 111, "port_hmi": [111, 474, 477, 480, 482, 483, 495], "5555": [111, 482, 483, 485, 491], "port_hmi_cli": 111, "5556": [111, 482, 483, 487, 489, 493], "simpl": [111, 321, 343, 386, 410], "address": [111, 309], "uniqu": 111, "identifi": [111, 161, 162], "agent": [5, 111, 424, 550], "register_ag": [46, 111], "automat": [111, 308, 310], "need": [8, 18, 20, 21, 22, 24, 27, 28, 49, 61, 64, 66, 67, 73, 81, 83, 88, 97, 99, 102, 111, 151, 248, 249, 250, 251, 321, 409, 550], "unique_id": [49, 111], "attr": 111, "letterbox": 111, "The": [8, 10, 18, 19, 21, 22, 66, 69, 70, 72, 81, 104, 111, 144, 145, 248, 249, 250, 251, 308, 310, 317, 321, 344, 353, 358, 392, 543], "minimum": [18, 86, 111, 248, 249, 250, 251], "requir": [8, 18, 24, 30, 75, 92, 111, 317, 402], "receiv": [19, 66, 77, 78, 80, 82, 88, 104, 111], "send_hmi": 111, "msg": [16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 111, 432, 433, 434, 440, 444, 456, 461, 467, 468, 469, 504, 508, 527, 532, 533, 534, 535, 536, 537], "refactor": 111, "far": 111, "too": [10, 18, 111, 248, 249, 250, 251], "much": [20, 21, 111, 144, 145, 372], "relat": [18, 19, 111], "hotspot": [10, 95, 96, 111], "beacon": 111, "apply_alpha_compensation_magnitud": 122, "alpha": 122, "increas": [21, 86, 122], "compens": [18, 19, 23, 122, 333], "ratio": 122, "apply_alpha_doc_magnitud": 122, "duti": [18, 20, 122], "care": [18, 20, 23, 122], "apply_alpha_mct": 122, "now": [18, 19, 20, 24, 96, 122, 314], "push": [77, 122], "distribut": [19, 21, 66, 80, 88, 91, 93, 104, 122, 331, 355, 356, 372, 515], "via": 122, "loc": [122, 356, 380, 381], "apply_alpha_non_atfm": 122, "locat": [8, 44, 82, 122], "apply_alpha_tat_mean": 122, "we": [10, 20, 21, 49, 77, 91, 122, 331, 424], "mean": [18, 122, 138, 139, 327, 328, 329, 330, 348, 355, 356, 372, 380, 398], "so": [19, 20, 49, 66, 83, 101, 102, 104, 122, 248, 249, 250, 251, 335], "sig": [122, 355, 356, 380, 515, 519], "constant": 122, "expo": 122, "x": [18, 54, 96, 122, 248, 249, 250, 251, 253, 254, 256, 270, 280, 281, 343, 344, 345, 353, 358, 369, 370, 382, 390, 407, 541, 543], "lambda": [122, 344, 543], "sdt": [122, 380], "apply_anchor": 122, "anchor": 122, "apply_dci_max_threshold": 122, "threshold": [122, 448, 450], "apply_dci_min_threshold": 122, "apply_delta_mct": 122, "delta": [122, 248, 249, 250, 251], "metric": [79, 135, 138, 139], "agg": 135, "paras_to_monitor": [138, 139], "stat": [138, 139, 398], "std": [138, 139, 355], "no_percentile_for_pax": [138, 139], "resultsaggregatorsimpl": 139, "case_study_conf": [141, 143, 144, 145, 151], "data_scenario": [141, 143, 144, 145, 151], "print_color_info": [141, 143, 144, 145], "scenarioload": [143, 144], "loader": [143, 144, 145], "pickl": [143, 308, 314], "download_t": 143, "script": [8, 143, 411], "reload": [143, 144, 145], "draw": [143, 144, 145], "some": [8, 15, 16, 18, 49, 143, 144, 145, 248, 249, 250, 251], "variabl": [143, 144, 145, 321, 343, 368], "random": [19, 106, 143, 144, 145], "thing": [144, 145], "csv": [144, 308, 314], "create_flight_plan": [144, 145], "loop": [144, 145], "longer": [83, 144, 145], "than": [18, 21, 22, 144, 145, 248, 249, 250, 251, 308, 372, 411], "scenarioloaderstandard": 145, "parquet": [8, 145, 308, 310], "structur": [8, 145], "openmercuri": 145, "It": [15, 16, 18, 21, 22, 49, 81, 96, 99, 103, 145, 248, 249, 250, 251, 321], "inherit": [15, 16, 145], "simplifi": [18, 21, 145], "version": [18, 105, 145, 195, 550], "step": [145, 152, 248, 249, 250, 251], "pre": [18, 21, 66, 145], "arrang": 145, "load_scenario": 151, "call": [18, 22, 49, 59, 151, 152, 321, 344, 360, 367, 543], "callback": 152, "replac": [8, 152, 313, 314, 315, 316, 330], "event": [5, 35, 43, 50, 77, 80, 83, 84, 85, 96, 104, 105, 152, 422, 463, 464, 470, 471, 472, 550], "time": [18, 19, 20, 21, 24, 28, 39, 46, 49, 59, 60, 61, 63, 64, 68, 69, 73, 77, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 102, 152, 239, 242, 260, 515], "prioriti": [152, 321], "just": [8, 18, 20, 35, 59, 83, 152], "befor": [18, 19, 20, 24, 49, 96, 152, 248, 249, 250, 251, 321, 343], "process": [19, 23, 35, 43, 80, 88, 89, 99, 152, 321, 367], "create_aman": 151, "aman": [73, 74, 75, 88, 101, 102, 104, 105, 151], "includ": [18, 19, 53, 80, 82, 83, 88, 151, 176, 212, 411], "eaman": [81, 88, 151], "acolor": [15, 26, 74], "red": [15, 26, 74], "mcolor": [15, 26, 74], "white": [15, 26, 74], "uid": [15, 18, 26, 35, 37, 44, 56, 66, 74, 88], "idd": [15, 26, 53, 74], "verbos": [15, 26, 74, 332, 360], "common": [15, 16], "apply_agent_modif": [15, 19, 26, 66, 74, 80, 88, 96, 104], "modif": [15, 19, 26, 66, 74, 80, 88, 96, 104], "role": [15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105], "On": [16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105], "initialis": [16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105, 424], "pointer": [16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105], "belong": [10, 16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105], "send": [16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105], "messag": [16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 339], "own": [16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 448], "icao": [37, 158, 159, 294, 295], "place": [37, 89], "holder": 37, "rememb": [37, 330, 331, 372], "airlin": [18, 19, 20, 23, 37, 80, 89, 104, 170, 425], "slot_num": [39, 60, 63], "reason": [41, 44, 248, 249, 250, 251], "regul": [41, 96, 176, 212, 430], "r": [8, 19, 41, 53, 375], "slot": [18, 29, 31, 41, 59, 61, 63, 64, 66, 69, 70, 78, 80, 81, 82, 101, 242, 518, 541, 544, 547, 549], "excepmt": 41, "access": [46, 81, 373], "flight": [18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 46, 49, 50, 53, 61, 64, 66, 67, 68, 69, 70, 72, 73, 75, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 200, 240, 248, 249, 250, 251, 264, 265, 266, 448, 450, 514, 519, 541, 544], "up": [10, 18, 19, 20, 21, 24, 46, 49, 51, 86], "date": [19, 24, 46], "inform": [18, 19, 28, 46, 49, 50, 66, 72, 73, 78, 79, 80, 81, 83, 84, 86, 88, 101, 104, 550], "get_average_price_on_leg": [19, 46], "flight_uid": [18, 19, 20, 21, 22, 23, 24, 35, 46, 49, 53, 59, 61, 64, 96, 102, 103, 243, 245, 431, 448, 450, 457, 458, 459, 460, 502, 503, 506, 507, 513, 521, 522, 525, 526, 529, 530, 531], "price": [19, 46], "paid": [19, 20, 46], "passeng": [18, 19, 20, 23, 24, 46, 53, 88, 90], "possibl": [8, 18, 19, 21, 22, 46, 88, 248, 249, 250, 251], "number": [18, 19, 35, 43, 46, 59, 248, 249, 250, 251, 263, 264, 265, 266, 335, 352, 367], "leg": [19, 46], "weight": [19, 46, 50, 195, 248, 249, 250, 251, 338, 345, 398], "get_reactionary_buff": [19, 46], "cancel": [18, 27, 46, 66, 67, 83, 98, 101, 104], "consid": [18, 22, 23, 46, 49, 66, 72, 79, 81, 83, 86, 248, 249, 250, 251, 343, 448, 450], "absent": 46, "aircraft": [8, 18, 19, 24, 46, 77, 78, 80, 89, 161, 162, 248, 249, 250, 251, 515], "queue": [27, 28, 29, 31, 32, 35, 43, 44, 46, 61, 64, 66, 67, 68, 69, 70, 72, 73], "get_tat": [19, 46], "airport_uid": [19, 46, 66], "typic": [19, 46, 362], "turnaround": [19, 24, 46, 88, 89], "type": [18, 19, 46, 88, 89, 102, 117, 125, 147, 161, 162, 248, 249, 250, 251, 253, 254, 255, 256, 262, 263, 264, 265, 266, 304, 308, 309, 321, 335, 349, 350, 368, 375], "get_total_travelling_tim": [19, 46], "itinerari": [18, 19, 23, 46, 53], "feasibl": [19, 46], "most": [19, 24, 46, 344, 543], "theori": [24, 46], "register_airlin": 46, "aoc": [19, 23, 28, 46, 73, 80, 104], "after": [18, 19, 46, 49, 59], "register_network_manag": 46, "nm": [18, 19, 46, 99, 248, 249, 250, 251, 263, 265, 266], "FOR": [21, 46], "test": [8, 10, 46, 330, 331, 372], "purpos": [35, 46], "fp_pool_id": [49, 195], "crco_cost_eur": 49, "fuel_pric": 49, "destination_airport_uid": 49, "origin_airport_uid": 49, "eobt": [18, 24, 49, 68, 78, 83], "sobt": [18, 49], "sibt": [18, 49], "statu": [18, 19, 49], "non": [18, 24, 49, 301, 304, 305, 544], "submit": [18, 49, 99, 104], "origin_icao": 49, "destination_icao": 49, "flighplan": 49, "plan": [18, 19, 21, 22, 28, 49, 50, 70, 72, 73, 79, 80, 82, 83, 85, 86, 96, 97, 98, 99, 101, 102, 103, 104, 105], "gener": [8, 19, 21, 24, 49, 83, 104, 106, 308, 372, 519], "compos": [49, 248, 249, 250, 251], "flightpoint": 49, "realis": 49, "realiti": 49, "keep": [18, 24, 49, 331], "track": [49, 104], "both": [49, 323, 330], "trajectori": [18, 19, 49, 83, 85, 248, 249, 250, 251, 410], "ahead": 49, "could": [49, 321], "uncertainti": 49, "onc": [32, 49, 77, 81, 321], "flown": [49, 104], "dure": [49, 331], "futur": [8, 49], "disentangl": 49, "element": [49, 50, 106, 360], "add_point_original_plan": 49, "suppos": 49, "end": [20, 24, 49, 59, 248, 249, 250, 251, 339], "sort_point": 49, "find_intersecting_point": 49, "typ": [49, 302], "radiu": 49, "geom": 49, "coordin": [49, 51, 72, 343, 349, 350], "lat": [49, 195], "lon": [49, 195], "get_estimated_fuel_consumpt": 49, "takeoff": [49, 77], "land": [49, 81, 82, 84, 85, 86, 102, 248, 249, 250, 251], "been": [8, 10, 22, 23, 24, 27, 49, 67, 101, 103], "alreadi": [8, 18, 20, 49, 61, 64, 86, 360], "get_eta_wo_atfm": 49, "estim": [18, 19, 21, 49, 78, 81, 86, 88, 91, 92, 102, 248, 249, 250, 251], "arriv": [18, 20, 21, 24, 27, 28, 29, 31, 32, 35, 49, 66, 72, 73, 77, 78, 80, 81, 84, 515], "atfm": [18, 24, 49, 96, 99], "delai": [18, 19, 21, 24, 49, 66, 72, 81, 82, 86, 99, 448, 450], "get_planned_flying_time_to_land": 49, "length": [49, 325], "minut": [18, 19, 21, 24, 49, 96], "name_point": 49, "idx": [49, 520], "sort": [49, 321, 389], "delet": 49, "ad": [18, 20, 23, 24, 49, 68, 78, 80, 104, 105, 314], "avoid": [44, 49, 317], "recompute_speeds_new_point": 49, "recomput": [18, 49, 61, 64, 83, 86], "speed": [18, 19, 21, 49, 83, 86, 248, 249, 250, 251, 255, 262, 263, 264, 265, 266, 515, 544], "next": [18, 49], "exist": [49, 61, 64], "coord": [50, 57, 195, 336, 383], "alt_ft": [50, 195], "time_min": [50, 195], "dist_from_orig_nm": [50, 57, 195], "dist_to_dest_nm": [50, 57, 195], "wind": [50, 195, 248, 249, 250, 251], "ansp": [50, 57, 195], "fuel": [18, 21, 50, 86, 195, 248, 249, 250, 251, 260], "number_ord": 50, "planned_segment_speed_kt": 50, "segment_max_speed_kt": 50, "segment_min_speed_kt": 50, "segment_mrc_speed_kt": 50, "my_deep_copi": 50, "normal_copi": 50, "waypoint": [50, 103, 104, 105], "flightplan": 50, "deepcopi": 50, "print_ful": [50, 80], "print": [50, 60, 63, 80, 337, 542], "full": [5, 50, 80, 248, 249, 250, 251, 290, 309], "set_ev": 50, "set_nam": 50, "central_longitud": 51, "central_latitud": 51, "proj_typ": 51, "cartopi": [8, 51], "cr": 51, "azimuthalequidist": 51, "proj_initi": 51, "project": [51, 248, 249, 250, 251], "proj": [8, 51], "eqc": 51, "ellp": 51, "wgs84": 51, "6378137": 51, "lon_0": 51, "unknown": 51, "axi": 51, "info": [51, 78, 83], "cartesian": 51, "east": 51, "north": 51, "h": [8, 51, 253, 254, 255, 256, 262, 263, 264, 265, 266], "ellipsoid": 51, "height": 51, "metr": 51, "area": 51, "undefin": 51, "oper": [19, 22, 51, 85, 88, 104], "equidist": 51, "cylindr": 51, "datum": 51, "wg": 51, "84": 51, "prime": 51, "meridian": 51, "greenwich": 51, "scale": [51, 356], "1000": [51, 330, 331, 372, 373], "here": [8, 23, 51, 59, 424], "conveni": [51, 96], "big": [18, 51, 352], "meter": [51, 335], "durat": [60, 63], "capacity_period": [44, 60, 61, 63, 64], "print_info": [60, 63], "below": [60, 63], "wa": [60, 63, 321], "previous": [60, 63, 321], "self": [19, 60, 63, 321, 420, 422, 423, 424, 425, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 448, 450, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 502, 503, 504, 506, 507, 508, 513, 514, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537], "mprint": [60, 61, 63, 64], "instead": [60, 63, 81, 95, 321], "capac": [35, 43, 44, 59, 61, 64, 66], "slot_planning_oversubscript": 64, "slotqueu": [64, 70], "manag": [19, 23, 61, 64, 66, 70, 104], "assign_to_slot": [61, 64], "eta": [59, 61, 64, 238, 242, 243, 514, 518, 519, 541, 544, 547, 549], "known": [61, 64, 96], "consolidate_queu": [61, 64], "remove_lingering_slot": [61, 64], "tri": [18, 61, 64], "re": [61, 64], "assign": [29, 61, 64, 66, 70, 83], "sure": [24, 61, 64, 66, 96, 544], "NOT": [61, 64, 331, 372], "give": [61, 64], "fpf": [61, 64, 99], "why": [61, 64], "get_slots_avail": [61, 64], "t1": [61, 64], "t2": [61, 64], "between": [18, 19, 21, 22, 61, 64, 83, 248, 249, 250, 251, 290, 291, 321, 349, 350, 368, 386], "print_selector": [61, 64], "karg": [61, 64], "aprint": [61, 64], "swap_flight": [61, 64], "f1": [61, 64], "f2": [61, 64], "throw": [61, 64], "except": [10, 61, 64, 96, 304, 317, 538, 540], "cta": [61, 64], "update_arrival_assign": [61, 64], "slot_tim": [59, 61, 64, 243, 514, 519], "time_before_resolut": 95, "120": 95, "solver": 95, "udpp_merg": 95, "archetype_cost_funct": 95, "hm": 95, "swap": [18, 95, 448, 450], "processor": 95, "solv": [72, 95, 96], "singl": [88, 95, 321, 376], "shot": 95, "By": [72, 95], "librari": [8, 10, 95, 317], "resolut": 95, "algorithm": [95, 99], "udpp": 95, "register_atfm_regul": 96, "atfm_regul": 96, "mainli": 96, "remove_regulation_slots_except": 96, "current": [24, 35, 43, 86, 96, 105], "attach": [59, 96], "latest": 96, "pass": [18, 19, 96, 301, 304, 305, 308, 309, 314, 330, 411], "destin": [19, 23, 96, 195], "airport": [19, 32, 66, 70, 84, 88, 89, 90, 96, 104, 172, 173, 174, 176, 212], "nmad": 97, "request": [8, 18, 20, 22, 24, 28, 35, 43, 44, 69, 72, 73, 77, 78, 80, 81, 82, 83, 84, 86, 97, 98, 104, 105], "dissemin": [97, 98, 101, 102, 103, 104], "entiti": [88, 97, 101, 102, 103], "interest": [66, 97, 101, 102, 103, 104, 105], "notifi": [27, 28, 30, 67, 73, 75, 97, 102, 103, 104], "when": [18, 19, 20, 22, 23, 24, 28, 29, 32, 35, 53, 66, 68, 69, 72, 73, 77, 78, 83, 84, 97, 102, 103, 104, 105, 248, 249, 250, 251, 321, 360], "reach": [19, 97, 248, 249, 250, 251], "them": [18, 23, 66, 97, 105, 291, 331], "nmc": 98, "nmfpp": 99, "check": [18, 23, 99, 550], "compute_atfm_delai": 99, "stochast": 106, "reproduc": 106, "randomli": 106, "each": [18, 86, 104, 106, 291, 321, 331, 368, 425], "ach": 27, "aqpu": [28, 73], "eibt": [28, 73], "asp": 29, "enter": [29, 30, 72, 75], "execut": [18, 20, 29, 79, 83, 337, 425, 542], "horizon": 29, "fiah": [30, 75], "move": [30, 75], "servic": [30, 75], "eaman_solv": 31, "google_or": 31, "sa": 31, "optimis": [31, 72, 248, 249, 250, 251], "assig": [31, 44, 83], "saqb": 32, "build": [8, 18, 32, 35, 66, 70, 72, 335, 386], "schedul": [18, 21, 32, 68, 70], "begin": [32, 321, 425], "afp": [8, 18], "planner": 18, "select": [18, 19, 22, 83, 195, 248, 249, 250, 251, 308, 309], "4d": 18, "depart": [18, 20, 24, 66, 77, 78, 80], "g": [18, 22, 80, 81, 312, 335, 336, 367, 383], "wait": [18, 20, 23, 35, 77, 78, 81, 83, 84, 85, 104], "possibli": 18, "decid": [18, 21, 22, 23], "readi": [18, 20, 21, 24, 69, 78, 85], "departur": [18, 20, 21, 24, 66, 67, 68, 69, 70, 78], "less": [18, 308, 321, 372], "3": [8, 18, 83, 163, 197, 253, 263, 264, 265, 266, 329, 344, 348, 408, 409, 543], "hour": [18, 86], "might": [8, 18, 19, 248, 249, 250, 251, 360], "lead": 18, "option": [18, 21, 22, 308, 309, 312, 343], "cost": [10, 18, 19, 20, 21, 22, 72, 81, 448, 450], "tactic": 18, "depend": [18, 21, 72, 248, 249, 250, 251, 321], "mechan": 18, "4dt": 18, "implement": [18, 66, 72, 81], "action": 18, "requestatfmslot": 18, "fp_0": 18, "fp_1": 18, "fp_2": 18, "prioritis": 18, "decideopt": 18, "4dt_0": 18, "rule": [18, 21, 317], "thumb": [18, 21], "4dt_1": 18, "4dt_2": 18, "checkfpopt": 18, "build_delay_cost_functions_advanc": 18, "factor_in": 18, "diff": [18, 21], "up_to_date_baselin": [18, 21], "respect": [10, 18, 248, 249, 250, 251, 389], "avail": [18, 19, 35, 248, 249, 250, 251], "explicit": [18, 308], "knock": 18, "effect": [18, 59], "To": [18, 104, 301, 305, 387], "facilit": 18, "factorbuild_delay_cost_functions": 18, "fly": [18, 19], "likewis": 18, "taken": [18, 321, 368], "account": [18, 22, 69], "pax": [18, 19, 20, 23, 241, 273], "output": [8, 18, 290, 291, 312, 343], "factor": 18, "want": [18, 21, 104, 360], "slow": [18, 21], "put": [8, 18, 23, 35, 43, 308, 315, 424], "statement": 18, "outsid": [8, 18], "probabl": [8, 18, 23, 331, 515, 519], "build_delay_cost_functions_air_heurist": 18, "missed_connect": 18, "build_delay_cost_functions_heurist": [18, 21], "total": [18, 81, 248, 249, 250, 251, 335], "build_delay_cost_functions_dci_l2": 18, "waited_pax": 18, "assess": [18, 21, 88], "recov": [18, 21, 86], "coupl": [18, 291], "pushback_readi": [18, 21], "5": [18, 19, 21, 329, 344, 348, 378, 407, 543], "go": [18, 425], "better": [18, 372], "those": [18, 104, 321], "board": [18, 19, 20, 23], "built": [8, 18, 317, 337, 542], "segment": 18, "potenti": [18, 23, 81, 86], "dep": 18, "group": [18, 19, 23], "build_delay_cost_functions_dci_l2_old": 18, "potentit": 18, "up_to_date_baseline_obt": 18, "multiply_flights_aft": 18, "heurist": [18, 21], "miss": [18, 19, 23, 309, 315], "other": [18, 81, 88, 304, 308, 317, 330, 331, 425, 450], "build_delay_cost_functions_heuristic_flight": 18, "WITH": 18, "build_delay_cost_functions_heuristic_pax": 18, "compute_reactionary_delai": 18, "dai": [18, 165, 176, 212], "int": [8, 18, 35, 43, 315, 335, 343, 367], "float": [18, 35, 43, 290, 315, 335, 375], "primari": [18, 298], "amount": [18, 21], "These": [18, 19, 248, 249, 250, 251], "buffer": [18, 19], "larg": 18, "enough": [18, 21, 321], "recoveri": [18, 21, 86], "strategi": 18, "cost_not_wait_for_pax_group": 18, "missing_pax": [18, 502, 506], "pax_delai": 18, "don": [18, 321], "t": [18, 255, 256, 262, 321, 344, 393, 424, 515, 543], "deal": 18, "rebook": [18, 20, 23], "transfer": 18, "soft": 18, "cost_wait_for_pax_group": 18, "decide_options_altern": 18, "fp_option": 18, "current_opt": 18, "consumpt": [18, 248, 249, 250, 251], "reassess_departure_turnaround": 18, "ac_ready_at_tim": 18, "black": 18, "magic": 18, "tricki": 18, "understand": 18, "lightli": 18, "ac_ready_tim": 18, "pull": 18, "close": 18, "inde": [18, 312], "anoth": [18, 23], "got": 18, "complet": 18, "30": [18, 367, 408, 547, 549], "resubmit": 18, "ani": [18, 59, 69, 83, 301, 304, 305, 321, 450], "repres": [19, 66, 80, 88, 104], "centr": 19, "fleet": 19, "dynam": [10, 19, 21], "adjust": [19, 86], "realloc": [19, 24], "handler": [19, 67, 77, 84, 89], "decis": [19, 21], "mostli": 19, "driven": 19, "expect": [19, 22, 72, 81], "average_cost_funct": 19, "veri": [19, 345], "high": 19, "averag": [19, 248, 249, 250, 251, 347, 348], "rough": 19, "code": [3, 10, 12, 19, 317, 402], "least": [19, 409], "average_missed_pax_cost": 19, "obtain": [19, 105, 248, 249, 250, 251], "get_airline_of_flight": 19, "central": 19, "registri": 19, "get_airlines_in_alli": 19, "allianc": 19, "get_all_airlin": 19, "get_curfew_buff": 19, "curfew": [19, 172], "get_destin": 19, "get_first_obt": 19, "fist": 19, "obt": 19, "get_flight": 19, "aoc_uid": [19, 23], "get_ibt": 19, "ibt": 19, "get_last_ibt": 19, "get_mct": 19, "flight_uid1": 19, "flight_uid2": 19, "pax_typ": [19, 53, 88], "mct": 19, "get_n_pax_to_board": 19, "get_number_seats_flight": 19, "seat": 19, "get_number_seats_itinerari": 19, "get_obt": 19, "get_origin": 19, "origin": [19, 195], "get_pax_to_board": 19, "reactionari": [19, 81], "propag": 19, "trigger": [19, 43, 81, 83, 85, 103, 104], "breach": 19, "get_statu": 19, "give_compensation_func": 19, "compensation_func": 19, "give_delay_distr": 19, "dist": [19, 88, 290], "drawn": 19, "rv": 19, "random_st": 19, "give_duty_of_care_func": 19, "duty_of_care_func": 19, "give_non_pax_cost_delai": 19, "dict_np_cost": 19, "dict_np_cost_fit": 19, "phase": [19, 194, 248, 249, 250, 251], "at_gat": 19, "taxi": [19, 69, 77, 78, 84, 85, 88, 91, 92, 93], "airborn": [19, 83], "euro": 19, "per": [8, 19, 66, 86], "b": [19, 54, 290, 291, 343, 367], "coeffici": [19, 331, 343, 345, 368, 375], "sqrt": 19, "mtow": [19, 248, 249, 250, 251], "c": [8, 19, 44, 54, 262, 367, 368], "mtwo": 19, "abov": [19, 387], "own_flight": 19, "register_aircraft": 19, "register_airport": [19, 66, 104], "design": [19, 308, 314, 382, 387], "aoc_airports_info": 19, "aoc_flights_info": 19, "intern": [19, 66, 88], "register_flight": [19, 88], "register_fp_pool": 19, "fp_pool": [19, 196], "poool": 19, "register_list_aircraft": 19, "register_nm": 19, "networkmanag": 19, "register_pax_itinerary_group": 19, "register_trajectories_pool": 19, "trajectory_pool": [19, 163, 195, 196, 197, 223, 224, 225, 227, 229], "pool": [19, 395], "set_log_fil": [19, 66, 80, 88, 104], "log": [19, 66, 80, 88, 104], "tbc": [19, 66, 80, 88, 104], "system": [19, 66, 80, 88, 104], "aph": 20, "direct": [20, 23], "left": [20, 23, 248, 249, 250, 251, 515], "d4": 20, "1": [3, 8, 12, 20, 21, 23, 44, 77, 78, 83, 84, 196, 248, 249, 250, 251, 255, 258, 329, 330, 331, 335, 343, 344, 348, 349, 350, 358, 362, 372, 378, 386, 387, 408, 543, 544, 547, 549], "embark": 20, "arrive_pax": 20, "overnight": 20, "night": 20, "exactli": [20, 24], "block": [3, 12, 20, 89], "board_pax": 20, "coincid": 20, "off": [20, 85, 102], "long": [20, 85], "until": [20, 77, 78, 85, 103], "real": 20, "ta": [21, 248, 249, 250, 251, 262], "dcic": 21, "commun": 21, "potentialdelayrecoveryprovid": 21, "pdrp": [21, 86], "build_delay_cost_functions_dci_l1": 21, "slightli": 21, "fnc": 21, "fit": [21, 375], "dci": [21, 83, 86], "build_delay_cost_functions_dci_l1_old": 21, "cost_index_assess": 21, "push_back_ready_ev": [21, 83, 503, 507], "ci": [21, 86], "pushback": [21, 77, 78], "top": [21, 93, 248, 249, 250, 251], "climb": [21, 194, 248, 249, 250, 251], "therefor": 21, "Or": 21, "IF": 21, "turn": 21, "AT": 21, "decide_if_delay_recovery_perform": 21, "probabilist": 21, "whether": 21, "perform": [8, 21, 248, 249, 250, 251], "static": [21, 248, 249, 250, 251], "plot_costs_dci": 21, "x_cont": [21, 343], "plot": [21, 343, 410], "make": [21, 24, 248, 249, 250, 251, 308, 387], "reassess_cost_index_ta0": 21, "OF": 21, "greater": 21, "60": [21, 24], "try": [21, 248, 249, 250, 251], "amortis": 21, "lower": [21, 248, 249, 250, 251], "15": [21, 255], "never": 21, "made": 21, "accord": [21, 102, 161, 162], "linear": [21, 248, 249, 250, 251, 343, 358, 368, 386], "prob": 21, "20": [21, 248, 249, 250, 251, 367, 408], "min": [21, 248, 249, 250, 251, 343], "As": 21, "reduc": [21, 226], "max_fuel": 21, "achiev": 21, "maximum": [21, 35, 43, 86, 248, 249, 250, 251], "reduct": 21, "reassess_cost_index_ta1": 21, "deliver": 21, "At": 21, "toc": [21, 248, 249, 250, 251, 410], "choos": 21, "cheapest": 21, "reassess_cost_index_ta2": 21, "down": [21, 304], "earlier": 21, "send_speed_up_msg_to_fpu": 21, "perc_select": [21, 83], "change_tod_dci": [21, 83], "who": [21, 102, 321], "selector": 22, "altern": [8, 22], "dispatch": 22, "extract": [8, 22], "extern": 22, "decide_fp": 22, "select_fp": 22, "back": [22, 77], "cost_opt": [22, 457, 458, 459, 460], "yield": [22, 103, 366], "rather": 22, "asynchronu": 22, "human": 22, "hmi_fp_sel": 22, "send_option_select": 22, "option_selected_fp": 22, "repli": [22, 81, 86], "wait_for_fp_selection_request": 22, "noth": 22, "pr": 23, "onto": 23, "compute_missed_connecting_paxand": 23, "pai": 23, "hotel": 23, "prefer": [23, 463], "compute_reallocation_opt": 23, "from_tim": 23, "from_airport": 23, "do_realloc": 23, "answer": 23, "reallocate_pax": 23, "reallocation_opt": 23, "send_allocation_pax_request": 23, "wait_for_allocation_pax_request": 23, "come": [23, 248, 249, 250, 251], "wait_for_reallocation_pax_request": 23, "ok": 23, "wait_for_remove_pax_from_boarding_list_request": 23, "tro": 24, "gate": [24, 69, 84], "subsequ": [10, 24], "due": [24, 83], "caus": 24, "reassess": [24, 248, 249, 250, 251], "extra": 24, "incur": 24, "check_arriv": 24, "arrival_ev": 24, "releas": [10, 24, 35, 43, 66, 101], "check_delay_estim": 24, "delay_estimation_ev": 24, "happen": [24, 89], "There": 66, "ensur": [8, 66], "runwai": [66, 69], "demand": 66, "kept": 66, "baselin": 66, "fifo": 66, "airport_coord": 66, "seem": 66, "departu": 66, "capacityperiod": 66, "period": [59, 66], "directli": [35, 66, 81, 308, 309, 411], "final": [66, 69, 84, 248, 249, 250, 251], "strategicqueuedeparturebuild": 66, "sqdb": 66, "register_radar": 66, "radar": 66, "ld": 66, "Not": [35, 66], "radar_uid": 66, "knowledg": 66, "dch": 67, "dqu": 68, "posit": [68, 72, 86, 103, 353, 355], "fligth": [68, 248, 249, 250, 251], "seen": 68, "dsp": 69, "waitfordeparturerequest": 69, "sequenc": [69, 81, 195, 290, 373], "ctot": 69, "assing": 69, "sdqb": 70, "strateg": 70, "builder": 70, "build_departure_queu": 70, "app": 72, "scope": 72, "wai": [72, 81, 321], "domain": 72, "sent": 72, "arrivalqueueplannedupdat": 73, "flightinamanhandl": 75, "captur": 88, "ground": [84, 88, 89, 248, 249, 250, 251], "side": [8, 88, 335, 387], "air": [88, 253, 254, 255, 256], "actual": [84, 88, 91, 93, 360], "evolut": [80, 88], "separ": 88, "respons": 88, "give_connecting_time_dist": 88, "mct_q": 88, "95": 88, "layer": 88, "vari": 88, "nation": 88, "give_taxi_in_time_estimation_dist": 88, "ac_typ": [88, 91, 93], "ao_typ": [88, 89, 91, 93], "give_taxi_out_time_estimation_dist": 88, "give_taxi_time_add_dist": 88, "nois": 88, "give_turnaround_time_dist": 88, "register_dman": 88, "dman": [88, 101, 102, 104, 105], "register_eaman": 88, "gh": 89, "resourc": [35, 43, 89], "while": [89, 104], "compute_turnaround_tim": 89, "ac_wak": 89, "wake": [89, 161, 162], "turbul": 89, "fsc": 89, "lcc": 89, "etc": [8, 89, 317, 335, 343], "do_turnaround": 89, "tt": 89, "wait_for_turnaround_request": 89, "pct": 90, "tip": 91, "compute_taxi_in_tim": 91, "disrupt": 91, "toe": 92, "compute_taxi_out_tim": 93, "taxi_out_time_estim": 93, "sampl": [8, 93, 330, 331, 368], "adh": 77, "check_push_back": 77, "moment": 77, "do_taxi_out": 77, "succe": 77, "wait_for_taxi_out_tim": 77, "atot": 77, "dsr": [78, 83], "aobt": 78, "check_push_back_readi": [78, 83], "wait_for_departure_slot": 78, "wait_for_taxi_out_time_estim": 78, "fpip": 79, "wrap": 79, "around": 79, "state": 79, "inforamt": 79, "compute_fp_metr": 79, "initi": [80, 343, 375], "crew": 80, "constraint": [80, 82], "hold": 80, "integr": [80, 85], "itself": 80, "over": [80, 85, 448, 450], "summari": 80, "reschedule_fai_request": 80, "reschedul": 80, "fai": [80, 81], "transfer_to_aoc": 80, "relai": 80, "fac": 81, "faip": 81, "generalis": 81, "check_fai_request": 81, "fai_request_ev": 81, "wait_for_flight_arrival_information_request": 81, "compute_cost_slot": 81, "elt": [81, 431, 436, 437, 438, 442, 531], "slots_tim": [81, 436, 437, 438, 442], "provide_flight_arrival_inform": 81, "eaman_uid": 81, "provide_flight_estimated_landing_tim": 81, "wait_for_flight_estimated_landing_time_request": 81, "what": [81, 314], "fo": 81, "2nd": 81, "fpcu": 82, "control": [82, 321, 368], "issu": [8, 82], "update_flight_plan_constraint_controlled_landing_tim": 82, "delay_need": 82, "clt": 82, "location_request": 82, "neeed": 82, "wait_for_flight_plan_controlled_landing_time_constraint_update_request": 82, "fpu": 83, "report": [83, 103], "assing_fp_no_comput": 83, "would": 83, "overrid": 83, "store": 83, "exampl": [5, 8, 83, 101, 248, 249, 250, 251, 253, 254, 255, 256, 262, 358, 550], "update_fp_inform": 83, "But": 83, "extens": [83, 308], "update_eobt": 83, "pusbh_back_ready_ev": 83, "push_bac_ready_ev": 83, "push_back": 83, "update_spe": 83, "percentag": 83, "mrc": 83, "mmo": 83, "descent": [83, 86, 248, 249, 250, 251], "whole": 83, "steeper": 83, "cruis": [83, 248, 249, 250, 251], "bit": 83, "wait_for_fp_assigment_no_comput": 83, "wait_for_fp_upd": 83, "wait_for_eobt_upd": 83, "wait_for_speed_upd": 83, "tod": [83, 410], "gah": 84, "aibt": 84, "check_land": 84, "do_taxi_in": 84, "request_taxi_in_tim": 84, "wait_for_taxi_in_tim": 84, "otl": 85, "cross": [85, 103, 104], "check_taxi_out_don": 85, "compute_potential_delay_recoveri": 86, "force_comput": 86, "use_dci_land": 86, "forc": [86, 360], "past": [86, 248, 249, 250, 251], "estimate_time_fuel_at_speed_chang": 86, "speed_change_perc": 86, "speed_kt": 86, "min_kt": 86, "max_kt": 86, "knot": 86, "mrc_kt": 86, "rang": [86, 248, 249, 250, 251, 344, 543], "unit": [86, 544], "distanc": [86, 248, 249, 250, 251, 260, 290, 291, 349, 350, 515, 544], "estimate_time_fuel_speed_chang": 86, "from_posit": 86, "provide_potential_delay_recover_inform": 86, "potential_delay_recoveri": 86, "to_uid": 86, "wait_for_potential_delay_recover_request": 86, "dcfp": 101, "dfp": 102, "add_subscript": 102, "agent_uid": [102, 103], "update_schedul": 102, "subscrib": [102, 103, 104, 105], "being": [102, 344, 424, 519, 543], "about": [102, 103, 550], "unique_id_from_ag": 102, "disseminate_flight_plan": 102, "dfpu": 103, "parti": [8, 103, 104], "check_flight_crossing_point": 103, "p": [103, 254, 331, 368, 374], "update_id": 103, "progress": [104, 550], "along": [104, 335], "rout": 104, "augment": [104, 105], "hoc": 104, "flightplancross": 104, "network": 104, "observ": 104, "rafp": 105, "impli": 105, "augment_flight_plan": 105, "deriv": 35, "simpi": [35, 43], "previou": [35, 249, 250, 251], "getqueu": [35, 43], "alia": [35, 43], "putqueu": [35, 43], "add_flight": 35, "properti": [35, 43], "count": [35, 43], "user": [35, 43, 44, 309], "get_queu": [35, 43], "pend": [35, 43], "put_queu": [35, 43], "usag": [43, 304, 362], "grant": 43, "immedi": 43, "subclass": 43, "booker": 44, "concurr": 44, "anyth": 44, "n_pax": 53, "origin_uid": 53, "destination_uid": 53, "fare": 53, "dic_soft_cost": 53, "get_itinerary_so_far": 53, "unsaf": 53, "still": 53, "plane": 53, "give_itinerari": 53, "must": [53, 308], "give_new_itinerary_from_last_flight": 53, "k_p": 54, "origin_airport": 56, "destination_airport": 56, "start_tim": 59, "end_tim": 59, "get_slot_from_tim": 59, "flight_info": 59, "slot_typ": 59, "overlap": [59, 335], "get_slot_numb": 59, "ep": [59, 335], "0001": 59, "fall": 59, "increment": [59, 248, 249, 250, 251], "max": [59, 343, 367, 544], "window": [8, 59], "strictli": [59, 355], "counter": 59, "act": 59, "roud": 59, "error": [59, 248, 249, 250, 251], "floor": 59, "get_time_from_slot_numb": 59, "explan": 59, "wsf": [474, 477, 495], "ports_mercuri": [482, 483], "async": 483, "port": [366, 394, 485, 487, 489, 491, 493], "letter": 495, "max_fuel_cost": 514, "10000": [248, 249, 250, 251, 514], "100": [248, 249, 250, 251, 264, 265, 266, 343, 344, 378, 387, 409, 515, 543], "200": [515, 519], "pdf": 515, "normal": [355, 515], "idx_flight": 516, "matrix_cost": [516, 517], "matrix_prob": [516, 517], "alloc": [465, 470, 516, 517, 541], "initial_alloc": [516, 517], "fncd": [518, 541], "current_tim": 519, "mu": [355, 380, 519], "tol": [378, 519], "01": 519, "min_tim": 519, "max_tim": 519, "pp": 520, "indx": 528, "df_costs_slot": 531, "df_delay_slot": 531, "cost_funct": 531, "etas2": 541, "message_befor": [337, 542], "message_aft": [337, 542], "print_funct": [337, 542], "onelin": [337, 542], "condit": [178, 214, 309, 343, 344, 543], "satisfi": [344, 543], "stopiter": [344, 543], "doesn": [344, 543], "traceback": [344, 543], "recent": [344, 543], "actual_spe": 544, "index_fixed_flight": [544, 547, 549], "index_commanded_flight": [544, 547, 549], "nominal_spe": [544, 547, 549], "min_spe": [544, 547, 549], "max_spe": [544, 547, 549], "margin": 544, "jump": 544, "cost_matrix": 544, "probabilities_matrix": 544, "dhd": [544, 547, 549], "chd": [544, 547, 549], "thd": [544, 547, 549], "bigm": [544, 547, 549], "100000": [544, 547, 549], "time_curr": 544, "threshold_valu": 544, "max_holding_tim": 544, "90": 544, "variou": 544, "clip": 544, "command": [8, 544], "silent": [385, 545], "maxnumberflights_eachslot": [547, 549], "maxholiding_min": [547, 549], "regulation_info": [420, 422, 463, 464, 465, 470, 472], "world_build": 421, "credit": 424, "sever": [3, 12, 248, 249, 250, 251, 424], "reinitialis": 424, "import": [317, 402, 425], "airline_uid": 470, "msg_to_hmi": [471, 472], "regulation_id": 471, "engin": [161, 162, 164, 171, 175, 179, 180, 181, 190, 201, 202, 206, 207, 210, 214, 215, 221, 222, 226, 272, 282, 283, 287, 301, 303, 304, 305, 309, 315, 366, 411], "similar": 411, "fashion": 411, "orient": 411, "interact": 411, "session": 411, "notebook": [8, 411], "welcom": 550, "open": [8, 10, 304, 550], "sourc": [10, 550], "mobil": 550, "readm": 550, "contact": 550, "univers": [10, 550], "westminst": [10, 550], "atm": [8, 10, 550], "team": 550, "quickstart": 550, "clone": 8, "repositori": 8, "commandlin": [], "git": 8, "http": [8, 10, 345], "github": [8, 10], "com": [8, 10, 345], "uow": [8, 10], "download": 8, "third": 8, "cd": [8, 248, 249, 250, 251], "submodul": 8, "recurs": 8, "remot": [8, 302], "init": 8, "fresh": 8, "python": [8, 345], "environ": 8, "instal": 550, "packag": 8, "sudo": 8, "apt": 8, "libproj": 8, "dev": 8, "libgeo": 8, "essenti": 8, "python3": 8, "bin": 8, "m": [8, 248, 249, 250, 251, 253, 255, 262, 264, 265, 266, 381], "pip": 8, "shape": [8, 368], "binari": 8, "txt": [8, 10], "zenodo": 8, "org": 8, "doi": 8, "5281": 8, "10211704": 8, "root": 8, "directori": [], "bada": [8, 248, 249, 250, 251], "4": [321, 329, 335, 348, 362], "support": [8, 308], "licenc": [8, 550], "eurocontrol": 8, "generate_bada3_input": 8, "transform": [8, 262], "ofp": 8, "ptd": [8, 248, 249, 250, 251], "tabl": [8, 169, 177, 183, 184, 186, 189, 191, 192, 194, 198, 199, 200, 202, 203, 204, 208, 210, 211, 218, 219, 220, 248, 249, 250, 251, 298, 303, 309, 312, 314, 315], "help": [], "path_to": [], "bada3_fil": [], "processed_bada3_fil": [], "ac_perform": 8, "bada3": [8, 161, 162], "your": 8, "openap": 8, "develop": 8, "jupyt": 8, "ipynb": 8, "graphic": 550, "interfac": 550, "gui": [5, 8, 10, 550], "explor": 8, "dashboard": 8, "mercury_gui": 8, "programmat": 550, "show": 8, "term": 8, "testtest": [], "written": [10, 314], "g\u00e9rald": 10, "gurtner": 10, "lui": 10, "delgado": 10, "damir": 10, "valput": 10, "michal": 10, "weiszer": 10, "thank": [10, 331], "tanja": 10, "bolic": 10, "mani": 10, "wave": 10, "gpl": 10, "v3": 10, "andygaspar": 10, "belt": 10, "tool": [8, 10], "uow_tool_belt": 10, "2023": 10, "innaxi": 10, "contributor": 10, "cli": [5, 550], "if_abs": [], "modelstructur": [], "get_new_flight_list": [], "newslot": 240, "former": [], "old": [], "alternative_allocation_rul": 243, "airline_nam": [], "offer": [], "max_off": [], "time_limit": [], "mip_gap": [], "num": 352, "tripl": [], "archetypecostfunct": [], "kind": 321, "flight_nam": [], "delay_cost_vect": [], "arrai": [248, 249, 250, 251, 329, 343, 348, 358, 368], "cost_vect": [], "garbag": [310, 311], "update_slot": [], "latter": 392, "alternative_rul": 242, "ly": [], "bracket": [], "04": [], "00": [], "05": [330, 331, 335, 372, 373], "altervative_rul": [], "air_ctor": [], "slot_index": [], "str": 195, "udpp_prior": [], "tna": [], "slope": [407, 409], "margin_1": [], "jump_1": [], "margin_2": [], "jump_2": [], "empty_slot": [], "xp_problem": [], "schedule_mat": [], "offers_convenience_tol": [], "air_pair": [], "air_tripl": [], "line": [], "df": [229, 230, 233, 234, 271, 272, 277, 278, 308, 309, 327, 328, 329, 333, 334, 338, 346, 347, 348, 365, 382, 398], "datafram": [308, 309, 314, 315, 409], "flight_list": [], "num_flight": [], "num_airlin": [], "uniform": [308, 314], "new_capac": [], "n_flights_first_airlin": [], "custom": 321, "min_margin": [], "max_margin": [], "45": [], "min_jump": [], "max_jump": [], "slot_list": [], "auslot": [], "costvect": [], "vector": [248, 249, 250, 251, 343], "cost_func_archetyp": [], "default_paramet": [], "compute_r_squar": [], "algo_fit": [], "l": [], "bfg": [], "y": [343, 375, 390, 407], "max_delai": [], "fixed_para": [], "8": [329, 348], "approx_fun": [], "powel": [], "best": 291, "val": [], "y_test": [], "y_train": [], "n_point": [], "param": [321, 349, 350, 368], "fixed_param": [], "y_fit": 375, "determin": [308, 375], "iteratbl": 375, "discard": [343, 375], "nan": [331, 343, 375], "list1": [379, 389], "list2": [379, 389], "sorted_flight": [], "hfe": [], "collect": 317, "usual": [], "comin": [], "local": 302, "global": [], "udpploc": [], "udppmerg": [], "easi": [], "sometim": [], "combinedmodel": [], "models_list": [], "assign_slots_after_model": [], "sequential_requir": [], "sequenti": [], "kwargs_init": [], "kwargs_run": [], "nfp": [], "nn": [], "128": [], "n_h": [], "v1": 374, "nf_tot_gam": [], "n_a": [], "game_typ": [], "game": [], "n_f_player": [], "jp": [], "root_dir": [], "allocation1": [], "allocation2": [], "parass": 362, "ret": 362, "thing_to_do": 362, "pouet": [360, 362], "pouic": 362, "11": 362, "def": [360, 362], "yep": 362, "remove_nan": [343, 389], "ith": 389, "cv": [], "cost_coeffici": [], "algo": [], "globaloptimum": [], "wrapper": [302, 308, 314], "n_f": [], "50": [248, 249, 250, 251], "istop": [], "equival": [], "udppprior": [], "sens": [], "merg": 321, "idem": 357, "strong": [], "paradigm": [], "istop_tot": [], "ones": [309, 321], "approxim": [], "archetyp": [], "nn_bound_tot": [], "featur": [], "computaion": [], "rl": [], "matrix": [290, 291, 343], "slote": [], "airport_icao": [157, 212, 293], "db": [161, 162], "bada4_2": 161, "read_dict_wtc_engine_model": [161, 162], "bada4": 161, "ac": [161, 162, 248, 249, 250, 251], "synonim": [161, 162], "ac_model": [161, 248, 258], "bada_cod": 162, "d_crco": 163, "fp_pool_tabl": [163, 185, 195, 196, 197], "fp_pool_m": [163, 197], "trajectory_pool_t": [163, 195, 196, 197, 223, 224, 225, 227, 229], "trajectories_vers": [163, 195, 196, 197, 223, 224, 225, 227], "icao_orig": [164, 178, 195, 207], "icao_dest": [164, 178, 195, 207], "route_pool_o_d_t": [164, 206, 214], "route_pool_o_d_gener": [164, 206, 214], "regulation_at_airport_t": [165, 167, 176, 212], "regulation_at_airport_stat": [165, 176, 212], "regulation_at_airport_days_t": 166, "regulation_at_airport_days_stat": 166, "regulation_at_airport_manu": 167, "regulation_t": 168, "atfm_regulation_at_airport": 168, "regulation_capacity_t": 168, "regulation_capacity_period": 168, "airport_stat": 169, "airline_t": 170, "airline_stat": 170, "airport_t": [171, 172, 173, 174, 180], "airport_info_stat": [171, 172, 173, 180], "icao_id": [171, 172], "airport_curfew": 172, "icao_airport_nam": 172, "curfew_airport_nam": 172, "curfews_db_t": 172, "curfews_db_table2": 172, "only_ecac": 172, "airport_info_t": 172, "curfew_extra_time_t": 172, "taxi_in_t": 173, "taxi_in_stat": 173, "taxi_out_t": 173, "taxi_out_stat": 173, "airport_modif_cap": 174, "airspace_t": [175, 178, 201], "airspace_stat": [175, 178, 201], "appli": [176, 212, 382], "passenger_compensation_stat": 177, "route_pool_t": [178, 195, 196, 201, 206, 207, 213, 215, 224, 225, 227], "route_pool": [178, 195, 196, 201, 213, 224, 225, 227], "route_pool_has_airspace_t": [178, 201], "route_pool_has_airspace_stat": [178, 201], "rps_id": 179, "table_pool": 179, "route_pool_stat": [179, 206, 207, 215], "table_airspac": 179, "route_pool_static_has_airspace_stat": [179, 202], "crco_vat_t": [181, 182], "crco_vat_stat": [181, 182], "crco_fix_t": [181, 182], "crco_fix_stat": [181, 182], "crco_overfly_t": [181, 182], "crco_overfly_stat": [181, 182], "crco_weight_t": [181, 182], "crco_weight_stat": [181, 182], "crco_charges_t": 182, "crco_charges_stat": 182, "ac_eq_badacomputed_stat": [183, 184, 224, 225], "duty_of_care_stat": 186, "eaman_t": 187, "eaman_definit": 187, "uptak": 187, "curfew_estimated_avg_t": 188, "curfew_costs_estim": 188, "increment_cruise_dci_stat": 189, "schedule_run": [191, 192], "flight_schedul": [191, 192, 195, 196, 218, 224, 225, 227], "subset_t": [193, 196, 218, 224, 225], "flight_subset": [193, 195, 196, 218, 224, 225, 227], "set_id": 193, "flight_uncertainties_stat": 194, "fp_pool_point_t": [195, 197], "flight_schedule_t": [195, 196, 224, 225, 227], "flight_subset_t": [195, 227], "scenario_t": [195, 216, 217, 218, 227], "read_spe": 195, "scenario_in_schedul": [195, 196, 218, 224, 225, 227], "sql": [195, 299, 309, 310], "trajectory_pool_id": 195, "route_pool_id": 195, "bada_code_ac_model": 195, "fp_distance_nm": 195, "fpp": 195, "st_x": 195, "st_y": 195, "join": 195, "tp": 195, "rp": 195, "ON": 195, "fsb": 195, "flight_id": 195, "nid": 195, "flight_set": 195, "subset": 195, "AND": 195, "BY": [195, 331], "fp_pool_point_m": 197, "iedf_atfm_stat": 198, "scipy_distr": 198, "iedf_wind_stat": 199, "type_wind": 199, "pax_itinerari": 200, "fab_tabl": 201, "fab_stat": 201, "include_fab": 201, "only_fid": 202, "non_pax_delay_stat": 203, "non_pax_delay_fit_stat": 204, "curfew_cost_t": 205, "curfew_non_pax_cost": 205, "itinerary_flow": [208, 209], "po_run": 209, "possible_itineraries_t": 209, "possible_options_itinerari": 209, "pax_flow_t": 209, "perc_day_min_max_reg_airport": 210, "prob_atfm": 211, "condition_sourc": 213, "delay_paras_t": 217, "output_rng": 219, "model_vers": 219, "soft_cost_delay_stat": 220, "condition_trajectory_id": [221, 222], "ac_eq_badacomputed_static_t": [224, 225], "number_trajectori": [224, 225], "minimum_trajectori": 225, "maximum_trajectori": 225, "tg_run": 226, "sm_run": 226, "rg_run": 226, "field": 226, "trajectory_segments_t": [227, 230], "trajectory_seg": [227, 230, 248, 249, 250, 251], "turnaround_t": 228, "mtt_static": 228, "scenario_path": 232, "queri": [233, 308, 309, 310, 312], "sql_queri": 234, "toml_dict": 236, "filenam": [236, 361], "name_slot": 240, "new_n_pax": [241, 273], "ac_icao": [248, 249, 250, 251, 258], "wtc": [248, 249, 250, 251], "wref": [248, 249, 250, 251], "m_nom": [248, 249, 250, 251], "oew": [248, 249, 250, 251, 258], "mpl": [248, 249, 250, 251, 258], "vfe": [248, 249, 250, 251], "m_max": [248, 249, 250, 251], "hmo": [248, 249, 250, 251], "abc": 248, "apu_fuel_flow": [248, 249, 250, 251], "cc": [248, 249, 250, 251], "apu": [248, 249, 250, 251], "arrival_costs_per_minut": [248, 249, 250, 251], "at_gate_costs_per_minut": [248, 249, 250, 251], "avg_climb_descent_ff": [248, 249, 250, 251], "flv": [248, 249, 250, 251], "ffv": [248, 249, 250, 251], "from_fl": [248, 249, 250, 251], "to_fl": [248, 249, 250, 251], "flow": [248, 249, 250, 251], "fl": [248, 249, 250, 251, 264, 265, 266], "align": [248, 249, 250, 251], "ff": [248, 249, 250, 251], "ft": [248, 249, 250, 251, 253, 254, 255, 256, 262, 264, 265, 266], "kg": [248, 249, 250, 251, 253], "compute_sr": [248, 249, 250, 251], "mass": [248, 249, 250, 251], "cruise_wind": [248, 249, 250, 251], "bank": [248, 249, 250, 251], "specif": [248, 249, 250, 251], "mach": [248, 249, 250, 251, 264, 265, 266], "angl": [248, 249, 250, 251], "tail": [248, 249, 250, 251, 330, 331], "rad": [248, 249, 250, 251], "sr": [248, 249, 250, 251], "specifc": [248, 249, 250, 251], "en_route_costs_per_minut": [248, 249, 250, 251], "error_climb_weight_from_toc": [248, 249, 250, 251], "idea": [248, 249, 250, 251], "minimize_scalar": [248, 249, 250, 251], "weigh": [248, 249, 250, 251], "99999": [248, 249, 250, 251, 333, 334], "ct": [248, 249, 250, 251], "fl_0": [248, 249, 250, 251, 260], "heavi": [248, 249, 250, 251], "minim": [248, 249, 250, 251], "largest": [248, 249, 250, 251], "cover": [248, 249, 250, 251], "altitud": [248, 249, 250, 251, 253, 254, 255, 256, 262], "error_extra_cruis": [248, 249, 250, 251], "weight_1": [248, 249, 250, 251, 260], "distance_to_cov": [248, 249, 250, 251], "fl_cruis": [248, 249, 250, 251], "avg_cruise_wind": [248, 249, 250, 251], "fl0": [248, 249, 250, 251], "whe": [248, 249, 250, 251], "ab": [248, 249, 250, 251], "estimate_climb_fuel_flow": [248, 249, 250, 251], "320": [248, 249, 250, 251], "estimate_descent_fuel_flow": [248, 249, 250, 251], "descend": [248, 249, 250, 251], "interpolate_climb_perform": [248, 249, 250, 251], "ptf": [248, 249, 250, 251], "interpol": [248, 249, 250, 251, 358, 386], "rocd": [248, 249, 250, 251], "gamma": [248, 249, 250, 251], "intepol": [248, 249, 250, 251], "set_climb_fuel_flow_detailled_rate_perform": [248, 249, 250, 251], "griddata": [248, 249, 250, 251], "nearest": [248, 249, 250, 251], "cubic": [248, 249, 250, 251], "climb_perf": [248, 249, 250, 251], "interpolate_cruise_nominal_mach": [248, 249, 250, 251], "nomin": [248, 249, 250, 251], "set_descent_fuel_flow_detailled_rate_perform": [248, 249, 250, 251], "interpolate_descent_perform": [248, 249, 250, 251], "descent_perf": [248, 249, 250, 251], "set_climb_descent_fuel_flow_perform": [248, 249, 250, 251], "climb_ff": [248, 249, 250, 251], "descent_ff": [248, 249, 250, 251], "roc": [248, 249, 250, 251], "funcion": [248, 249, 250, 251], "u": [248, 249, 250, 251], "massess": [248, 249, 250, 251], "rate": [248, 249, 250, 251], "kt": [248, 249, 250, 251, 263, 265, 266], "set_detailled_mach_nomin": [248, 249, 250, 251], "low": [248, 249, 250, 251], "altidu": [248, 249, 250, 251], "fl360": [248, 249, 250, 251], "higher": [248, 249, 250, 251], "trajectory_cruise_estimation_with_fl_chang": [248, 249, 250, 251], "fl_1": [248, 249, 250, 251, 260], "cruise_dist": [248, 249, 250, 251], "use_mref": [248, 249, 250, 251], "max_step": [248, 249, 250, 251], "min_d_dist": [248, 249, 250, 251], "climb_step": [248, 249, 250, 251], "max_climb": [248, 249, 250, 251], "min_dist_remaining_fl": [248, 249, 250, 251], "considereng": [248, 249, 250, 251], "cruise_fl": [248, 249, 250, 251], "360": [248, 249, 250, 251], "everytim": [248, 249, 250, 251], "divis": [248, 249, 250, 251], "trajectory_segment_climb_estimation_from_to": [248, 249, 250, 251], "weight_0": [248, 249, 250, 251, 260], "d_fl": [248, 249, 250, 251], "altitdu": [248, 249, 250, 251], "delta_fl": [248, 249, 250, 251], "trajectory_segment_climb_estimation_from_toc": [248, 249, 250, 251], "trajectory_segment_cruise_estim": [248, 249, 250, 251], "trajectory_segment_descent_estimation_from_lnd": [248, 249, 250, 251], "weight_lnd": [248, 249, 250, 251], "decent_perf": [248, 249, 250, 251], "v_stall": [249, 250, 251], "clbo_mo": [249, 250, 251], "aircraftperform": [249, 250, 251], "compute_drag": [249, 250, 251], "drag": [249, 250, 251], "340": [249, 250, 251], "67010": [249, 250, 251], "78": [249, 250, 251], "estimate_holding_fuel_flow": [249, 250, 251], "m_min": [249, 250, 251], "compute_min_max": [249, 250, 251], "aircraftperformancebada3": [250, 251], "34000": [253, 254, 255, 256, 262], "pa": 254, "288": 255, "sound": 255, "temperatur": 255, "kelvin": [255, 256], "feet": 255, "270": 255, "bada_vers": 258, "distance_orig_fp": 258, "trajectorycompon": [258, 260], "segment_typ": 260, "avg_wind": 260, "ca": 262, "451": 262, "precis": [263, 264, 265, 266], "km": [263, 264, 349, 350], "decim": [263, 264, 265, 266, 349, 350], "result_path": 268, "df_pax_a": 271, "remote_direct": [272, 282, 283, 287], "df_pf": [274, 276, 279], "df_hist": 275, "arrival_delay_label": 279, "tot_arrival_delai": 279, "do_single_valu": 279, "df_f": 285, "df_p": 285, "st": [290, 291], "d_full": 290, "matric": 290, "realt": 291, "con": 299, "path_profil": [301, 302, 304, 305, 306], "uniformis": [301, 302, 305], "mysql": [301, 304, 305, 308, 314, 315], "db_profile_credenti": [301, 304, 305], "ignor": [301, 304, 305, 309, 360], "column": [303, 334, 347, 348, 368, 409], "drop_tabl": 303, "create_t": 303, "deactivate_checks_kei": 303, "usernam": [304, 366], "password": [304, 309, 366], "ssh_tunnel": [304, 366, 392], "file_nam": [307, 308, 311, 313, 316], "other_para": [307, 313, 316], "fmt": [308, 314], "infer": 308, "One": 308, "kwargs_mysql": [308, 314], "read_mysql": [308, 312], "panda": [308, 309, 314, 315, 317, 409], "detect": [308, 321, 335], "fromm": 309, "index_col": 309, "quick": 309, "dirti": 309, "complex": [309, 321], "dictionnari": [309, 321, 323], "sqlalchemi": [309, 315], "db_name": 309, "db_connect": 309, "cnvert": 310, "duckdb": 310, "byte": [311, 316], "whould": 312, "creation": 312, "unstructur": 312, "contrari": 312, "create_fold": [313, 316], "append": [314, 315], "right": [314, 387], "write_sql": 314, "table_nam": 315, "key_for_upd": 315, "keys_for_upd": 315, "primary_dict": 315, "hard_upd": 315, "use_temp_csv": 315, "stuff": 315, "row": 315, "harmonis": 315, "insid": 317, "bloat": [317, 402], "sy": 317, "o": 317, "contextlib": 317, "numpi": [317, 343], "scipi": [317, 356, 357], "matplotlib": 317, "sig_p": [318, 355, 356, 357, 381, 388], "m_p": [318, 356, 388], "dic": [321, 377, 384], "multipl": 321, "sweep": 321, "interdepend": 321, "utilis": 321, "update_prior": 321, "to_upd": 321, "later": 321, "elsa": 321, "abm": 321, "analyse_depend": 321, "hit": 321, "finish": 321, "whose": 321, "indic": 321, "update_with_level": 321, "name_para": 321, "new_valu": 321, "label": 321, "9": [321, 329, 348], "d1": 323, "d2": 323, "fn": [326, 395], "col": [327, 328, 329, 338, 346, 347, 348], "met": [327, 328, 329, 348], "sem": [327, 328, 329, 348], "interv": [328, 347, 382], "q": [329, 348, 381], "6": [329, 348], "7": [329, 348, 408], "sample1": [330, 331, 372], "sample2": [330, 331, 372], "p_valu": [330, 331, 372, 373], "two_tail": [330, 331, 372, 373], "null": [330, 331], "hypothesi": [330, 331], "confid": [330, 331, 372], "word": 330, "signific": [330, 331, 372, 387], "independ": 331, "pearson": [331, 368], "resampl": 331, "elimin": 331, "useless": 331, "pearsonr": 331, "colour": 332, "add_kwarg": 332, "name_min_col1": 333, "flight_type_distance_gcd_km_min": 333, "name_min_col2": 333, "delay_min_minut": [333, 334], "value_column": 333, "add_lower_bound1": 333, "add_upper_bound1": 333, "value_lower_bound1": 333, "value_upper_bound1": 333, "add_lower_bound2": 333, "add_upper_bound2": 333, "value_lower_bound2": 333, "value_upper_bound2": 333, "name_min_col": 334, "name_max_col": 334, "delay_max_minut": 334, "add_lower_bound": 334, "add_upper_bound": 334, "value_lower_bound": 334, "value_upper_bound": 334, "1e": 335, "triangular": 335, "lattic": 335, "rectangl": 335, "node": 335, "abscissa": 335, "size": 335, "small": 335, "networkx": [335, 402], "graph": 335, "center": 336, "key_coord": [336, 383], "depth": [341, 378], "pt1": 342, "pt2": 342, "first_point": 343, "last_point": 343, "f_fit": 343, "p0": 343, "bound": [343, 378], "inf": 343, "signatur": [343, 367], "regress": 343, "p_0": 343, "guess": 343, "boolean": 343, "standaris": 343, "popt": 343, "optim": 343, "pcov": 343, "covari": 343, "f_fit_opt": 343, "linspac": 343, "w": [345, 361], "fast": 345, "stackoverflow": 345, "question": [345, 400], "48999542": 345, "effici": 345, "quantil": [347, 348], "lon1": [349, 350, 354], "lat1": [349, 350, 354], "lon2": [349, 350, 354], "lat2": [349, 350, 354], "calcul": [349, 350], "great": [349, 350], "circl": [349, 350], "earth": [349, 350], "degre": [349, 350], "latex": 352, "po": 353, "tick": 353, "fraction": 354, "mu_p": [355, 356, 357], "desir": [355, 356], "lognorm": [355, 356, 380], "underli": [355, 380], "median": 356, "direcli": 357, "eh": 358, "edf": 358, "invers": 358, "34": 358, "21": 358, "113": 358, "153": 358, "421": 358, "235": 358, "134": 358, "43": 358, "1234": 358, "52": 358, "iedf_x": 358, "obj": 359, "func": 360, "disk": 360, "my_func": 360, "Then": 360, "four": 360, "keyword": 360, "rep": 360, "verbose_load": 360, "tune": 360, "decor": 360, "modernis": 360, "mode": 361, "user_dict": [363, 364], "rename_column_dict": 364, "rename_index": 364, "hostnam": [366, 394], "connector": 366, "mysqldb": 366, "ssh_paramet": [366, 394], "allow_ag": [366, 394], "debug_level": [366, 394], "simpli": [366, 392], "nproc": 367, "a1": 367, "b1": 367, "a2": 367, "b2": 367, "a3": 367, "b3": 367, "25": 367, "40": 367, "corr_typ": 368, "partial": 368, "correl": 368, "remain": 368, "j": 368, "low_mem": [372, 373], "permut": 372, "bootstrap": 372, "slower": 372, "x2": 372, "memori": 372, "diff_sampl": 373, "themselv": 373, "v2": 374, "p1": 374, "p2": 374, "paras_fil": 376, "max_depth": 378, "target": 378, "001": 378, "norm": 380, "shiftx": 383, "shifti": 383, "color1": 386, "color2": 386, "min_valu": [386, 387], "max_valu": [386, 387], "color": [386, 387], "cmap_f": 387, "conjunct": 387, "map": 387, "legend": 387, "cbar": 387, "fig": 387, "colorbar": 387, "sm": 387, "hand": 387, "subplot": 387, "ax": 387, "set_ylabel": 387, "statist": 387, "n_cap": 391, "ssh_hostnam": 392, "ssh_usernam": 392, "ssh_password": 392, "ssh_pkei": 392, "ssh_key_password": 392, "incompat": 392, "ssh_tunnel_connect": 392, "wherea": 392, "paramiko": 392, "ssh": 393, "22": [394, 408], "args_it": 395, "kwargs_it": 395, "to_strip": 396, "listt": 397, "comment": 402, "compulsori": 402, "n_p": [407, 409], "n_o": 407, "loc_climb": 408, "dalt_cruis": 408, "p_change_alt_cruis": 408, "loc_desc": 408, "low_climb": 408, "high_climb": 408, "13": 408, "low_cruis": 408, "12": [8, 408], "high_cruis": 408, "low_desc": 408, "high_desc": 408, "14": 408, "dt": 408, "n_max_climb": 408, "18": 408, "n_max_cruis": 408, "n_min_climb": 408, "n_min_cruis": 408, "traj": [409, 410], "cut_off_altitud": 409, "alt": 409, "vertic": 410, "rubric": 321, "construct": 5, "manual": 550, "overview": [5, 550], "setup": [3, 12], "refer": [5, 550], "ubuntu": 8, "machin": 8, "lesser": 8, "extent": 8, "anaconda": 8, "recommend": 8, "linux": 8, "visual": 8, "studio": 8, "www": 8, "bada3_files_path": 8, "authorship": 550, "copyright": 550}, "objects": {"": [[13, 0, 0, "-", "agents"], [107, 0, 0, "-", "core"], [153, 0, 0, "-", "dashboard"], [155, 0, 0, "-", "libs"], [411, 0, 0, "-", "mercury"], [413, 0, 0, "-", "modules"]], "agents": [[14, 0, 0, "-", "agent_base"], [17, 0, 0, "-", "airline_operating_centre"], [25, 0, 0, "-", "aman"], [33, 0, 0, "-", "commodities"], [65, 0, 0, "-", "dman"], [71, 0, 0, "-", "eaman"], [76, 0, 0, "-", "flight"], [87, 0, 0, "-", "ground_airport"], [94, 0, 0, "-", "network_manager"], [100, 0, 0, "-", "radar"], [106, 0, 0, "-", "seed"]], "agents.agent_base": [[15, 1, 1, "", "Agent"], [16, 1, 1, "", "Role"]], "agents.agent_base.Agent": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "apply_agent_modifications"]], "agents.agent_base.Role": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "send"]], "agents.airline_operating_centre": [[18, 1, 1, "", "AirlineFlightPlanner"], [19, 1, 1, "", "AirlineOperatingCentre"], [20, 1, 1, "", "AirlinePaxHandler"], [21, 1, 1, "", "DynamicCostIndexComputer"], [22, 1, 1, "", "FlightPlanSelector"], [23, 1, 1, "", "PassengerReallocation"], [24, 1, 1, "", "TurnaroundOperations"]], "agents.airline_operating_centre.AirlineFlightPlanner": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "build_delay_cost_functions_advanced"], [18, 2, 1, "", "build_delay_cost_functions_air_heuristic"], [18, 2, 1, "", "build_delay_cost_functions_dci_l2"], [18, 2, 1, "", "build_delay_cost_functions_dci_l2_old"], [18, 2, 1, "", "build_delay_cost_functions_heuristic"], [18, 2, 1, "", "build_delay_cost_functions_heuristic_flight"], [18, 2, 1, "", "build_delay_cost_functions_heuristic_pax"], [18, 2, 1, "", "compute_reactionary_delays"], [18, 2, 1, "", "cost_not_wait_for_pax_group"], [18, 2, 1, "", "cost_wait_for_pax_group"], [18, 2, 1, "", "decide_options_alternatives"], [18, 2, 1, "", "reassess_departure_turnaround"], [18, 2, 1, "", "send"]], "agents.airline_operating_centre.AirlineOperatingCentre": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "apply_agent_modifications"], [19, 2, 1, "", "average_cost_function"], [19, 2, 1, "", "average_missed_pax_cost"], [19, 2, 1, "", "get_airline_of_flight"], [19, 2, 1, "", "get_airlines_in_alliance"], [19, 2, 1, "", "get_all_airlines"], [19, 2, 1, "", "get_average_price_on_leg"], [19, 2, 1, "", "get_curfew_buffer"], [19, 2, 1, "", "get_destination"], [19, 2, 1, "", "get_first_obt"], [19, 2, 1, "", "get_flights"], [19, 2, 1, "", "get_ibt"], [19, 2, 1, "", "get_last_ibt"], [19, 2, 1, "", "get_mct"], [19, 2, 1, "", "get_n_pax_to_board"], [19, 2, 1, "", "get_number_seats_flight"], [19, 2, 1, "", "get_number_seats_itinerary"], [19, 2, 1, "", "get_obt"], [19, 2, 1, "", "get_origin"], [19, 2, 1, "", "get_pax_to_board"], [19, 2, 1, "", "get_reactionary_buffer"], [19, 2, 1, "", "get_status"], [19, 2, 1, "", "get_tat"], [19, 2, 1, "", "get_total_travelling_time"], [19, 2, 1, "", "give_compensation_func"], [19, 2, 1, "", "give_delay_distr"], [19, 2, 1, "", "give_duty_of_care_func"], [19, 2, 1, "", "give_non_pax_cost_delay"], [19, 2, 1, "", "own_flights"], [19, 2, 1, "", "receive"], [19, 2, 1, "", "register_aircraft"], [19, 2, 1, "", "register_airport"], [19, 2, 1, "", "register_flight"], [19, 2, 1, "", "register_fp_pool"], [19, 2, 1, "", "register_list_aircraft"], [19, 2, 1, "", "register_nm"], [19, 2, 1, "", "register_pax_itinerary_group"], [19, 2, 1, "", "register_trajectories_pool"], [19, 2, 1, "", "set_log_file"]], "agents.airline_operating_centre.AirlinePaxHandler": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "arrive_pax"], [20, 2, 1, "", "board_pax"], [20, 2, 1, "", "send"]], "agents.airline_operating_centre.DynamicCostIndexComputer": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "build_delay_cost_functions_dci_l1"], [21, 2, 1, "", "build_delay_cost_functions_dci_l1_old"], [21, 2, 1, "", "cost_index_assessment"], [21, 2, 1, "", "decide_if_delay_recovery_performed"], [21, 2, 1, "", "plot_costs_dci"], [21, 2, 1, "", "reassess_cost_index_TA0"], [21, 2, 1, "", "reassess_cost_index_TA1"], [21, 2, 1, "", "reassess_cost_index_TA2"], [21, 2, 1, "", "send"], [21, 2, 1, "", "send_speed_up_msg_to_fpu"]], "agents.airline_operating_centre.FlightPlanSelector": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "decide_fp"], [22, 2, 1, "", "select_fp"], [22, 2, 1, "", "send"], [22, 2, 1, "", "send_option_selected"], [22, 2, 1, "", "wait_for_fp_selection_request"]], "agents.airline_operating_centre.PassengerReallocation": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "compute_reallocation_options"], [23, 2, 1, "", "do_reallocation"], [23, 2, 1, "", "reallocate_pax"], [23, 2, 1, "", "send"], [23, 2, 1, "", "send_allocation_pax_request"], [23, 2, 1, "", "wait_for_allocation_pax_request"], [23, 2, 1, "", "wait_for_reallocation_pax_request"], [23, 2, 1, "", "wait_for_remove_pax_from_boarding_list_request"]], "agents.airline_operating_centre.TurnaroundOperations": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "check_arrival"], [24, 2, 1, "", "check_delay_estimation"], [24, 2, 1, "", "send"]], "agents.aman": [[26, 1, 1, "", "AMAN"], [27, 1, 1, "", "ArrivalCancellationHandler"], [28, 1, 1, "", "ArrivalQueuePlannedUpdater"], [29, 1, 1, "", "ArrivalTacticalProvider"], [30, 1, 1, "", "FlightInAMANHandler"], [31, 1, 1, "", "SlotAssigner"], [32, 1, 1, "", "StrategicArrivalQueueBuilder"]], "agents.aman.AMAN": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "apply_agent_modifications"]], "agents.aman.ArrivalCancellationHandler": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "send"]], "agents.aman.ArrivalQueuePlannedUpdater": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "send"]], "agents.aman.ArrivalTacticalProvider": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "send"]], "agents.aman.FlightInAMANHandler": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "send"]], "agents.aman.SlotAssigner": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "send"]], "agents.aman.StrategicArrivalQueueBuilder": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "send"]], "agents.commodities": [[34, 0, 0, "-", "aircraft"], [36, 0, 0, "-", "alliance"], [38, 0, 0, "-", "arrival_slot"], [40, 0, 0, "-", "atfm_delay"], [42, 0, 0, "-", "atfm_regulation"], [45, 0, 0, "-", "central_registry"], [47, 0, 0, "-", "debug_flights"], [48, 0, 0, "-", "flight_plan"], [52, 0, 0, "-", "pax_itinerary_group"], [55, 0, 0, "-", "route"], [58, 0, 0, "-", "slot_queue"], [62, 0, 0, "-", "slot_queue_eaman"]], "agents.commodities.aircraft": [[35, 1, 1, "", "Aircraft"]], "agents.commodities.aircraft.Aircraft": [[35, 3, 1, "", "GetQueue"], [35, 3, 1, "", "PutQueue"], [35, 2, 1, "", "__init__"], [35, 2, 1, "", "add_flight"], [35, 4, 1, "", "capacity"], [35, 4, 1, "", "count"], [35, 3, 1, "", "get"], [35, 3, 1, "", "get_queue"], [35, 3, 1, "", "put"], [35, 3, 1, "", "put_queue"], [35, 3, 1, "", "queue"], [35, 3, 1, "", "release"], [35, 3, 1, "", "request"], [35, 3, 1, "", "users"]], "agents.commodities.alliance": [[37, 1, 1, "", "Alliance"]], "agents.commodities.alliance.Alliance": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "fromkeys"], [37, 2, 1, "", "get"], [37, 2, 1, "", "items"], [37, 2, 1, "", "keys"], [37, 2, 1, "", "pop"], [37, 2, 1, "", "popitem"], [37, 2, 1, "", "setdefault"], [37, 2, 1, "", "update"], [37, 2, 1, "", "values"]], "agents.commodities.arrival_slot": [[39, 1, 1, "", "ArrivalSlot"]], "agents.commodities.arrival_slot.ArrivalSlot": [[39, 2, 1, "", "__init__"]], "agents.commodities.atfm_delay": [[41, 1, 1, "", "ATFMDelay"]], "agents.commodities.atfm_delay.ATFMDelay": [[41, 2, 1, "", "__init__"]], "agents.commodities.atfm_regulation": [[43, 1, 1, "", "ATFMBooker"], [44, 1, 1, "", "ATFMRegulation"]], "agents.commodities.atfm_regulation.ATFMBooker": [[43, 3, 1, "", "GetQueue"], [43, 3, 1, "", "PutQueue"], [43, 2, 1, "", "__init__"], [43, 4, 1, "", "capacity"], [43, 4, 1, "", "count"], [43, 3, 1, "", "get"], [43, 3, 1, "", "get_queue"], [43, 3, 1, "", "put"], [43, 3, 1, "", "put_queue"], [43, 3, 1, "", "queue"], [43, 2, 1, "", "release"], [43, 3, 1, "", "request"], [43, 3, 1, "", "users"]], "agents.commodities.atfm_regulation.ATFMRegulation": [[44, 2, 1, "", "__init__"]], "agents.commodities.central_registry": [[46, 1, 1, "", "CentralRegistry"]], "agents.commodities.central_registry.CentralRegistry": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "get_average_price_on_leg"], [46, 2, 1, "", "get_reactionary_buffer"], [46, 2, 1, "", "get_tat"], [46, 2, 1, "", "get_total_travelling_time"], [46, 2, 1, "", "register_agent"], [46, 2, 1, "", "register_airline"], [46, 2, 1, "", "register_network_manager"]], "agents.commodities.flight_plan": [[49, 1, 1, "", "FlightPlan"], [50, 1, 1, "", "FlightPlanPoint"], [51, 5, 1, "", "build_proj"]], "agents.commodities.flight_plan.FlightPlan": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "add_point_original_planned"], [49, 2, 1, "", "find_intersecting_point"], [49, 2, 1, "", "get_estimated_fuel_consumption"], [49, 2, 1, "", "get_eta_wo_atfm"], [49, 2, 1, "", "get_planned_flying_time_to_landing"], [49, 2, 1, "", "name_point"], [49, 2, 1, "", "recompute_speeds_new_point"]], "agents.commodities.flight_plan.FlightPlanPoint": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "my_deep_copy"], [50, 2, 1, "", "print_full"], [50, 2, 1, "", "set_event"], [50, 2, 1, "", "set_name"]], "agents.commodities.pax_itinerary_group": [[53, 1, 1, "", "PaxItineraryGroup"], [54, 5, 1, "", "func"]], "agents.commodities.pax_itinerary_group.PaxItineraryGroup": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "get_itinerary_so_far"], [53, 2, 1, "", "give_itinerary"], [53, 2, 1, "", "give_new_itinerary_from_last_flight"]], "agents.commodities.route": [[56, 1, 1, "", "Route"], [57, 1, 1, "", "RoutePoint"]], "agents.commodities.route.Route": [[56, 2, 1, "", "__init__"]], "agents.commodities.route.RoutePoint": [[57, 2, 1, "", "__init__"]], "agents.commodities.slot_queue": [[59, 1, 1, "", "CapacityPeriod"], [60, 1, 1, "", "Slot"], [61, 1, 1, "", "SlotQueue"]], "agents.commodities.slot_queue.CapacityPeriod": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "get_slot_from_time"], [59, 2, 1, "", "get_slot_number"], [59, 2, 1, "", "get_time_from_slot_number"]], "agents.commodities.slot_queue.Slot": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "print_info"]], "agents.commodities.slot_queue.SlotQueue": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "assign_to_slot"], [61, 2, 1, "", "consolidate_queue"], [61, 2, 1, "", "get_slots_available"], [61, 2, 1, "", "print_selector"], [61, 2, 1, "", "swap_flights"], [61, 2, 1, "", "update_arrival_assigned"]], "agents.commodities.slot_queue_eaman": [[63, 1, 1, "", "EAMANSlot"], [64, 1, 1, "", "EAMANSlotQueue"]], "agents.commodities.slot_queue_eaman.EAMANSlot": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "print_info"]], "agents.commodities.slot_queue_eaman.EAMANSlotQueue": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "assign_to_slot"], [64, 2, 1, "", "consolidate_queue"], [64, 2, 1, "", "get_slots_available"], [64, 2, 1, "", "print_selector"], [64, 2, 1, "", "swap_flights"], [64, 2, 1, "", "update_arrival_assigned"]], "agents.dman": [[66, 1, 1, "", "DMAN"], [67, 1, 1, "", "DepartureCancellationHandler"], [68, 1, 1, "", "DepartureQueueUpdater"], [69, 1, 1, "", "DepartureSlotProvider"], [70, 1, 1, "", "StrategicDepartureQueueBuilder"]], "agents.dman.DMAN": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "apply_agent_modifications"], [66, 2, 1, "", "receive"], [66, 2, 1, "", "register_airport"], [66, 2, 1, "", "register_radar"], [66, 2, 1, "", "set_log_file"]], "agents.dman.DepartureCancellationHandler": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "send"]], "agents.dman.DepartureQueueUpdater": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "send"]], "agents.dman.DepartureSlotProvider": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "send"]], "agents.dman.StrategicDepartureQueueBuilder": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "build_departure_queue"], [70, 2, 1, "", "send"]], "agents.eaman": [[72, 1, 1, "", "ArrivalPlannerProvider"], [73, 1, 1, "", "ArrivalQueuePlannedUpdaterE"], [74, 1, 1, "", "EAMAN"], [75, 1, 1, "", "FlightInAMANHandlerE"]], "agents.eaman.ArrivalPlannerProvider": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "send"]], "agents.eaman.ArrivalQueuePlannedUpdaterE": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "send"]], "agents.eaman.EAMAN": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "apply_agent_modifications"]], "agents.eaman.FlightInAMANHandlerE": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "send"]], "agents.flight": [[77, 1, 1, "", "AircraftDepartingHandler"], [78, 1, 1, "", "DepartureSlotRequester"], [79, 1, 1, "", "FPInfoProvider"], [80, 1, 1, "", "Flight"], [81, 1, 1, "", "FlightArrivalInformationProvider"], [82, 1, 1, "", "FlightPlanConstraintUpdater"], [83, 1, 1, "", "FlightPlanUpdater"], [84, 1, 1, "", "GroundArrivalHandler"], [85, 1, 1, "", "OperateTrajectory"], [86, 1, 1, "", "PotentialDelayRecoveryProvider"]], "agents.flight.AircraftDepartingHandler": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "check_push_back"], [77, 2, 1, "", "do_taxi_out"], [77, 2, 1, "", "send"], [77, 2, 1, "", "wait_for_taxi_out_time"]], "agents.flight.DepartureSlotRequester": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "check_push_back_ready"], [78, 2, 1, "", "send"], [78, 2, 1, "", "wait_for_departure_slot"], [78, 2, 1, "", "wait_for_taxi_out_time_estimation"]], "agents.flight.FPInfoProvider": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "compute_fp_metrics"], [79, 2, 1, "", "send"]], "agents.flight.Flight": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "apply_agent_modifications"], [80, 2, 1, "", "print_full"], [80, 2, 1, "", "receive"], [80, 2, 1, "", "reschedule_fai_request"], [80, 2, 1, "", "set_log_file"], [80, 2, 1, "", "transfer_to_aoc"]], "agents.flight.FlightArrivalInformationProvider": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "check_fai_request"], [81, 2, 1, "", "compute_cost_slots"], [81, 2, 1, "", "provide_flight_arrival_information"], [81, 2, 1, "", "provide_flight_estimated_landing_time"], [81, 2, 1, "", "send"], [81, 2, 1, "", "wait_for_flight_arrival_information_request"], [81, 2, 1, "", "wait_for_flight_estimated_landing_time_request"]], "agents.flight.FlightPlanConstraintUpdater": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "send"], [82, 2, 1, "", "update_flight_plan_constraint_controlled_landing_time"], [82, 2, 1, "", "wait_for_flight_plan_controlled_landing_time_constraint_update_request"]], "agents.flight.FlightPlanUpdater": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "assing_FP_no_compute"], [83, 2, 1, "", "send"], [83, 2, 1, "", "update_FP_information"], [83, 2, 1, "", "update_eobt"], [83, 2, 1, "", "update_speed"], [83, 2, 1, "", "wait_for_FP_assigment_no_compute"], [83, 2, 1, "", "wait_for_FP_update"], [83, 2, 1, "", "wait_for_eobt_update"], [83, 2, 1, "", "wait_for_speed_update"]], "agents.flight.GroundArrivalHandler": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "check_landed"], [84, 2, 1, "", "do_taxi_in"], [84, 2, 1, "", "request_taxi_in_time"], [84, 2, 1, "", "send"], [84, 2, 1, "", "wait_for_taxi_in_time"]], "agents.flight.OperateTrajectory": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "check_taxi_out_done"], [85, 2, 1, "", "send"]], "agents.flight.PotentialDelayRecoveryProvider": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "compute_potential_delay_recovery"], [86, 2, 1, "", "estimate_time_fuel_at_speed_change"], [86, 2, 1, "", "estimate_time_fuel_speed_changes"], [86, 2, 1, "", "provide_potential_delay_recover_information"], [86, 2, 1, "", "send"], [86, 2, 1, "", "wait_for_potential_delay_recover_request"]], "agents.ground_airport": [[88, 1, 1, "", "GroundAirport"], [89, 1, 1, "", "GroundHandler"], [90, 1, 1, "", "ProvideConnectingTime"], [91, 1, 1, "", "TaxiInProvider"], [92, 1, 1, "", "TaxiOutEstimator"], [93, 1, 1, "", "TaxiOutProvider"]], "agents.ground_airport.GroundAirport": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "apply_agent_modifications"], [88, 2, 1, "", "give_connecting_time_dist"], [88, 2, 1, "", "give_taxi_in_time_estimation_dist"], [88, 2, 1, "", "give_taxi_out_time_estimation_dist"], [88, 2, 1, "", "give_taxi_time_add_dist"], [88, 2, 1, "", "give_turnaround_time_dists"], [88, 2, 1, "", "receive"], [88, 2, 1, "", "register_dman"], [88, 2, 1, "", "register_eaman"], [88, 2, 1, "", "register_flight"], [88, 2, 1, "", "set_log_file"]], "agents.ground_airport.GroundHandler": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "compute_turnaround_time"], [89, 2, 1, "", "do_turnaround"], [89, 2, 1, "", "send"], [89, 2, 1, "", "wait_for_turnaround_request"]], "agents.ground_airport.ProvideConnectingTime": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "send"]], "agents.ground_airport.TaxiInProvider": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "compute_taxi_in_time"], [91, 2, 1, "", "send"]], "agents.ground_airport.TaxiOutEstimator": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "send"]], "agents.ground_airport.TaxiOutProvider": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "compute_taxi_out_time"], [93, 2, 1, "", "send"]], "agents.network_manager": [[95, 1, 1, "", "HotspotManager"], [96, 1, 1, "", "NetworkManager"], [97, 1, 1, "", "NetworkManagerAcceptAndDisseminateFP"], [98, 1, 1, "", "NetworkManagerCancelFP"], [99, 1, 1, "", "NetworkManagerFlightPlanProcessing"]], "agents.network_manager.HotspotManager": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "send"]], "agents.network_manager.NetworkManager": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "apply_agent_modifications"], [96, 2, 1, "", "register_atfm_regulation"], [96, 2, 1, "", "remove_regulation_slots_except"]], "agents.network_manager.NetworkManagerAcceptAndDisseminateFP": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "send"]], "agents.network_manager.NetworkManagerCancelFP": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "send"]], "agents.network_manager.NetworkManagerFlightPlanProcessing": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "compute_atfm_delay"], [99, 2, 1, "", "send"]], "agents.radar": [[101, 1, 1, "", "DisseminateCancellationFlightPlan"], [102, 1, 1, "", "DisseminateFlightPlan"], [103, 1, 1, "", "DisseminateFlightPositionUpdate"], [104, 1, 1, "", "Radar"], [105, 1, 1, "", "RadarAugmentFlightPlan"]], "agents.radar.DisseminateCancellationFlightPlan": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "send"]], "agents.radar.DisseminateFlightPlan": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "add_subscription"], [102, 2, 1, "", "disseminate_flight_plan"], [102, 2, 1, "", "send"]], "agents.radar.DisseminateFlightPositionUpdate": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "check_flight_crossing_point"], [103, 2, 1, "", "send"]], "agents.radar.Radar": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "apply_agent_modifications"], [104, 2, 1, "", "receive"], [104, 2, 1, "", "register_airport"], [104, 2, 1, "", "set_log_file"]], "agents.radar.RadarAugmentFlightPlan": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "augment_flight_plan"], [105, 2, 1, "", "send"]], "core": [[108, 0, 0, "-", "delivery_system"], [112, 0, 0, "-", "module_management"], [118, 0, 0, "-", "parametriser"], [123, 0, 0, "-", "read_config"], [134, 0, 0, "-", "results_aggregator"], [140, 0, 0, "-", "scenario_loader"], [146, 0, 0, "-", "simulation_manager"], [150, 0, 0, "-", "world_builder"]], "core.delivery_system": [[109, 1, 1, "", "Letter"], [110, 1, 1, "", "LetterBox"], [111, 1, 1, "", "Postman"]], "core.delivery_system.Letter": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "clear"], [109, 2, 1, "", "copy"], [109, 2, 1, "", "fromkeys"], [109, 2, 1, "", "get"], [109, 2, 1, "", "items"], [109, 2, 1, "", "keys"], [109, 2, 1, "", "pop"], [109, 2, 1, "", "popitem"], [109, 2, 1, "", "setdefault"], [109, 2, 1, "", "update"], [109, 2, 1, "", "values"]], "core.delivery_system.LetterBox": [[110, 2, 1, "", "__init__"]], "core.delivery_system.Postman": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "register_agent"], [111, 2, 1, "", "send_hmi"]], "core.module_management": [[113, 5, 1, "", "check_incompatibilities"], [114, 5, 1, "", "find_actual_module_name"], [115, 5, 1, "", "get_all_modules"], [116, 5, 1, "", "get_module_paras"], [117, 5, 1, "", "load_mercury_module"]], "core.parametriser": [[119, 1, 1, "", "Parametriser"], [120, 1, 1, "", "ParametriserCapacity"], [121, 1, 1, "", "ParametriserSelector"], [122, 1, 1, "", "ParametriserStandard"]], "core.parametriser.Parametriser": [[119, 2, 1, "", "__init__"]], "core.parametriser.ParametriserCapacity": [[120, 2, 1, "", "__init__"]], "core.parametriser.ParametriserSelector": [[121, 2, 1, "", "__init__"]], "core.parametriser.ParametriserStandard": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "apply_alpha_compensation_magnitude"], [122, 2, 1, "", "apply_alpha_doc_magnitude"], [122, 2, 1, "", "apply_alpha_mct"], [122, 2, 1, "", "apply_alpha_non_ATFM"], [122, 2, 1, "", "apply_alpha_tat_mean"], [122, 2, 1, "", "apply_anchor"], [122, 2, 1, "", "apply_dci_max_threshold"], [122, 2, 1, "", "apply_dci_min_threshold"], [122, 2, 1, "", "apply_delta_mct"]], "core.read_config": [[124, 5, 1, "", "add_output_process"], [125, 5, 1, "", "find_paras_categories"], [126, 5, 1, "", "flatten_paras_dict"], [127, 5, 1, "", "read_mercury_config"], [128, 5, 1, "", "read_scenario_config"], [129, 5, 1, "", "read_toml"], [130, 5, 1, "", "transform_conf_paras"], [131, 5, 1, "", "unflatten_profiles"], [132, 5, 1, "", "unfold_paras_dict"], [133, 5, 1, "", "update_scenario_paras_based_on_case_study"]], "core.results_aggregator": [[135, 1, 1, "", "ResultAggregatorAdvanced"], [136, 1, 1, "", "ResultsAggregator"], [137, 1, 1, "", "ResultsAggregatorSelector"], [138, 1, 1, "", "ResultsAggregatorSimple"], [139, 1, 1, "", "ResultsAggregatorSimpleReduced"]], "core.results_aggregator.ResultAggregatorAdvanced": [[135, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregator": [[136, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSelector": [[137, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSimple": [[138, 2, 1, "", "__init__"]], "core.results_aggregator.ResultsAggregatorSimpleReduced": [[139, 2, 1, "", "__init__"]], "core.scenario_loader": [[141, 1, 1, "", "ScenarioLoader"], [142, 1, 1, "", "ScenarioLoaderSelector"], [143, 1, 1, "", "ScenarioLoaderSimple"], [144, 1, 1, "", "ScenarioLoaderStandard"], [145, 1, 1, "", "ScenarioLoaderStandardLocal"]], "core.scenario_loader.ScenarioLoader": [[141, 2, 1, "", "__init__"]], "core.scenario_loader.ScenarioLoaderSelector": [[142, 2, 1, "", "__init__"]], "core.scenario_loader.ScenarioLoaderSimple": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "reload"]], "core.scenario_loader.ScenarioLoaderStandard": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "create_flight_plans"], [144, 2, 1, "", "reload"]], "core.scenario_loader.ScenarioLoaderStandardLocal": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "create_flight_plans"], [145, 2, 1, "", "reload"]], "core.simulation_manager": [[147, 1, 1, "", "Mercury"], [148, 5, 1, "", "build_command"], [149, 5, 1, "", "create_paras_file_from_dict"]], "core.simulation_manager.Mercury": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "build_agents"], [147, 2, 1, "", "compute_path"], [147, 2, 1, "", "run"]], "core.world_builder": [[151, 1, 1, "", "World"], [152, 5, 1, "", "trace"]], "core.world_builder.World": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "create_AMANs"], [151, 2, 1, "", "load_scenario"]], "dashboard": [[154, 0, 0, "-", "mercury_gui"]], "libs": [[156, 0, 0, "-", "airspace_particularities"], [160, 0, 0, "-", "db_access_functions"], [231, 0, 0, "-", "input_manager"], [237, 0, 0, "-", "other_tools"], [246, 0, 0, "-", "performance_trajectory"], [267, 0, 0, "-", "result_manager"], [269, 0, 0, "-", "result_tools"], [288, 0, 0, "-", "uow_tool_belt"]], "libs.airspace_particularities": [[157, 5, 1, "", "get_nas_airport"], [158, 5, 1, "", "is_ATFM_AREA"], [159, 5, 1, "", "is_ECAC"]], "libs.db_access_functions": [[161, 1, 1, "", "DataAccessBADA4"], [162, 1, 1, "", "DataAccessPerformance"], [163, 5, 1, "", "add_crco_to_flights_in_db"], [164, 5, 1, "", "get_information_routes_o_d_generated"], [165, 5, 1, "", "read_ATFM_at_airports"], [166, 5, 1, "", "read_ATFM_at_airports_days"], [167, 5, 1, "", "read_ATFM_at_airports_manual"], [168, 5, 1, "", "read_ATFM_at_airports_old"], [169, 5, 1, "", "read_MCT"], [170, 5, 1, "", "read_airlines_data"], [171, 5, 1, "", "read_airport_coords"], [172, 5, 1, "", "read_airports_curfew_data"], [173, 5, 1, "", "read_airports_data"], [174, 5, 1, "", "read_airports_modif_data"], [175, 5, 1, "", "read_airspace_static"], [176, 5, 1, "", "read_all_regulation_days"], [177, 5, 1, "", "read_compensation_data"], [178, 5, 1, "", "read_coord_trajectory_route"], [179, 5, 1, "", "read_coord_trajectory_route_based_on_id"], [180, 5, 1, "", "read_countries_ATFM_NAS"], [181, 5, 1, "", "read_crco"], [182, 5, 1, "", "read_crco_charges"], [183, 5, 1, "", "read_dict_ac_bada_code_ac_model"], [184, 5, 1, "", "read_dict_ac_type_wtc"], [185, 5, 1, "", "read_dict_fp_pool_ids"], [186, 5, 1, "", "read_doc_data"], [187, 5, 1, "", "read_eamans_data"], [188, 5, 1, "", "read_estimated_avg_costs_curfews"], [189, 5, 1, "", "read_extra_cruise_if_dci"], [190, 5, 1, "", "read_flight_plan_ansps_weights_for_crco"], [191, 5, 1, "", "read_flight_schedules"], [192, 5, 1, "", "read_flight_schedules2"], [193, 5, 1, "", "read_flight_set"], [194, 5, 1, "", "read_flight_uncertainty"], [195, 5, 1, "", "read_fp_pool"], [196, 5, 1, "", "read_fp_pool_missing"], [197, 5, 1, "", "read_fp_routes_without_crco"], [198, 5, 1, "", "read_iedf_atfm"], [199, 5, 1, "", "read_iedf_wind_dict"], [200, 5, 1, "", "read_itineraries_data"], [201, 5, 1, "", "read_nas_route_pool"], [202, 5, 1, "", "read_nas_route_pool_static_o_d"], [203, 5, 1, "", "read_non_pax_cost_data"], [204, 5, 1, "", "read_non_pax_cost_fit_data"], [205, 5, 1, "", "read_nonpax_cost_curfews"], [206, 5, 1, "", "read_od_in_historic_od_computed_pool"], [207, 5, 1, "", "read_orig_destination_via_intermediate_shortest"], [208, 5, 1, "", "read_passenger_flows"], [209, 5, 1, "", "read_passenger_options"], [210, 5, 1, "", "read_perc_min_perc_max_regulations_days"], [211, 5, 1, "", "read_prob_atfm"], [212, 5, 1, "", "read_regulation_days_at_an_airport"], [213, 5, 1, "", "read_route_pool"], [214, 5, 1, "", "read_route_pool_o_d_generated"], [215, 5, 1, "", "read_route_pool_static"], [216, 5, 1, "", "read_scenario"], [217, 5, 1, "", "read_scenario_paras"], [218, 5, 1, "", "read_schedules"], [219, 5, 1, "", "read_seed"], [220, 5, 1, "", "read_soft_cost_date"], [221, 5, 1, "", "read_trajectories"], [222, 5, 1, "", "read_trajectories_dataframe"], [223, 5, 1, "", "read_trajectories_ids"], [224, 5, 1, "", "read_trajectories_missing"], [225, 5, 1, "", "read_trajectories_missing_in_interval"], [226, 5, 1, "", "read_trajectories_options"], [227, 5, 1, "", "read_trajectories_pool"], [228, 5, 1, "", "read_turnaround_data"], [229, 5, 1, "", "save_trajectories_pool"], [230, 5, 1, "", "save_trajectories_segments"]], "libs.db_access_functions.DataAccessBADA4": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "read_dict_wtc_engine_model"]], "libs.db_access_functions.DataAccessPerformance": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "read_dict_wtc_engine_model"]], "libs.input_manager": [[232, 1, 1, "", "Input_manager"], [233, 5, 1, "", "filter_df"], [234, 5, 1, "", "filter_sql"], [235, 5, 1, "", "read_data_from_dict"], [236, 5, 1, "", "write_toml"]], "libs.input_manager.Input_manager": [[232, 2, 1, "", "__init__"]], "libs.other_tools": [[238, 1, 1, "", "FlightDummy"], [239, 1, 1, "", "SlotDummy"], [240, 5, 1, "", "allocation_from_flights"], [241, 5, 1, "", "clone_pax"], [242, 5, 1, "", "compatible_slots"], [243, 5, 1, "", "compute_FPFS_allocation"], [244, 5, 1, "", "distance_func"], [245, 5, 1, "", "flight_str"]], "libs.other_tools.FlightDummy": [[238, 2, 1, "", "__init__"]], "libs.other_tools.SlotDummy": [[239, 2, 1, "", "__init__"]], "libs.performance_trajectory": [[247, 0, 0, "-", "ac_performances"], [252, 0, 0, "-", "standard_atmosphere"], [257, 0, 0, "-", "trajectory"], [261, 0, 0, "-", "unit_conversions"]], "libs.performance_trajectory.ac_performances": [[248, 1, 1, "", "AircraftPerformance"], [249, 1, 1, "", "AircraftPerformanceBada3"], [250, 1, 1, "", "AircraftPerformanceBada3Jet"], [251, 1, 1, "", "AircraftPerformanceBada3TP"]], "libs.performance_trajectory.ac_performances.AircraftPerformance": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "apu_fuel_flow"], [248, 2, 1, "", "arrival_costs_per_minute"], [248, 2, 1, "", "at_gate_costs_per_minute"], [248, 2, 1, "", "avg_climb_descent_ff"], [248, 2, 1, "", "compute_sr"], [248, 2, 1, "", "en_route_costs_per_minute"], [248, 2, 1, "", "error_climb_weight_from_toc"], [248, 2, 1, "", "error_extra_cruise"], [248, 2, 1, "", "estimate_climb_fuel_flow"], [248, 2, 1, "", "estimate_descent_fuel_flow"], [248, 2, 1, "", "interpolate_climb_performances"], [248, 2, 1, "", "interpolate_cruise_nominal_mach"], [248, 2, 1, "", "interpolate_descent_performances"], [248, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [248, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [248, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [248, 2, 1, "", "set_detailled_mach_nominal"], [248, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [248, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [248, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [248, 2, 1, "", "trajectory_segment_cruise_estimation"], [248, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3": [[249, 2, 1, "", "__init__"], [249, 2, 1, "", "apu_fuel_flow"], [249, 2, 1, "", "arrival_costs_per_minute"], [249, 2, 1, "", "at_gate_costs_per_minute"], [249, 2, 1, "", "avg_climb_descent_ff"], [249, 2, 1, "", "compute_drag"], [249, 2, 1, "", "compute_sr"], [249, 2, 1, "", "en_route_costs_per_minute"], [249, 2, 1, "", "error_climb_weight_from_toc"], [249, 2, 1, "", "error_extra_cruise"], [249, 2, 1, "", "estimate_climb_fuel_flow"], [249, 2, 1, "", "estimate_descent_fuel_flow"], [249, 2, 1, "", "estimate_holding_fuel_flow"], [249, 2, 1, "", "interpolate_climb_performances"], [249, 2, 1, "", "interpolate_cruise_nominal_mach"], [249, 2, 1, "", "interpolate_descent_performances"], [249, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [249, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [249, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [249, 2, 1, "", "set_detailled_mach_nominal"], [249, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [249, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [249, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [249, 2, 1, "", "trajectory_segment_cruise_estimation"], [249, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "apu_fuel_flow"], [250, 2, 1, "", "arrival_costs_per_minute"], [250, 2, 1, "", "at_gate_costs_per_minute"], [250, 2, 1, "", "avg_climb_descent_ff"], [250, 2, 1, "", "compute_drag"], [250, 2, 1, "", "compute_sr"], [250, 2, 1, "", "en_route_costs_per_minute"], [250, 2, 1, "", "error_climb_weight_from_toc"], [250, 2, 1, "", "error_extra_cruise"], [250, 2, 1, "", "estimate_climb_fuel_flow"], [250, 2, 1, "", "estimate_descent_fuel_flow"], [250, 2, 1, "", "estimate_holding_fuel_flow"], [250, 2, 1, "", "interpolate_climb_performances"], [250, 2, 1, "", "interpolate_cruise_nominal_mach"], [250, 2, 1, "", "interpolate_descent_performances"], [250, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [250, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [250, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [250, 2, 1, "", "set_detailled_mach_nominal"], [250, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [250, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [250, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [250, 2, 1, "", "trajectory_segment_cruise_estimation"], [250, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "apu_fuel_flow"], [251, 2, 1, "", "arrival_costs_per_minute"], [251, 2, 1, "", "at_gate_costs_per_minute"], [251, 2, 1, "", "avg_climb_descent_ff"], [251, 2, 1, "", "compute_drag"], [251, 2, 1, "", "compute_sr"], [251, 2, 1, "", "en_route_costs_per_minute"], [251, 2, 1, "", "error_climb_weight_from_toc"], [251, 2, 1, "", "error_extra_cruise"], [251, 2, 1, "", "estimate_climb_fuel_flow"], [251, 2, 1, "", "estimate_descent_fuel_flow"], [251, 2, 1, "", "estimate_holding_fuel_flow"], [251, 2, 1, "", "interpolate_climb_performances"], [251, 2, 1, "", "interpolate_cruise_nominal_mach"], [251, 2, 1, "", "interpolate_descent_performances"], [251, 2, 1, "", "set_climb_descent_fuel_flow_performances"], [251, 2, 1, "", "set_climb_fuel_flow_detailled_rate_performances"], [251, 2, 1, "", "set_descent_fuel_flow_detailled_rate_performances"], [251, 2, 1, "", "set_detailled_mach_nominal"], [251, 2, 1, "", "trajectory_cruise_estimation_with_fl_change"], [251, 2, 1, "", "trajectory_segment_climb_estimation_from_to"], [251, 2, 1, "", "trajectory_segment_climb_estimation_from_toc"], [251, 2, 1, "", "trajectory_segment_cruise_estimation"], [251, 2, 1, "", "trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.standard_atmosphere": [[253, 5, 1, "", "density"], [254, 5, 1, "", "pressure"], [255, 5, 1, "", "sound_speed"], [256, 5, 1, "", "temperature"]], "libs.performance_trajectory.trajectory": [[258, 1, 1, "", "Trajectory"], [259, 1, 1, "", "TrajectoryComponent"], [260, 1, 1, "", "TrajectorySegment"]], "libs.performance_trajectory.trajectory.Trajectory": [[258, 2, 1, "", "__init__"]], "libs.performance_trajectory.trajectory.TrajectoryComponent": [[259, 2, 1, "", "__init__"]], "libs.performance_trajectory.trajectory.TrajectorySegment": [[260, 2, 1, "", "__init__"]], "libs.performance_trajectory.unit_conversions": [[262, 5, 1, "", "cas2tas"], [263, 5, 1, "", "km2kt"], [264, 5, 1, "", "km2m"], [265, 5, 1, "", "kt2m"], [266, 5, 1, "", "m2kt"]], "libs.result_manager": [[268, 1, 1, "", "Result_manager"]], "libs.result_manager.Result_manager": [[268, 2, 1, "", "__init__"]], "libs.result_tools": [[270, 5, 1, "", "binarise"], [271, 5, 1, "", "build_aligned_pax_flight_df"], [272, 5, 1, "", "build_single_iteration_df"], [273, 5, 1, "", "clone_pax"], [274, 5, 1, "", "compute_derived_metrics_hist_sim"], [275, 5, 1, "", "compute_derived_metrics_historical"], [276, 5, 1, "", "compute_derived_metrics_pax_generic"], [277, 5, 1, "", "compute_derived_metrics_simulations"], [278, 5, 1, "", "compute_metrics_flights"], [279, 5, 1, "", "compute_metrics_pax"], [280, 5, 1, "", "find_destination_generic"], [281, 5, 1, "", "find_origin_generic"], [282, 5, 1, "", "get_historical_flights"], [283, 5, 1, "", "get_pax_schedules"], [284, 5, 1, "", "merge_hist_sim"], [285, 5, 1, "", "merge_pax_flights"], [286, 5, 1, "", "produce_hist_sim_df"], [287, 5, 1, "", "produce_historical_flight_pax_df"]], "libs.uow_tool_belt": [[289, 0, 0, "-", "DTW"], [292, 0, 0, "-", "airspace_particularities"], [296, 0, 0, "-", "connection_tools"], [317, 0, 0, "-", "general_tools"], [401, 0, 0, "-", "logging"], [402, 0, 0, "-", "network_tools"], [403, 0, 0, "-", "plot_tools"], [406, 0, 0, "-", "trajectory_tools"]], "libs.uow_tool_belt.DTW": [[290, 5, 1, "", "dtw"], [291, 5, 1, "", "dtw_path"]], "libs.uow_tool_belt.airspace_particularities": [[293, 5, 1, "", "get_nas_airport"], [294, 5, 1, "", "is_ATFM_AREA"], [295, 5, 1, "", "is_ECAC"]], "libs.uow_tool_belt.connection_tools": [[297, 1, 1, "", "EmptyConnection"], [298, 5, 1, "", "create_indexes_in_table"], [299, 5, 1, "", "do_query"], [300, 5, 1, "", "extract_ssh_parameters"], [301, 5, 1, "", "file_connection"], [302, 5, 1, "", "generic_connection"], [303, 5, 1, "", "load_data_infile"], [304, 5, 1, "", "mysql_connection"], [305, 5, 1, "", "parquet_connection"], [306, 5, 1, "", "read_cred"], [307, 5, 1, "", "read_csv"], [308, 5, 1, "", "read_data"], [309, 5, 1, "", "read_mysql"], [310, 5, 1, "", "read_parquet"], [311, 5, 1, "", "read_pickle"], [312, 5, 1, "", "run_mysql_query"], [313, 5, 1, "", "write_csv"], [314, 5, 1, "", "write_data"], [315, 5, 1, "", "write_mysql"], [316, 5, 1, "", "write_pickle"]], "libs.uow_tool_belt.connection_tools.EmptyConnection": [[297, 2, 1, "", "__init__"], [297, 2, 1, "", "clear"], [297, 2, 1, "", "copy"], [297, 2, 1, "", "fromkeys"], [297, 2, 1, "", "get"], [297, 2, 1, "", "items"], [297, 2, 1, "", "keys"], [297, 2, 1, "", "pop"], [297, 2, 1, "", "popitem"], [297, 2, 1, "", "setdefault"], [297, 2, 1, "", "update"], [297, 2, 1, "", "values"]], "libs.uow_tool_belt.general_tools": [[318, 5, 1, "", "A_B"], [319, 1, 1, "", "DummyFile"], [320, 1, 1, "", "HiddenPrints"], [321, 1, 1, "", "Paras"], [322, 1, 1, "", "TwoWayDict"], [323, 5, 1, "", "add_dicts"], [324, 5, 1, "", "alert_print"], [325, 5, 1, "", "alphabet"], [326, 5, 1, "", "apply_args_and_kwargs"], [327, 5, 1, "", "average_on_downsampled_interval"], [328, 5, 1, "", "average_on_intervals"], [329, 5, 1, "", "average_on_quantiles"], [330, 5, 1, "", "bootstrap_mean_test"], [331, 5, 1, "", "bootstrap_test"], [332, 5, 1, "", "build_col_print_func"], [333, 5, 1, "", "build_step_bivariate_function"], [334, 5, 1, "", "build_step_multi_valued_function"], [335, 5, 1, "", "build_triangular"], [336, 5, 1, "", "center_spatial_network"], [337, 5, 1, "", "clock_time"], [338, 5, 1, "", "compute_percentile_with_weight"], [339, 5, 1, "", "counter"], [340, 5, 1, "", "create_dir"], [341, 5, 1, "", "dict_depth"], [342, 5, 1, "", "distance_euclidean"], [343, 5, 1, "", "fit"], [344, 5, 1, "", "get_first_matching_element"], [345, 5, 1, "", "gini"], [346, 5, 1, "", "groupby_on_downsampled_interval"], [347, 5, 1, "", "groupby_on_intervals"], [348, 5, 1, "", "groupby_on_quantiles"], [349, 5, 1, "", "haversine"], [350, 5, 1, "", "haversine_old"], [351, 5, 1, "", "hex_to_rgb"], [352, 5, 1, "", "human_format"], [353, 5, 1, "", "human_format_for_ticks"], [354, 5, 1, "", "intermediate_point"], [355, 5, 1, "", "inv_mu_sig_lognorm"], [356, 5, 1, "", "inv_s_loc_scale_lognorm"], [357, 5, 1, "", "inv_s_scale_lognorm"], [358, 5, 1, "", "inverted_edf"], [359, 5, 1, "", "keep_time"], [360, 5, 1, "", "loading"], [361, 5, 1, "", "logging"], [362, 5, 1, "", "loop"], [363, 5, 1, "", "make_df_with_3_levels"], [364, 5, 1, "", "make_df_with_3_levels_quick"], [365, 5, 1, "", "make_nested_dict_from_df"], [366, 5, 1, "", "mysql_server"], [367, 5, 1, "", "parallelize"], [368, 5, 1, "", "partial_corr"], [369, 5, 1, "", "percentile_10"], [370, 5, 1, "", "percentile_90"], [371, 5, 1, "", "percentile_custom"], [372, 5, 1, "", "permutation_test"], [373, 5, 1, "", "permutation_test_only_diff"], [374, 5, 1, "", "proportional"], [375, 5, 1, "", "r_squared"], [376, 5, 1, "", "read_paras"], [377, 5, 1, "", "recursive_concat"], [378, 5, 1, "", "recursive_minimization"], [379, 5, 1, "", "remove_nan_coupled_lists"], [380, 5, 1, "", "scale_and_s_from_mean_sigma_lognorm"], [381, 5, 1, "", "scale_and_s_from_quantile_sigma_lognorm"], [382, 5, 1, "", "set_interval"], [383, 5, 1, "", "shift_spatial_network"], [384, 5, 1, "", "show_dic"], [385, 5, 1, "", "silence"], [386, 5, 1, "", "simple_color_map_function"], [387, 5, 1, "", "simple_colormap_object"], [388, 5, 1, "", "sol_Bs"], [389, 5, 1, "", "sort_lists"], [390, 5, 1, "", "sort_paired_values"], [391, 5, 1, "", "spread_integer"], [392, 5, 1, "", "ssh_client_connection"], [393, 5, 1, "", "ssh_copy"], [394, 5, 1, "", "ssh_tunnel_connection"], [395, 5, 1, "", "starmap_with_kwargs"], [396, 5, 1, "", "strip_string"], [397, 5, 1, "", "timeit"], [398, 5, 1, "", "weight_avg"], [399, 5, 1, "", "write_on_file"], [400, 5, 1, "", "yes"]], "libs.uow_tool_belt.general_tools.DummyFile": [[319, 2, 1, "", "__init__"]], "libs.uow_tool_belt.general_tools.HiddenPrints": [[320, 2, 1, "", "__init__"]], "libs.uow_tool_belt.general_tools.Paras": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "analyse_dependance"], [321, 2, 1, "", "clear"], [321, 2, 1, "", "copy"], [321, 2, 1, "", "fromkeys"], [321, 2, 1, "", "get"], [321, 2, 1, "", "items"], [321, 2, 1, "", "keys"], [321, 2, 1, "", "pop"], [321, 2, 1, "", "popitem"], [321, 2, 1, "", "setdefault"], [321, 2, 1, "", "update"], [321, 2, 1, "", "update_with_levels"], [321, 2, 1, "", "values"]], "libs.uow_tool_belt.general_tools.TwoWayDict": [[322, 2, 1, "", "__init__"], [322, 2, 1, "", "clear"], [322, 2, 1, "", "copy"], [322, 2, 1, "", "fromkeys"], [322, 2, 1, "", "get"], [322, 2, 1, "", "items"], [322, 2, 1, "", "keys"], [322, 2, 1, "", "pop"], [322, 2, 1, "", "popitem"], [322, 2, 1, "", "setdefault"], [322, 2, 1, "", "update"], [322, 2, 1, "", "values"]], "libs.uow_tool_belt.plot_tools": [[404, 5, 1, "", "bar_plot_template"], [405, 5, 1, "", "savefig"]], "libs.uow_tool_belt.trajectory_tools": [[407, 5, 1, "", "compute_ab"], [408, 5, 1, "", "create_vertical_trajectory"], [409, 5, 1, "", "detect_toc_tod"], [410, 5, 1, "", "plot_traj"]], "mercury": [[412, 5, 1, "", "manual_bool_cast"]], "modules": [[414, 0, 0, "-", "Auction"], [418, 0, 0, "-", "CM"], [428, 0, 0, "-", "FAC"], [446, 0, 0, "-", "FP"], [452, 0, 0, "-", "HMI_HOTSPOT"], [500, 0, 0, "-", "TA"], [510, 0, 0, "-", "nostromo_EAMAN"]], "modules.Auction": [[415, 0, 0, "-", "Auction"], [416, 0, 0, "-", "module_definition"], [417, 0, 0, "-", "paras_Auction"]], "modules.CM": [[419, 0, 0, "-", "CM"], [426, 0, 0, "-", "module_definition"], [427, 0, 0, "-", "paras_CM"]], "modules.CM.CM": [[420, 5, 1, "", "compute_adequate_default_parameters"], [421, 5, 1, "", "get_metric"], [422, 5, 1, "", "make_hotspot_decision_CM"], [423, 5, 1, "", "on_finalise_CM"], [424, 5, 1, "", "on_init_AOC"], [425, 5, 1, "", "on_prepare_CM"]], "modules.FAC": [[429, 0, 0, "-", "FAC_FIFO_queue"], [435, 0, 0, "-", "FAC_total_cost"], [441, 0, 0, "-", "FAC_total_delay"], [445, 0, 0, "-", "module_definition"]], "modules.FAC.FAC_FIFO_queue": [[430, 5, 1, "", "build_arrival_queue"], [431, 5, 1, "", "update_arrival_queue"], [432, 5, 1, "", "wait_for_flight_arrival_information_queue"], [433, 5, 1, "", "wait_for_flight_arrival_information_request_provide_landing_time"], [434, 5, 1, "", "wait_for_flight_in_planning_horizon_queue"]], "modules.FAC.FAC_total_cost": [[436, 5, 1, "", "compute_cost_slots_total"], [437, 5, 1, "", "compute_costs_slots_arrival_delay_cost_func_slots_times"], [438, 5, 1, "", "compute_costs_slots_computing_all_costs"], [439, 5, 1, "", "request_cost_delay_function"], [440, 5, 1, "", "wait_for_cost_delay_function"]], "modules.FAC.FAC_total_delay": [[442, 5, 1, "", "compute_total_delay_slots"], [443, 5, 1, "", "request_time_propagate_delay"], [444, 5, 1, "", "wait_for_propagation_delay_time"]], "modules.FP": [[447, 0, 0, "-", "FP_L1"], [449, 0, 0, "-", "FP_L2"], [451, 0, 0, "-", "module_definition"]], "modules.FP.FP_L1": [[448, 5, 1, "", "consider_flight_swap_FP1"]], "modules.FP.FP_L2": [[450, 5, 1, "", "consider_flight_swap_FP2"]], "modules.HMI_HOTSPOT": [[453, 0, 0, "-", "HMI_FP_SEL"], [462, 0, 0, "-", "HMI_HOTSPOT"], [473, 0, 0, "-", "HMI_HOTSPOT_client_text"], [476, 0, 0, "-", "HMI_HOTSPOT_client_text2"], [479, 0, 0, "-", "HMI_HOTSPOT_client_text3"], [481, 0, 0, "-", "HMI_server"], [484, 0, 0, "-", "client_test"], [486, 0, 0, "-", "client_test2"], [488, 0, 0, "-", "client_test_hmi"], [490, 0, 0, "-", "client_test_hmi2"], [492, 0, 0, "-", "client_test_mercury"], [494, 0, 0, "-", "hmi_regulation_test_hmi"], [497, 0, 0, "-", "module_definition"], [498, 0, 0, "-", "paras_HMI_FP_SEL"], [499, 0, 0, "-", "paras_HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_FP_SEL": [[454, 5, 1, "", "on_init_hmi"], [455, 5, 1, "", "on_init_remote_hmi"], [456, 5, 1, "", "receive_remote_hmi"], [457, 5, 1, "", "select_fp_cli"], [458, 5, 1, "", "select_fp_hmi"], [459, 5, 1, "", "select_fp_remote_hmi"], [460, 5, 1, "", "send_fp_options_to_hmi"], [461, 5, 1, "", "wait_for_fp_remote_hmi_answer"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT": [[463, 5, 1, "", "compute_hotspot_decision"], [464, 5, 1, "", "make_hotspot_decision_hmi"], [465, 5, 1, "", "notify_AOCs_of_final_allocation_hmi"], [466, 5, 1, "", "on_init_remote_hmi"], [467, 5, 1, "", "receive_final_allocation"], [468, 5, 1, "", "receive_new_messages"], [469, 5, 1, "", "receive_regulation_decisions_remote_hmi"], [470, 5, 1, "", "send_final_allocation_to_airline"], [471, 5, 1, "", "send_final_allocation_to_hmi"], [472, 5, 1, "", "send_regulation_info_to_hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text": [[474, 1, 1, "", "MessageClient"], [475, 1, 1, "", "WindowUDPP"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient": [[474, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP": [[475, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2": [[477, 1, 1, "", "MessageClient"], [478, 1, 1, "", "WindowUDPP"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient": [[477, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP": [[478, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3": [[480, 1, 1, "", "MessageClient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient": [[480, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.HMI_server": [[482, 1, 1, "", "MercuryServer"], [483, 5, 1, "", "main"]], "modules.HMI_HOTSPOT.HMI_server.MercuryServer": [[482, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test": [[485, 1, 1, "", "Client"]], "modules.HMI_HOTSPOT.client_test.Client": [[485, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test2": [[487, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test2.ClientHMI": [[487, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_hmi": [[489, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI": [[489, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_hmi2": [[491, 1, 1, "", "ClientHMI"]], "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI": [[491, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.client_test_mercury": [[493, 1, 1, "", "ClientMercury"]], "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury": [[493, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi": [[495, 1, 1, "", "MessageClient"], [496, 1, 1, "", "WindowSelectFP"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient": [[495, 1, 1, "", "Letter"], [495, 2, 1, "", "__init__"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter": [[495, 2, 1, "", "clear"], [495, 2, 1, "", "copy"], [495, 2, 1, "", "fromkeys"], [495, 2, 1, "", "get"], [495, 2, 1, "", "items"], [495, 2, 1, "", "keys"], [495, 2, 1, "", "pop"], [495, 2, 1, "", "popitem"], [495, 2, 1, "", "setdefault"], [495, 2, 1, "", "update"], [495, 2, 1, "", "values"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP": [[496, 2, 1, "", "__init__"]], "modules.TA": [[501, 0, 0, "-", "TA_L1"], [505, 0, 0, "-", "TA_L2"], [509, 0, 0, "-", "module_definition"]], "modules.TA.TA_L1": [[502, 5, 1, "", "consider_waiting_pax_TA1"], [503, 5, 1, "", "cost_index_assessment_TA1"], [504, 5, 1, "", "wait_for_toc_reached_message_TA1"]], "modules.TA.TA_L2": [[506, 5, 1, "", "consider_waiting_pax_TA2"], [507, 5, 1, "", "cost_index_assessment_TA2"], [508, 5, 1, "", "wait_for_toc_reached_message_TA2"]], "modules.nostromo_EAMAN": [[511, 0, 0, "-", "module_definition"], [512, 0, 0, "-", "nostromo_EAMAN"], [538, 0, 0, "-", "optimiser_advanced"], [546, 0, 0, "-", "optimiser_baseline"], [548, 0, 0, "-", "optimiser_baseline_fast"]], "modules.nostromo_EAMAN.nostromo_EAMAN": [[513, 5, 1, "", "ask_radar_update_NEW"], [514, 5, 1, "", "build_matrices"], [515, 5, 1, "", "build_stuff"], [516, 5, 1, "", "compute_allocation_cost_for_flight"], [517, 5, 1, "", "compute_allocation_for_all_flights"], [518, 5, 1, "", "compute_initial_allocation"], [519, 5, 1, "", "generate_probas_speed_gen"], [520, 5, 1, "", "get_p"], [521, 5, 1, "", "notify_flight_in_data_horizon"], [522, 5, 1, "", "notify_flight_landing"], [523, 5, 1, "", "on_init"], [524, 5, 1, "", "on_init_agent"], [525, 5, 1, "", "prepare_data_for_optimizer_advanced"], [526, 5, 1, "", "prepare_data_for_optimizer_baseline"], [527, 5, 1, "", "receive_new_messages"], [528, 5, 1, "", "rescale"], [529, 5, 1, "", "send_request_for_cost_function"], [530, 5, 1, "", "send_request_for_potential_delay_recovery_request"], [531, 5, 1, "", "update_arrival_sequence_planning_NEW"], [532, 5, 1, "", "wait_for_cost_function"], [533, 5, 1, "", "wait_for_estimated_landing_time_NEW"], [534, 5, 1, "", "wait_for_flight_arrival_information_NEW"], [535, 5, 1, "", "wait_for_flight_in_data_horizon"], [536, 5, 1, "", "wait_for_flight_in_eaman_NEW"], [537, 5, 1, "", "wait_for_flight_potential_delay_recover_information"]], "modules.nostromo_EAMAN.optimiser_advanced": [[539, 1, 1, "", "DummyFile"], [540, 6, 1, "", "NoSolution"], [541, 5, 1, "", "allocation_from_variable"], [542, 5, 1, "", "clock_time"], [543, 5, 1, "", "get_first_matching_element"], [544, 5, 1, "", "optimizer_advanced"], [545, 5, 1, "", "silence"]], "modules.nostromo_EAMAN.optimiser_advanced.DummyFile": [[539, 2, 1, "", "__init__"]], "modules.nostromo_EAMAN.optimiser_baseline": [[547, 5, 1, "", "optimizer_baseline"]], "modules.nostromo_EAMAN.optimiser_baseline_fast": [[549, 5, 1, "", "optimizer_baseline"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 11, "hola": [], "welcom": [], "test_sphinx": [], "": 550, "document": 550, "content": 550, "indic": 550, "tabl": 550, "core": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "module_manag": [112, 113, 114, 115, 116, 117], "check_incompat": 113, "find_actual_module_nam": 114, "paramet": [], "return": [], "get_all_modul": 115, "get_module_para": 116, "load_mercury_modul": 117, "read_config": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "add_output_process": 124, "find_paras_categori": 125, "flatten_paras_dict": 126, "read_mercury_config": 127, "read_scenario_config": 128, "read_toml": 129, "transform_conf_para": 130, "unflatten_profil": 131, "unfold_paras_dict": 132, "update_scenario_paras_based_on_case_studi": 133, "simulation_manag": [146, 147, 148, 149], "mercuri": [7, 8, 147, 411, 412, 550], "build_command": 148, "create_paras_file_from_dict": 149, "delivery_system": [108, 109, 110, 111], "letter": 109, "letterbox": 110, "postman": 111, "parametris": [118, 119, 120, 121, 122], "parametrisercapac": 120, "parametriserselector": 121, "parametriserstandard": 122, "results_aggreg": [134, 135, 136, 137, 138, 139], "resultaggregatoradvanc": 135, "resultsaggreg": 136, "resultsaggregatorselector": 137, "resultsaggregatorsimpl": 138, "resultsaggregatorsimplereduc": 139, "scenario_load": [140, 141, 142, 143, 144, 145], "scenarioload": 141, "scenarioloaderselector": 142, "scenarioloadersimpl": 143, "scenarioloaderstandard": 144, "scenarioloaderstandardloc": 145, "world_build": [150, 151, 152], "world": 151, "trace": 152, "agent": [0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "agent_bas": [14, 15, 16], "role": 16, "commod": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "allianc": [36, 37], "arrival_slot": [38, 39], "arrivalslot": 39, "atfm_delai": [40, 41], "atfmdelai": 41, "central_registri": [45, 46], "centralregistri": 46, "debug_flight": 47, "flight_plan": [48, 49, 50, 51], "flightplan": 49, "flightplanpoint": 50, "build_proj": 51, "slot_queue_eaman": [62, 63, 64], "eamanslot": 63, "eamanslotqueu": 64, "network_manag": [94, 95, 96, 97, 98, 99], "hotspotmanag": 95, "networkmanag": 96, "networkmanageracceptanddisseminatefp": 97, "networkmanagercancelfp": 98, "networkmanagerflightplanprocess": 99, "seed": 106, "aman": [25, 26, 27, 28, 29, 30, 31, 32], "arrivalcancellationhandl": 27, "arrivalqueueplannedupdat": 28, "arrivaltacticalprovid": 29, "flightinamanhandl": 30, "slotassign": 31, "strategicarrivalqueuebuild": 32, "airline_operating_centr": [17, 18, 19, 20, 21, 22, 23, 24], "airlineflightplann": 18, "airlineoperatingcentr": 19, "airlinepaxhandl": 20, "dynamiccostindexcomput": 21, "flightplanselector": 22, "passengerrealloc": 23, "turnaroundoper": 24, "dman": [65, 66, 67, 68, 69, 70], "departurecancellationhandl": 67, "departurequeueupdat": 68, "departureslotprovid": 69, "strategicdeparturequeuebuild": 70, "eaman": [71, 72, 73, 74, 75], "arrivalplannerprovid": 72, "arrivalqueueplannedupdater": 73, "flightinamanhandler": 75, "ground_airport": [87, 88, 89, 90, 91, 92, 93], "groundairport": 88, "groundhandl": 89, "provideconnectingtim": 90, "taxiinprovid": 91, "taxioutestim": 92, "taxioutprovid": 93, "flight": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "aircraftdepartinghandl": 77, "departureslotrequest": 78, "fpinfoprovid": 79, "flightarrivalinformationprovid": 81, "flightplanconstraintupdat": 82, "flightplanupdat": 83, "groundarrivalhandl": 84, "operatetrajectori": 85, "potentialdelayrecoveryprovid": 86, "radar": [100, 101, 102, 103, 104, 105], "disseminatecancellationflightplan": 101, "disseminateflightplan": 102, "disseminateflightpositionupd": 103, "radaraugmentflightplan": 105, "aircraft": [34, 35], "atfm_regul": [42, 43, 44], "atfmbook": 43, "atfmregul": 44, "pax_itinerary_group": [52, 53, 54], "paxitinerarygroup": 53, "func": 54, "rout": [55, 56, 57], "routepoint": 57, "slot_queu": [58, 59, 60, 61], "capacityperiod": 59, "slot": 60, "slotqueu": 61, "modul": [6, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "auction": [414, 415, 416, 417], "module_definit": [416, 426, 445, 451, 497, 509, 511], "paras_auct": 417, "cm": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "paras_cm": 427, "fac": [428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "fac_fifo_queu": [429, 430, 431, 432, 433, 434], "build_arrival_queu": 430, "update_arrival_queu": 431, "wait_for_flight_arrival_information_queu": 432, "wait_for_flight_arrival_information_request_provide_landing_tim": 433, "wait_for_flight_in_planning_horizon_queu": 434, "fp": [446, 447, 448, 449, 450, 451], "fp_l1": [447, 448], "consider_flight_swap_fp1": 448, "fp_l2": [449, 450], "consider_flight_swap_fp2": 450, "hmi_hotspot": [452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "hmi_hotspot_client_text": [473, 474, 475], "messagecli": [474, 477, 480, 495], "windowudpp": [475, 478], "hmi_hotspot_client_text2": [476, 477, 478], "hmi_hotspot_client_text3": [479, 480], "hmi_serv": [481, 482, 483], "mercuryserv": 482, "main": 483, "client_test": [484, 485], "client": 485, "client_test2": [486, 487], "clienthmi": [487, 489, 491], "client_test_hmi": [488, 489], "client_test_hmi2": [490, 491], "client_test_mercuri": [492, 493], "clientmercuri": 493, "hmi_regulation_test_hmi": [494, 495, 496], "windowselectfp": 496, "paras_hmi_fp_sel": 498, "paras_hmi_hotspot": 499, "ta": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "ta_l1": [501, 502, 503, 504], "consider_waiting_pax_ta1": 502, "cost_index_assessment_ta1": 503, "wait_for_toc_reached_message_ta1": 504, "ta_l2": [505, 506, 507, 508], "consider_waiting_pax_ta2": 506, "cost_index_assessment_ta2": 507, "wait_for_toc_reached_message_ta2": 508, "nostromo_eaman": [510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "ask_radar_update_new": 513, "build_matric": 514, "build_stuff": 515, "compute_allocation_cost_for_flight": 516, "compute_allocation_for_all_flight": 517, "compute_initial_alloc": 518, "generate_probas_speed_gen": 519, "get_p": 520, "notify_flight_in_data_horizon": 521, "notify_flight_land": 522, "on_init": 523, "on_init_ag": 524, "prepare_data_for_optimizer_advanc": 525, "prepare_data_for_optimizer_baselin": 526, "receive_new_messag": [468, 527], "rescal": 528, "send_request_for_cost_funct": 529, "send_request_for_potential_delay_recovery_request": 530, "update_arrival_sequence_planning_new": 531, "wait_for_cost_funct": 532, "wait_for_estimated_landing_time_new": 533, "wait_for_flight_arrival_information_new": 534, "wait_for_flight_in_data_horizon": 535, "wait_for_flight_in_eaman_new": 536, "wait_for_flight_potential_delay_recover_inform": 537, "optimiser_advanc": [538, 539, 540, 541, 542, 543, 544, 545], "dummyfil": [319, 539], "nosolut": 540, "allocation_from_vari": 541, "clock_tim": [337, 542], "get_first_matching_el": [344, 543], "optimizer_advanc": 544, "silenc": [385, 545], "optimiser_baselin": [546, 547], "optimizer_baselin": [547, 549], "optimiser_baseline_fast": [548, 549], "compute_adequate_default_paramet": 420, "get_metr": 421, "make_hotspot_decision_cm": 422, "on_finalise_cm": 423, "on_init_aoc": 424, "on_prepare_cm": 425, "fac_total_cost": [435, 436, 437, 438, 439, 440], "compute_cost_slots_tot": 436, "compute_costs_slots_arrival_delay_cost_func_slots_tim": 437, "compute_costs_slots_computing_all_cost": 438, "request_cost_delay_funct": 439, "wait_for_cost_delay_funct": 440, "fac_total_delai": [441, 442, 443, 444], "compute_total_delay_slot": 442, "request_time_propagate_delai": 443, "wait_for_propagation_delay_tim": 444, "hmi_fp_sel": [453, 454, 455, 456, 457, 458, 459, 460, 461], "on_init_hmi": 454, "on_init_remote_hmi": [455, 466], "receive_remote_hmi": 456, "select_fp_cli": 457, "select_fp_hmi": 458, "select_fp_remote_hmi": 459, "send_fp_options_to_hmi": 460, "wait_for_fp_remote_hmi_answ": 461, "compute_hotspot_decis": 463, "make_hotspot_decision_hmi": 464, "notify_aocs_of_final_allocation_hmi": 465, "receive_final_alloc": 467, "receive_regulation_decisions_remote_hmi": 469, "send_final_allocation_to_airlin": 470, "send_final_allocation_to_hmi": 471, "send_regulation_info_to_hmi": 472, "dashboard": [153, 154], "mercury_gui": 154, "manual_bool_cast": 412, "quickstart": 8, "instal": 8, "run": 8, "cli": [3, 8, 12], "version": 8, "programmat": 8, "us": 8, "graphic": 8, "interfac": 8, "about": 10, "authorship": 10, "licenc": 10, "copyright": 10, "lib": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "hotspot": [], "globalfun": [], "hiddenprint": 320, "preferences_from_flight": [], "globaloptimum": [], "solversgo": [], "gurobi_solver_go": [], "gogurobi": [], "stop": [], "istop": [], "airlineandflight": [], "istopairlin": [], "solver": [], "gurobi_offer_solv": [], "gurobioffersolv": [], "offer": [], "gurobi_solv": [], "gurobisolv": [], "wrap_flight_istop": [], "modelstructur": [], "airlin": [], "cost": [], "costfunctiondict": [], "archetypecostfunct": [], "doublejump2costfunct": [], "doublejump3costfunct": [], "doublejumpcostfunct": [], "gatecostfunct": [], "jump2costfunct": [], "jump3costfunct": [], "jumpcostfunct": [], "linearcostfunct": [], "quadraticcostfunct": [], "realisticcostfunct": [], "stepcostfunct": [], "compute_gate_cost": [], "get_flight_id_kei": [], "get_interv": [], "compatible_slot": 242, "flightlist": [], "get_flight": [], "make_flight_list": [], "solut": [], "make_df_solut": [], "make_performance_df": [], "make_solut": [], "make_slot_and_flight": [], "nnbound": [], "solversnnb": [], "gurobi_solver_nnb": [], "nnboundgurobi": [], "nnboundmodel": [], "offercheck": [], "air_couple_check": [], "air_triple_check": [], "schedulemak": [], "df_to_schedul": [], "make_flight": [], "avoid_zero": [], "df_maker": [], "distribution_mak": [], "fill_missing_flight": [], "schedule_mak": [], "schedule_typ": [], "slots_flights_mak": [], "udpp": [], "local": [], "get_slot_from_tim": [], "udpp_loc": [], "localoptimis": [], "udpplocaloptgurobi": [], "eta_limit_slot": [], "get_num_flights_for_eta": [], "slot_rang": [], "functionapprox": [], "fit_cost_curv": [], "fit_curv": [], "loss_fun": [], "make_preference_fun": [], "obj_approx": [], "r_squar": 375, "note": [], "remove_nan_coupled_list": 379, "functionapproxcost": [], "compute_test_valu": [], "udpploc": [], "udppmerg": [], "get_first_compatible_flight": [], "sort_flights_by_tim": [], "udpp_merg": [], "combined_model": [], "funcapproxudpploc": [], "globaloptimumtotalapprox": [], "globaloptimumtotalapproxcost": [], "istopapprox": [], "istopapproxcost": [], "nnboundtotalapprox": [], "nnboundtotalapproxcost": [], "udppistop": [], "udppistopapprox": [], "udppistopapproxcost": [], "udpplocalfunctionapprox": [], "udpplocalfunctionapproxcost": [], "udppmergeistop": [], "udpptot": [], "udpptotalapprox": [], "udpptotalapproxcost": [], "combine_model": [], "init_and_run": [], "other_tool": [237, 238, 239, 240, 241, 242, 243, 244, 245], "agent_file_nam": [], "compare_alloc": [], "compare_allocations_cost": [], "compute_cost": [], "generate_comparison": [], "loop": 362, "print_alloc": [], "root_file_nam": [], "sort_list": 389, "write_on_fil": 399, "script": [], "david_exampl": [], "build_funct": [], "test1": [], "test2": [], "test3": [], "test4": [], "test5": [], "test6": [], "test7": [], "example_alternative_rul": [], "externalflight": [], "gg_exampl": [], "new_exampl": [], "externalflight2": [], "create_original_flight": [], "create_original_flights2": [], "example_agent_paradigm_approx": [], "example_agent_paradigm_approx_altern": [], "example_agent_paradigm_vect": [], "example_mercury_test_cas": [], "examples_direct_approx": [], "examples_direct_cost_vector": [], "other_exampl": [], "other_examples10": [], "other_examples2": [], "other_examples3": [], "other_examples4": [], "other_examples5": [], "other_examples6": [], "other_examples7": [], "other_examples8": [], "other_examples9": [], "airspace_particular": [156, 157, 158, 159, 292, 293, 294, 295], "get_nas_airport": [157, 293], "is_atfm_area": [158, 294], "is_ecac": [159, 295], "db_access_funct": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "dataaccessbada4": 161, "dataaccessperform": 162, "add_crco_to_flights_in_db": 163, "get_information_routes_o_d_gener": 164, "read_atfm_at_airport": 165, "read_atfm_at_airports_dai": 166, "read_atfm_at_airports_manu": 167, "read_atfm_at_airports_old": 168, "read_mct": 169, "read_airlines_data": 170, "read_airport_coord": 171, "read_airports_curfew_data": 172, "read_airports_data": 173, "read_airports_modif_data": 174, "read_airspace_stat": 175, "read_all_regulation_dai": 176, "read_compensation_data": 177, "read_coord_trajectory_rout": 178, "read_coord_trajectory_route_based_on_id": 179, "read_countries_atfm_na": 180, "read_crco": 181, "read_crco_charg": 182, "read_dict_ac_bada_code_ac_model": 183, "read_dict_ac_type_wtc": 184, "read_dict_fp_pool_id": 185, "read_doc_data": 186, "read_eamans_data": 187, "read_estimated_avg_costs_curfew": 188, "read_extra_cruise_if_dci": 189, "read_flight_plan_ansps_weights_for_crco": 190, "read_flight_schedul": 191, "read_flight_schedules2": 192, "read_flight_set": 193, "read_flight_uncertainti": 194, "read_fp_pool": 195, "read_fp_pool_miss": 196, "read_fp_routes_without_crco": 197, "read_iedf_atfm": 198, "read_iedf_wind_dict": 199, "read_itineraries_data": 200, "read_nas_route_pool": 201, "read_nas_route_pool_static_o_d": 202, "read_non_pax_cost_data": 203, "read_non_pax_cost_fit_data": 204, "read_nonpax_cost_curfew": 205, "read_od_in_historic_od_computed_pool": 206, "read_orig_destination_via_intermediate_shortest": 207, "read_passenger_flow": 208, "read_passenger_opt": 209, "read_perc_min_perc_max_regulations_dai": 210, "read_prob_atfm": 211, "read_regulation_days_at_an_airport": 212, "read_route_pool": 213, "read_route_pool_o_d_gener": 214, "read_route_pool_stat": 215, "read_scenario": 216, "read_scenario_para": 217, "read_schedul": 218, "read_se": 219, "read_soft_cost_d": 220, "read_trajectori": 221, "read_trajectories_datafram": 222, "read_trajectories_id": 223, "read_trajectories_miss": 224, "read_trajectories_missing_in_interv": 225, "read_trajectories_opt": 226, "read_trajectories_pool": 227, "read_turnaround_data": 228, "save_trajectories_pool": 229, "save_trajectories_seg": 230, "input_manag": [231, 232, 233, 234, 235, 236], "filter_df": 233, "filter_sql": 234, "read_data_from_dict": 235, "write_toml": 236, "flightdummi": 238, "slotdummi": 239, "allocation_from_flight": 240, "clone_pax": [241, 273], "compute_fpfs_alloc": 243, "distance_func": 244, "flight_str": 245, "performance_trajectori": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "ac_perform": [247, 248, 249, 250, 251], "aircraftperform": 248, "aircraftperformancebada3": 249, "aircraftperformancebada3jet": 250, "aircraftperformancebada3tp": 251, "standard_atmospher": [252, 253, 254, 255, 256], "densiti": 253, "pressur": 254, "sound_spe": 255, "temperatur": 256, "trajectori": [257, 258, 259, 260], "trajectorycompon": 259, "trajectoryseg": 260, "unit_convers": [261, 262, 263, 264, 265, 266], "cas2ta": 262, "km2kt": 263, "km2m": 264, "kt2m": 265, "m2kt": 266, "result_manag": [267, 268], "result_tool": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "binaris": 270, "build_aligned_pax_flight_df": 271, "build_single_iteration_df": 272, "compute_derived_metrics_hist_sim": 274, "compute_derived_metrics_histor": 275, "compute_derived_metrics_pax_gener": 276, "compute_derived_metrics_simul": 277, "compute_metrics_flight": 278, "compute_metrics_pax": 279, "find_destination_gener": 280, "find_origin_gener": 281, "get_historical_flight": 282, "get_pax_schedul": 283, "merge_hist_sim": 284, "merge_pax_flight": 285, "produce_hist_sim_df": 286, "produce_historical_flight_pax_df": 287, "uow_tool_belt": [288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "dtw": [289, 290, 291], "dtw_path": 291, "connection_tool": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "emptyconnect": 297, "create_indexes_in_t": 298, "do_queri": 299, "extract_ssh_paramet": 300, "file_connect": 301, "generic_connect": 302, "load_data_infil": 303, "mysql_connect": 304, "parquet_connect": 305, "read_cr": 306, "read_csv": 307, "read_data": 308, "read_mysql": 309, "read_parquet": 310, "read_pickl": 311, "run_mysql_queri": 312, "write_csv": 313, "write_data": 314, "write_mysql": 315, "write_pickl": 316, "general_tool": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "a_b": 318, "para": 321, "class": 321, "twowaydict": 322, "add_dict": 323, "alert_print": 324, "alphabet": 325, "apply_args_and_kwarg": 326, "average_on_downsampled_interv": 327, "average_on_interv": 328, "average_on_quantil": 329, "bootstrap_mean_test": 330, "bootstrap_test": 331, "build_col_print_func": 332, "build_step_bivariate_funct": 333, "build_step_multi_valued_funct": 334, "build_triangular": 335, "center_spatial_network": 336, "compute_percentile_with_weight": 338, "counter": 339, "create_dir": 340, "dict_depth": 341, "distance_euclidean": 342, "fit": 343, "gini": 345, "groupby_on_downsampled_interv": 346, "groupby_on_interv": 347, "groupby_on_quantil": 348, "haversin": 349, "haversine_old": 350, "hex_to_rgb": 351, "human_format": 352, "human_format_for_tick": 353, "intermediate_point": 354, "inv_mu_sig_lognorm": 355, "inv_s_loc_scale_lognorm": 356, "inv_s_scale_lognorm": 357, "inverted_edf": 358, "keep_tim": 359, "load": 360, "log": [361, 401], "make_df_with_3_level": 363, "make_df_with_3_levels_quick": 364, "make_nested_dict_from_df": 365, "mysql_serv": 366, "parallel": 367, "partial_corr": 368, "percentile_10": 369, "percentile_90": 370, "percentile_custom": 371, "permutation_test": 372, "permutation_test_only_diff": 373, "proport": 374, "read_para": 376, "recursive_concat": 377, "recursive_minim": 378, "scale_and_s_from_mean_sigma_lognorm": 380, "scale_and_s_from_quantile_sigma_lognorm": 381, "set_interv": 382, "shift_spatial_network": 383, "show_dic": 384, "simple_color_map_funct": 386, "simple_colormap_object": 387, "sol_b": 388, "sort_paired_valu": 390, "spread_integ": 391, "ssh_client_connect": 392, "ssh_copi": 393, "ssh_tunnel_connect": 394, "starmap_with_kwarg": 395, "strip_str": 396, "timeit": 397, "weight_avg": 398, "ye": 400, "network_tool": 402, "plot_tool": [403, 404, 405], "bar_plot_templ": 404, "savefig": 405, "trajectory_tool": [406, 407, 408, 409, 410], "compute_ab": 407, "create_vertical_trajectori": 408, "detect_toc_tod": 409, "plot_traj": 410, "manual": 5, "overview": 7, "data": 1, "input": 1, "event": 2, "exampl": [3, 12], "gui": 4, "refer": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API": [[11, "api"]], "Overview of Mercury": [[7, "overview-of-mercury"]], "Agents": [[0, "agents"]], "Data Input": [[1, "data-input"]], "Events": [[2, "events"]], "Examples": [[3, "examples"]], "CLI example": [[3, "cli-example"], [12, "cli-example"]], "GUI": [[4, "gui"]], "Modules": [[6, "modules"]], "References": [[9, "references"]], "Manual": [[5, "manual"]], "Mercury\u2019s documentation": [[550, "mercury-s-documentation"]], "Contents:": [[550, null]], "Indices and tables": [[550, "indices-and-tables"]], "Quickstart": [[8, "quickstart"]], "Installation": [[8, "installation"]], "Running the CLI version": [[8, "running-the-cli-version"]], "Programmatic use of Mercury": [[8, "programmatic-use-of-mercury"]], "Graphical interface": [[8, "graphical-interface"]], "About": [[10, "about"]], "Authorship": [[10, "authorship"]], "Licence and copyright": [[10, "licence-and-copyright"]], "agents": [[13, "module-agents"]], "agents.agent_base": [[14, "module-agents.agent_base"]], "agents.agent_base.Agent": [[15, "agents-agent-base-agent"]], "agents.agent_base.Role": [[16, "agents-agent-base-role"]], "agents.airline_operating_centre": [[17, "module-agents.airline_operating_centre"]], "agents.airline_operating_centre.AirlineFlightPlanner": [[18, "agents-airline-operating-centre-airlineflightplanner"]], "agents.airline_operating_centre.AirlineOperatingCentre": [[19, "agents-airline-operating-centre-airlineoperatingcentre"]], "agents.airline_operating_centre.AirlinePaxHandler": [[20, "agents-airline-operating-centre-airlinepaxhandler"]], "agents.airline_operating_centre.DynamicCostIndexComputer": [[21, "agents-airline-operating-centre-dynamiccostindexcomputer"]], "agents.airline_operating_centre.FlightPlanSelector": [[22, "agents-airline-operating-centre-flightplanselector"]], "agents.airline_operating_centre.PassengerReallocation": [[23, "agents-airline-operating-centre-passengerreallocation"]], "agents.airline_operating_centre.TurnaroundOperations": [[24, "agents-airline-operating-centre-turnaroundoperations"]], "agents.aman": [[25, "module-agents.aman"]], "agents.aman.AMAN": [[26, "agents-aman-aman"]], "agents.aman.ArrivalCancellationHandler": [[27, "agents-aman-arrivalcancellationhandler"]], "agents.aman.ArrivalQueuePlannedUpdater": [[28, "agents-aman-arrivalqueueplannedupdater"]], "agents.aman.ArrivalTacticalProvider": [[29, "agents-aman-arrivaltacticalprovider"]], "agents.aman.FlightInAMANHandler": [[30, "agents-aman-flightinamanhandler"]], "agents.aman.SlotAssigner": [[31, "agents-aman-slotassigner"]], "agents.aman.StrategicArrivalQueueBuilder": [[32, "agents-aman-strategicarrivalqueuebuilder"]], "agents.commodities": [[33, "module-agents.commodities"]], "agents.commodities.aircraft": [[34, "module-agents.commodities.aircraft"]], "agents.commodities.aircraft.Aircraft": [[35, "agents-commodities-aircraft-aircraft"]], "agents.commodities.alliance": [[36, "module-agents.commodities.alliance"]], "agents.commodities.alliance.Alliance": [[37, "agents-commodities-alliance-alliance"]], "agents.commodities.arrival_slot": [[38, "module-agents.commodities.arrival_slot"]], "agents.commodities.arrival_slot.ArrivalSlot": [[39, "agents-commodities-arrival-slot-arrivalslot"]], "agents.commodities.atfm_delay": [[40, "module-agents.commodities.atfm_delay"]], "agents.commodities.atfm_delay.ATFMDelay": [[41, "agents-commodities-atfm-delay-atfmdelay"]], "agents.commodities.atfm_regulation": [[42, "module-agents.commodities.atfm_regulation"]], "agents.commodities.atfm_regulation.ATFMBooker": [[43, "agents-commodities-atfm-regulation-atfmbooker"]], "agents.commodities.atfm_regulation.ATFMRegulation": [[44, "agents-commodities-atfm-regulation-atfmregulation"]], "agents.commodities.central_registry": [[45, "module-agents.commodities.central_registry"]], "agents.commodities.central_registry.CentralRegistry": [[46, "agents-commodities-central-registry-centralregistry"]], "agents.commodities.debug_flights": [[47, "module-agents.commodities.debug_flights"]], "agents.commodities.flight_plan": [[48, "module-agents.commodities.flight_plan"]], "agents.commodities.flight_plan.FlightPlan": [[49, "agents-commodities-flight-plan-flightplan"]], "agents.commodities.flight_plan.FlightPlanPoint": [[50, "agents-commodities-flight-plan-flightplanpoint"]], "agents.commodities.flight_plan.build_proj": [[51, "agents-commodities-flight-plan-build-proj"]], "agents.commodities.pax_itinerary_group": [[52, "module-agents.commodities.pax_itinerary_group"]], "agents.commodities.pax_itinerary_group.PaxItineraryGroup": [[53, "agents-commodities-pax-itinerary-group-paxitinerarygroup"]], "agents.commodities.pax_itinerary_group.func": [[54, "agents-commodities-pax-itinerary-group-func"]], "agents.commodities.route": [[55, "module-agents.commodities.route"]], "agents.commodities.route.Route": [[56, "agents-commodities-route-route"]], "agents.commodities.route.RoutePoint": [[57, "agents-commodities-route-routepoint"]], "agents.commodities.slot_queue": [[58, "module-agents.commodities.slot_queue"]], "agents.commodities.slot_queue.CapacityPeriod": [[59, "agents-commodities-slot-queue-capacityperiod"]], "agents.commodities.slot_queue.Slot": [[60, "agents-commodities-slot-queue-slot"]], "agents.commodities.slot_queue.SlotQueue": [[61, "agents-commodities-slot-queue-slotqueue"]], "agents.commodities.slot_queue_eaman": [[62, "module-agents.commodities.slot_queue_eaman"]], "agents.commodities.slot_queue_eaman.EAMANSlot": [[63, "agents-commodities-slot-queue-eaman-eamanslot"]], "agents.commodities.slot_queue_eaman.EAMANSlotQueue": [[64, "agents-commodities-slot-queue-eaman-eamanslotqueue"]], "agents.dman": [[65, "module-agents.dman"]], "agents.dman.DMAN": [[66, "agents-dman-dman"]], "agents.dman.DepartureCancellationHandler": [[67, "agents-dman-departurecancellationhandler"]], "agents.dman.DepartureQueueUpdater": [[68, "agents-dman-departurequeueupdater"]], "agents.dman.DepartureSlotProvider": [[69, "agents-dman-departureslotprovider"]], "agents.dman.StrategicDepartureQueueBuilder": [[70, "agents-dman-strategicdeparturequeuebuilder"]], "agents.eaman": [[71, "module-agents.eaman"]], "agents.eaman.ArrivalPlannerProvider": [[72, "agents-eaman-arrivalplannerprovider"]], "agents.eaman.ArrivalQueuePlannedUpdaterE": [[73, "agents-eaman-arrivalqueueplannedupdatere"]], "agents.eaman.EAMAN": [[74, "agents-eaman-eaman"]], "agents.eaman.FlightInAMANHandlerE": [[75, "agents-eaman-flightinamanhandlere"]], "agents.flight": [[76, "module-agents.flight"]], "agents.flight.AircraftDepartingHandler": [[77, "agents-flight-aircraftdepartinghandler"]], "agents.flight.DepartureSlotRequester": [[78, "agents-flight-departureslotrequester"]], "agents.flight.FPInfoProvider": [[79, "agents-flight-fpinfoprovider"]], "agents.flight.Flight": [[80, "agents-flight-flight"]], "agents.flight.FlightArrivalInformationProvider": [[81, "agents-flight-flightarrivalinformationprovider"]], "agents.flight.FlightPlanConstraintUpdater": [[82, "agents-flight-flightplanconstraintupdater"]], "agents.flight.FlightPlanUpdater": [[83, "agents-flight-flightplanupdater"]], "agents.flight.GroundArrivalHandler": [[84, "agents-flight-groundarrivalhandler"]], "agents.flight.OperateTrajectory": [[85, "agents-flight-operatetrajectory"]], "agents.flight.PotentialDelayRecoveryProvider": [[86, "agents-flight-potentialdelayrecoveryprovider"]], "agents.ground_airport": [[87, "module-agents.ground_airport"]], "agents.ground_airport.GroundAirport": [[88, "agents-ground-airport-groundairport"]], "agents.ground_airport.GroundHandler": [[89, "agents-ground-airport-groundhandler"]], "agents.ground_airport.ProvideConnectingTime": [[90, "agents-ground-airport-provideconnectingtime"]], "agents.ground_airport.TaxiInProvider": [[91, "agents-ground-airport-taxiinprovider"]], "agents.ground_airport.TaxiOutEstimator": [[92, "agents-ground-airport-taxioutestimator"]], "agents.ground_airport.TaxiOutProvider": [[93, "agents-ground-airport-taxioutprovider"]], "agents.network_manager": [[94, "module-agents.network_manager"]], "agents.network_manager.HotspotManager": [[95, "agents-network-manager-hotspotmanager"]], "agents.network_manager.NetworkManager": [[96, "agents-network-manager-networkmanager"]], "agents.network_manager.NetworkManagerAcceptAndDisseminateFP": [[97, "agents-network-manager-networkmanageracceptanddisseminatefp"]], "agents.network_manager.NetworkManagerCancelFP": [[98, "agents-network-manager-networkmanagercancelfp"]], "agents.network_manager.NetworkManagerFlightPlanProcessing": [[99, "agents-network-manager-networkmanagerflightplanprocessing"]], "agents.radar": [[100, "module-agents.radar"]], "agents.radar.DisseminateCancellationFlightPlan": [[101, "agents-radar-disseminatecancellationflightplan"]], "agents.radar.DisseminateFlightPlan": [[102, "agents-radar-disseminateflightplan"]], "agents.radar.DisseminateFlightPositionUpdate": [[103, "agents-radar-disseminateflightpositionupdate"]], "agents.radar.Radar": [[104, "agents-radar-radar"]], "agents.radar.RadarAugmentFlightPlan": [[105, "agents-radar-radaraugmentflightplan"]], "agents.seed": [[106, "module-agents.seed"]], "core": [[107, "module-core"]], "core.delivery_system": [[108, "module-core.delivery_system"]], "core.delivery_system.Letter": [[109, "core-delivery-system-letter"]], "core.delivery_system.LetterBox": [[110, "core-delivery-system-letterbox"]], "core.delivery_system.Postman": [[111, "core-delivery-system-postman"]], "core.module_management": [[112, "module-core.module_management"]], "core.module_management.check_incompatibilities": [[113, "core-module-management-check-incompatibilities"]], "core.module_management.find_actual_module_name": [[114, "core-module-management-find-actual-module-name"]], "core.module_management.get_all_modules": [[115, "core-module-management-get-all-modules"]], "core.module_management.get_module_paras": [[116, "core-module-management-get-module-paras"]], "core.module_management.load_mercury_module": [[117, "core-module-management-load-mercury-module"]], "core.parametriser": [[118, "module-core.parametriser"]], "core.parametriser.Parametriser": [[119, "core-parametriser-parametriser"]], "core.parametriser.ParametriserCapacity": [[120, "core-parametriser-parametrisercapacity"]], "core.parametriser.ParametriserSelector": [[121, "core-parametriser-parametriserselector"]], "core.parametriser.ParametriserStandard": [[122, "core-parametriser-parametriserstandard"]], "core.read_config": [[123, "module-core.read_config"]], "core.read_config.add_output_process": [[124, "core-read-config-add-output-process"]], "core.read_config.find_paras_categories": [[125, "core-read-config-find-paras-categories"]], "core.read_config.flatten_paras_dict": [[126, "core-read-config-flatten-paras-dict"]], "core.read_config.read_mercury_config": [[127, "core-read-config-read-mercury-config"]], "core.read_config.read_scenario_config": [[128, "core-read-config-read-scenario-config"]], "core.read_config.read_toml": [[129, "core-read-config-read-toml"]], "core.read_config.transform_conf_paras": [[130, "core-read-config-transform-conf-paras"]], "core.read_config.unflatten_profiles": [[131, "core-read-config-unflatten-profiles"]], "core.read_config.unfold_paras_dict": [[132, "core-read-config-unfold-paras-dict"]], "core.read_config.update_scenario_paras_based_on_case_study": [[133, "core-read-config-update-scenario-paras-based-on-case-study"]], "core.results_aggregator": [[134, "module-core.results_aggregator"]], "core.results_aggregator.ResultAggregatorAdvanced": [[135, "core-results-aggregator-resultaggregatoradvanced"]], "core.results_aggregator.ResultsAggregator": [[136, "core-results-aggregator-resultsaggregator"]], "core.results_aggregator.ResultsAggregatorSelector": [[137, "core-results-aggregator-resultsaggregatorselector"]], "core.results_aggregator.ResultsAggregatorSimple": [[138, "core-results-aggregator-resultsaggregatorsimple"]], "core.results_aggregator.ResultsAggregatorSimpleReduced": [[139, "core-results-aggregator-resultsaggregatorsimplereduced"]], "core.scenario_loader": [[140, "module-core.scenario_loader"]], "core.scenario_loader.ScenarioLoader": [[141, "core-scenario-loader-scenarioloader"]], "core.scenario_loader.ScenarioLoaderSelector": [[142, "core-scenario-loader-scenarioloaderselector"]], "core.scenario_loader.ScenarioLoaderSimple": [[143, "core-scenario-loader-scenarioloadersimple"]], "core.scenario_loader.ScenarioLoaderStandard": [[144, "core-scenario-loader-scenarioloaderstandard"]], "core.scenario_loader.ScenarioLoaderStandardLocal": [[145, "core-scenario-loader-scenarioloaderstandardlocal"]], "core.simulation_manager": [[146, "module-core.simulation_manager"]], "core.simulation_manager.Mercury": [[147, "core-simulation-manager-mercury"]], "core.simulation_manager.build_command": [[148, "core-simulation-manager-build-command"]], "core.simulation_manager.create_paras_file_from_dict": [[149, "core-simulation-manager-create-paras-file-from-dict"]], "core.world_builder": [[150, "module-core.world_builder"]], "core.world_builder.World": [[151, "core-world-builder-world"]], "core.world_builder.trace": [[152, "core-world-builder-trace"]], "dashboard": [[153, "module-dashboard"]], "dashboard.mercury_gui": [[154, "module-dashboard.mercury_gui"]], "libs": [[155, "module-libs"]], "libs.airspace_particularities": [[156, "module-libs.airspace_particularities"]], "libs.airspace_particularities.get_nas_airport": [[157, "libs-airspace-particularities-get-nas-airport"]], "libs.airspace_particularities.is_ATFM_AREA": [[158, "libs-airspace-particularities-is-atfm-area"]], "libs.airspace_particularities.is_ECAC": [[159, "libs-airspace-particularities-is-ecac"]], "libs.db_access_functions": [[160, "module-libs.db_access_functions"]], "libs.db_access_functions.DataAccessBADA4": [[161, "libs-db-access-functions-dataaccessbada4"]], "libs.db_access_functions.DataAccessPerformance": [[162, "libs-db-access-functions-dataaccessperformance"]], "libs.db_access_functions.add_crco_to_flights_in_db": [[163, "libs-db-access-functions-add-crco-to-flights-in-db"]], "libs.db_access_functions.get_information_routes_o_d_generated": [[164, "libs-db-access-functions-get-information-routes-o-d-generated"]], "libs.db_access_functions.read_ATFM_at_airports": [[165, "libs-db-access-functions-read-atfm-at-airports"]], "libs.db_access_functions.read_ATFM_at_airports_days": [[166, "libs-db-access-functions-read-atfm-at-airports-days"]], "libs.db_access_functions.read_ATFM_at_airports_manual": [[167, "libs-db-access-functions-read-atfm-at-airports-manual"]], "libs.db_access_functions.read_ATFM_at_airports_old": [[168, "libs-db-access-functions-read-atfm-at-airports-old"]], "libs.db_access_functions.read_MCT": [[169, "libs-db-access-functions-read-mct"]], "libs.db_access_functions.read_airlines_data": [[170, "libs-db-access-functions-read-airlines-data"]], "libs.db_access_functions.read_airport_coords": [[171, "libs-db-access-functions-read-airport-coords"]], "libs.db_access_functions.read_airports_curfew_data": [[172, "libs-db-access-functions-read-airports-curfew-data"]], "libs.db_access_functions.read_airports_data": [[173, "libs-db-access-functions-read-airports-data"]], "libs.db_access_functions.read_airports_modif_data": [[174, "libs-db-access-functions-read-airports-modif-data"]], "libs.db_access_functions.read_airspace_static": [[175, "libs-db-access-functions-read-airspace-static"]], "libs.db_access_functions.read_all_regulation_days": [[176, "libs-db-access-functions-read-all-regulation-days"]], "libs.db_access_functions.read_compensation_data": [[177, "libs-db-access-functions-read-compensation-data"]], "libs.db_access_functions.read_coord_trajectory_route": [[178, "libs-db-access-functions-read-coord-trajectory-route"]], "libs.db_access_functions.read_coord_trajectory_route_based_on_id": [[179, "libs-db-access-functions-read-coord-trajectory-route-based-on-id"]], "libs.db_access_functions.read_countries_ATFM_NAS": [[180, "libs-db-access-functions-read-countries-atfm-nas"]], "libs.db_access_functions.read_crco": [[181, "libs-db-access-functions-read-crco"]], "libs.db_access_functions.read_crco_charges": [[182, "libs-db-access-functions-read-crco-charges"]], "libs.db_access_functions.read_dict_ac_bada_code_ac_model": [[183, "libs-db-access-functions-read-dict-ac-bada-code-ac-model"]], "libs.db_access_functions.read_dict_ac_type_wtc": [[184, "libs-db-access-functions-read-dict-ac-type-wtc"]], "libs.db_access_functions.read_dict_fp_pool_ids": [[185, "libs-db-access-functions-read-dict-fp-pool-ids"]], "libs.db_access_functions.read_doc_data": [[186, "libs-db-access-functions-read-doc-data"]], "libs.db_access_functions.read_eamans_data": [[187, "libs-db-access-functions-read-eamans-data"]], "libs.db_access_functions.read_estimated_avg_costs_curfews": [[188, "libs-db-access-functions-read-estimated-avg-costs-curfews"]], "libs.db_access_functions.read_extra_cruise_if_dci": [[189, "libs-db-access-functions-read-extra-cruise-if-dci"]], "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco": [[190, "libs-db-access-functions-read-flight-plan-ansps-weights-for-crco"]], "libs.db_access_functions.read_flight_schedules": [[191, "libs-db-access-functions-read-flight-schedules"]], "libs.db_access_functions.read_flight_schedules2": [[192, "libs-db-access-functions-read-flight-schedules2"]], "libs.db_access_functions.read_flight_set": [[193, "libs-db-access-functions-read-flight-set"]], "libs.db_access_functions.read_flight_uncertainty": [[194, "libs-db-access-functions-read-flight-uncertainty"]], "libs.db_access_functions.read_fp_pool": [[195, "libs-db-access-functions-read-fp-pool"]], "libs.db_access_functions.read_fp_pool_missing": [[196, "libs-db-access-functions-read-fp-pool-missing"]], "libs.db_access_functions.read_fp_routes_without_crco": [[197, "libs-db-access-functions-read-fp-routes-without-crco"]], "libs.db_access_functions.read_iedf_atfm": [[198, "libs-db-access-functions-read-iedf-atfm"]], "libs.db_access_functions.read_iedf_wind_dict": [[199, "libs-db-access-functions-read-iedf-wind-dict"]], "libs.db_access_functions.read_itineraries_data": [[200, "libs-db-access-functions-read-itineraries-data"]], "libs.db_access_functions.read_nas_route_pool": [[201, "libs-db-access-functions-read-nas-route-pool"]], "libs.db_access_functions.read_nas_route_pool_static_o_d": [[202, "libs-db-access-functions-read-nas-route-pool-static-o-d"]], "libs.db_access_functions.read_non_pax_cost_data": [[203, "libs-db-access-functions-read-non-pax-cost-data"]], "libs.db_access_functions.read_non_pax_cost_fit_data": [[204, "libs-db-access-functions-read-non-pax-cost-fit-data"]], "libs.db_access_functions.read_nonpax_cost_curfews": [[205, "libs-db-access-functions-read-nonpax-cost-curfews"]], "libs.db_access_functions.read_od_in_historic_od_computed_pool": [[206, "libs-db-access-functions-read-od-in-historic-od-computed-pool"]], "libs.db_access_functions.read_orig_destination_via_intermediate_shortest": [[207, "libs-db-access-functions-read-orig-destination-via-intermediate-shortest"]], "libs.db_access_functions.read_passenger_flows": [[208, "libs-db-access-functions-read-passenger-flows"]], "libs.db_access_functions.read_passenger_options": [[209, "libs-db-access-functions-read-passenger-options"]], "libs.db_access_functions.read_perc_min_perc_max_regulations_days": [[210, "libs-db-access-functions-read-perc-min-perc-max-regulations-days"]], "libs.db_access_functions.read_prob_atfm": [[211, "libs-db-access-functions-read-prob-atfm"]], "libs.db_access_functions.read_regulation_days_at_an_airport": [[212, "libs-db-access-functions-read-regulation-days-at-an-airport"]], "libs.db_access_functions.read_route_pool": [[213, "libs-db-access-functions-read-route-pool"]], "libs.db_access_functions.read_route_pool_o_d_generated": [[214, "libs-db-access-functions-read-route-pool-o-d-generated"]], "libs.db_access_functions.read_route_pool_static": [[215, "libs-db-access-functions-read-route-pool-static"]], "libs.db_access_functions.read_scenario": [[216, "libs-db-access-functions-read-scenario"]], "libs.db_access_functions.read_scenario_paras": [[217, "libs-db-access-functions-read-scenario-paras"]], "libs.db_access_functions.read_schedules": [[218, "libs-db-access-functions-read-schedules"]], "libs.db_access_functions.read_seed": [[219, "libs-db-access-functions-read-seed"]], "libs.db_access_functions.read_soft_cost_date": [[220, "libs-db-access-functions-read-soft-cost-date"]], "libs.db_access_functions.read_trajectories": [[221, "libs-db-access-functions-read-trajectories"]], "libs.db_access_functions.read_trajectories_dataframe": [[222, "libs-db-access-functions-read-trajectories-dataframe"]], "libs.db_access_functions.read_trajectories_ids": [[223, "libs-db-access-functions-read-trajectories-ids"]], "libs.db_access_functions.read_trajectories_missing": [[224, "libs-db-access-functions-read-trajectories-missing"]], "libs.db_access_functions.read_trajectories_missing_in_interval": [[225, "libs-db-access-functions-read-trajectories-missing-in-interval"]], "libs.db_access_functions.read_trajectories_options": [[226, "libs-db-access-functions-read-trajectories-options"]], "libs.db_access_functions.read_trajectories_pool": [[227, "libs-db-access-functions-read-trajectories-pool"]], "libs.db_access_functions.read_turnaround_data": [[228, "libs-db-access-functions-read-turnaround-data"]], "libs.db_access_functions.save_trajectories_pool": [[229, "libs-db-access-functions-save-trajectories-pool"]], "libs.db_access_functions.save_trajectories_segments": [[230, "libs-db-access-functions-save-trajectories-segments"]], "libs.input_manager": [[231, "module-libs.input_manager"]], "libs.input_manager.Input_manager": [[232, "libs-input-manager-input-manager"]], "libs.input_manager.filter_df": [[233, "libs-input-manager-filter-df"]], "libs.input_manager.filter_sql": [[234, "libs-input-manager-filter-sql"]], "libs.input_manager.read_data_from_dict": [[235, "libs-input-manager-read-data-from-dict"]], "libs.input_manager.write_toml": [[236, "libs-input-manager-write-toml"]], "libs.other_tools": [[237, "module-libs.other_tools"]], "libs.other_tools.FlightDummy": [[238, "libs-other-tools-flightdummy"]], "libs.other_tools.SlotDummy": [[239, "libs-other-tools-slotdummy"]], "libs.other_tools.allocation_from_flights": [[240, "libs-other-tools-allocation-from-flights"]], "libs.other_tools.clone_pax": [[241, "libs-other-tools-clone-pax"]], "libs.other_tools.compatible_slots": [[242, "libs-other-tools-compatible-slots"]], "libs.other_tools.compute_FPFS_allocation": [[243, "libs-other-tools-compute-fpfs-allocation"]], "libs.other_tools.distance_func": [[244, "libs-other-tools-distance-func"]], "libs.other_tools.flight_str": [[245, "libs-other-tools-flight-str"]], "libs.performance_trajectory": [[246, "module-libs.performance_trajectory"]], "libs.performance_trajectory.ac_performances": [[247, "module-libs.performance_trajectory.ac_performances"]], "libs.performance_trajectory.ac_performances.AircraftPerformance": [[248, "libs-performance-trajectory-ac-performances-aircraftperformance"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3": [[249, "libs-performance-trajectory-ac-performances-aircraftperformancebada3"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet": [[250, "libs-performance-trajectory-ac-performances-aircraftperformancebada3jet"]], "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP": [[251, "libs-performance-trajectory-ac-performances-aircraftperformancebada3tp"]], "libs.performance_trajectory.standard_atmosphere": [[252, "module-libs.performance_trajectory.standard_atmosphere"]], "libs.performance_trajectory.standard_atmosphere.density": [[253, "libs-performance-trajectory-standard-atmosphere-density"]], "libs.performance_trajectory.standard_atmosphere.pressure": [[254, "libs-performance-trajectory-standard-atmosphere-pressure"]], "libs.performance_trajectory.standard_atmosphere.sound_speed": [[255, "libs-performance-trajectory-standard-atmosphere-sound-speed"]], "libs.performance_trajectory.standard_atmosphere.temperature": [[256, "libs-performance-trajectory-standard-atmosphere-temperature"]], "libs.performance_trajectory.trajectory": [[257, "module-libs.performance_trajectory.trajectory"]], "libs.performance_trajectory.trajectory.Trajectory": [[258, "libs-performance-trajectory-trajectory-trajectory"]], "libs.performance_trajectory.trajectory.TrajectoryComponent": [[259, "libs-performance-trajectory-trajectory-trajectorycomponent"]], "libs.performance_trajectory.trajectory.TrajectorySegment": [[260, "libs-performance-trajectory-trajectory-trajectorysegment"]], "libs.performance_trajectory.unit_conversions": [[261, "module-libs.performance_trajectory.unit_conversions"]], "libs.performance_trajectory.unit_conversions.cas2tas": [[262, "libs-performance-trajectory-unit-conversions-cas2tas"]], "libs.performance_trajectory.unit_conversions.km2kt": [[263, "libs-performance-trajectory-unit-conversions-km2kt"]], "libs.performance_trajectory.unit_conversions.km2m": [[264, "libs-performance-trajectory-unit-conversions-km2m"]], "libs.performance_trajectory.unit_conversions.kt2m": [[265, "libs-performance-trajectory-unit-conversions-kt2m"]], "libs.performance_trajectory.unit_conversions.m2kt": [[266, "libs-performance-trajectory-unit-conversions-m2kt"]], "libs.result_manager": [[267, "module-libs.result_manager"]], "libs.result_manager.Result_manager": [[268, "libs-result-manager-result-manager"]], "libs.result_tools": [[269, "module-libs.result_tools"]], "libs.result_tools.binarise": [[270, "libs-result-tools-binarise"]], "libs.result_tools.build_aligned_pax_flight_df": [[271, "libs-result-tools-build-aligned-pax-flight-df"]], "libs.result_tools.build_single_iteration_df": [[272, "libs-result-tools-build-single-iteration-df"]], "libs.result_tools.clone_pax": [[273, "libs-result-tools-clone-pax"]], "libs.result_tools.compute_derived_metrics_hist_sim": [[274, "libs-result-tools-compute-derived-metrics-hist-sim"]], "libs.result_tools.compute_derived_metrics_historical": [[275, "libs-result-tools-compute-derived-metrics-historical"]], "libs.result_tools.compute_derived_metrics_pax_generic": [[276, "libs-result-tools-compute-derived-metrics-pax-generic"]], "libs.result_tools.compute_derived_metrics_simulations": [[277, "libs-result-tools-compute-derived-metrics-simulations"]], "libs.result_tools.compute_metrics_flights": [[278, "libs-result-tools-compute-metrics-flights"]], "libs.result_tools.compute_metrics_pax": [[279, "libs-result-tools-compute-metrics-pax"]], "libs.result_tools.find_destination_generic": [[280, "libs-result-tools-find-destination-generic"]], "libs.result_tools.find_origin_generic": [[281, "libs-result-tools-find-origin-generic"]], "libs.result_tools.get_historical_flights": [[282, "libs-result-tools-get-historical-flights"]], "libs.result_tools.get_pax_schedules": [[283, "libs-result-tools-get-pax-schedules"]], "libs.result_tools.merge_hist_sim": [[284, "libs-result-tools-merge-hist-sim"]], "libs.result_tools.merge_pax_flights": [[285, "libs-result-tools-merge-pax-flights"]], "libs.result_tools.produce_hist_sim_df": [[286, "libs-result-tools-produce-hist-sim-df"]], "libs.result_tools.produce_historical_flight_pax_df": [[287, "libs-result-tools-produce-historical-flight-pax-df"]], "libs.uow_tool_belt": [[288, "module-libs.uow_tool_belt"]], "libs.uow_tool_belt.DTW": [[289, "module-libs.uow_tool_belt.DTW"]], "libs.uow_tool_belt.DTW.dtw": [[290, "libs-uow-tool-belt-dtw-dtw"]], "libs.uow_tool_belt.DTW.dtw_path": [[291, "libs-uow-tool-belt-dtw-dtw-path"]], "libs.uow_tool_belt.airspace_particularities": [[292, "module-libs.uow_tool_belt.airspace_particularities"]], "libs.uow_tool_belt.airspace_particularities.get_nas_airport": [[293, "libs-uow-tool-belt-airspace-particularities-get-nas-airport"]], "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA": [[294, "libs-uow-tool-belt-airspace-particularities-is-atfm-area"]], "libs.uow_tool_belt.airspace_particularities.is_ECAC": [[295, "libs-uow-tool-belt-airspace-particularities-is-ecac"]], "libs.uow_tool_belt.connection_tools": [[296, "module-libs.uow_tool_belt.connection_tools"]], "libs.uow_tool_belt.connection_tools.EmptyConnection": [[297, "libs-uow-tool-belt-connection-tools-emptyconnection"]], "libs.uow_tool_belt.connection_tools.create_indexes_in_table": [[298, "libs-uow-tool-belt-connection-tools-create-indexes-in-table"]], "libs.uow_tool_belt.connection_tools.do_query": [[299, "libs-uow-tool-belt-connection-tools-do-query"]], "libs.uow_tool_belt.connection_tools.extract_ssh_parameters": [[300, "libs-uow-tool-belt-connection-tools-extract-ssh-parameters"]], "libs.uow_tool_belt.connection_tools.file_connection": [[301, "libs-uow-tool-belt-connection-tools-file-connection"]], "libs.uow_tool_belt.connection_tools.generic_connection": [[302, "libs-uow-tool-belt-connection-tools-generic-connection"]], "libs.uow_tool_belt.connection_tools.load_data_infile": [[303, "libs-uow-tool-belt-connection-tools-load-data-infile"]], "libs.uow_tool_belt.connection_tools.mysql_connection": [[304, "libs-uow-tool-belt-connection-tools-mysql-connection"]], "libs.uow_tool_belt.connection_tools.parquet_connection": [[305, "libs-uow-tool-belt-connection-tools-parquet-connection"]], "libs.uow_tool_belt.connection_tools.read_cred": [[306, "libs-uow-tool-belt-connection-tools-read-cred"]], "libs.uow_tool_belt.connection_tools.read_csv": [[307, "libs-uow-tool-belt-connection-tools-read-csv"]], "libs.uow_tool_belt.connection_tools.read_data": [[308, "libs-uow-tool-belt-connection-tools-read-data"]], "libs.uow_tool_belt.connection_tools.read_mysql": [[309, "libs-uow-tool-belt-connection-tools-read-mysql"]], "libs.uow_tool_belt.connection_tools.read_parquet": [[310, "libs-uow-tool-belt-connection-tools-read-parquet"]], "libs.uow_tool_belt.connection_tools.read_pickle": [[311, "libs-uow-tool-belt-connection-tools-read-pickle"]], "libs.uow_tool_belt.connection_tools.run_mysql_query": [[312, "libs-uow-tool-belt-connection-tools-run-mysql-query"]], "libs.uow_tool_belt.connection_tools.write_csv": [[313, "libs-uow-tool-belt-connection-tools-write-csv"]], "libs.uow_tool_belt.connection_tools.write_data": [[314, "libs-uow-tool-belt-connection-tools-write-data"]], "libs.uow_tool_belt.connection_tools.write_mysql": [[315, "libs-uow-tool-belt-connection-tools-write-mysql"]], "libs.uow_tool_belt.connection_tools.write_pickle": [[316, "libs-uow-tool-belt-connection-tools-write-pickle"]], "libs.uow_tool_belt.general_tools": [[317, "module-libs.uow_tool_belt.general_tools"]], "libs.uow_tool_belt.general_tools.A_B": [[318, "libs-uow-tool-belt-general-tools-a-b"]], "libs.uow_tool_belt.general_tools.DummyFile": [[319, "libs-uow-tool-belt-general-tools-dummyfile"]], "libs.uow_tool_belt.general_tools.HiddenPrints": [[320, "libs-uow-tool-belt-general-tools-hiddenprints"]], "libs.uow_tool_belt.general_tools.Paras": [[321, "libs-uow-tool-belt-general-tools-paras"]], "Class Paras": [[321, "class-paras"]], "libs.uow_tool_belt.general_tools.TwoWayDict": [[322, "libs-uow-tool-belt-general-tools-twowaydict"]], "libs.uow_tool_belt.general_tools.add_dicts": [[323, "libs-uow-tool-belt-general-tools-add-dicts"]], "libs.uow_tool_belt.general_tools.alert_print": [[324, "libs-uow-tool-belt-general-tools-alert-print"]], "libs.uow_tool_belt.general_tools.alphabet": [[325, "libs-uow-tool-belt-general-tools-alphabet"]], "libs.uow_tool_belt.general_tools.apply_args_and_kwargs": [[326, "libs-uow-tool-belt-general-tools-apply-args-and-kwargs"]], "libs.uow_tool_belt.general_tools.average_on_downsampled_interval": [[327, "libs-uow-tool-belt-general-tools-average-on-downsampled-interval"]], "libs.uow_tool_belt.general_tools.average_on_intervals": [[328, "libs-uow-tool-belt-general-tools-average-on-intervals"]], "libs.uow_tool_belt.general_tools.average_on_quantiles": [[329, "libs-uow-tool-belt-general-tools-average-on-quantiles"]], "libs.uow_tool_belt.general_tools.bootstrap_mean_test": [[330, "libs-uow-tool-belt-general-tools-bootstrap-mean-test"]], "libs.uow_tool_belt.general_tools.bootstrap_test": [[331, "libs-uow-tool-belt-general-tools-bootstrap-test"]], "libs.uow_tool_belt.general_tools.build_col_print_func": [[332, "libs-uow-tool-belt-general-tools-build-col-print-func"]], "libs.uow_tool_belt.general_tools.build_step_bivariate_function": [[333, "libs-uow-tool-belt-general-tools-build-step-bivariate-function"]], "libs.uow_tool_belt.general_tools.build_step_multi_valued_function": [[334, "libs-uow-tool-belt-general-tools-build-step-multi-valued-function"]], "libs.uow_tool_belt.general_tools.build_triangular": [[335, "libs-uow-tool-belt-general-tools-build-triangular"]], "libs.uow_tool_belt.general_tools.center_spatial_network": [[336, "libs-uow-tool-belt-general-tools-center-spatial-network"]], "libs.uow_tool_belt.general_tools.clock_time": [[337, "libs-uow-tool-belt-general-tools-clock-time"]], "libs.uow_tool_belt.general_tools.compute_percentile_with_weight": [[338, "libs-uow-tool-belt-general-tools-compute-percentile-with-weight"]], "libs.uow_tool_belt.general_tools.counter": [[339, "libs-uow-tool-belt-general-tools-counter"]], "libs.uow_tool_belt.general_tools.create_dir": [[340, "libs-uow-tool-belt-general-tools-create-dir"]], "libs.uow_tool_belt.general_tools.dict_depth": [[341, "libs-uow-tool-belt-general-tools-dict-depth"]], "libs.uow_tool_belt.general_tools.distance_euclidean": [[342, "libs-uow-tool-belt-general-tools-distance-euclidean"]], "libs.uow_tool_belt.general_tools.fit": [[343, "libs-uow-tool-belt-general-tools-fit"]], "libs.uow_tool_belt.general_tools.get_first_matching_element": [[344, "libs-uow-tool-belt-general-tools-get-first-matching-element"]], "libs.uow_tool_belt.general_tools.gini": [[345, "libs-uow-tool-belt-general-tools-gini"]], "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval": [[346, "libs-uow-tool-belt-general-tools-groupby-on-downsampled-interval"]], "libs.uow_tool_belt.general_tools.groupby_on_intervals": [[347, "libs-uow-tool-belt-general-tools-groupby-on-intervals"]], "libs.uow_tool_belt.general_tools.groupby_on_quantiles": [[348, "libs-uow-tool-belt-general-tools-groupby-on-quantiles"]], "libs.uow_tool_belt.general_tools.haversine": [[349, "libs-uow-tool-belt-general-tools-haversine"]], "libs.uow_tool_belt.general_tools.haversine_old": [[350, "libs-uow-tool-belt-general-tools-haversine-old"]], "libs.uow_tool_belt.general_tools.hex_to_rgb": [[351, "libs-uow-tool-belt-general-tools-hex-to-rgb"]], "libs.uow_tool_belt.general_tools.human_format": [[352, "libs-uow-tool-belt-general-tools-human-format"]], "libs.uow_tool_belt.general_tools.human_format_for_ticks": [[353, "libs-uow-tool-belt-general-tools-human-format-for-ticks"]], "libs.uow_tool_belt.general_tools.intermediate_point": [[354, "libs-uow-tool-belt-general-tools-intermediate-point"]], "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm": [[355, "libs-uow-tool-belt-general-tools-inv-mu-sig-lognorm"]], "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm": [[356, "libs-uow-tool-belt-general-tools-inv-s-loc-scale-lognorm"]], "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm": [[357, "libs-uow-tool-belt-general-tools-inv-s-scale-lognorm"]], "libs.uow_tool_belt.general_tools.inverted_edf": [[358, "libs-uow-tool-belt-general-tools-inverted-edf"]], "libs.uow_tool_belt.general_tools.keep_time": [[359, "libs-uow-tool-belt-general-tools-keep-time"]], "libs.uow_tool_belt.general_tools.loading": [[360, "libs-uow-tool-belt-general-tools-loading"]], "libs.uow_tool_belt.general_tools.logging": [[361, "libs-uow-tool-belt-general-tools-logging"]], "libs.uow_tool_belt.general_tools.loop": [[362, "libs-uow-tool-belt-general-tools-loop"]], "libs.uow_tool_belt.general_tools.make_df_with_3_levels": [[363, "libs-uow-tool-belt-general-tools-make-df-with-3-levels"]], "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick": [[364, "libs-uow-tool-belt-general-tools-make-df-with-3-levels-quick"]], "libs.uow_tool_belt.general_tools.make_nested_dict_from_df": [[365, "libs-uow-tool-belt-general-tools-make-nested-dict-from-df"]], "libs.uow_tool_belt.general_tools.mysql_server": [[366, "libs-uow-tool-belt-general-tools-mysql-server"]], "libs.uow_tool_belt.general_tools.parallelize": [[367, "libs-uow-tool-belt-general-tools-parallelize"]], "libs.uow_tool_belt.general_tools.partial_corr": [[368, "libs-uow-tool-belt-general-tools-partial-corr"]], "libs.uow_tool_belt.general_tools.percentile_10": [[369, "libs-uow-tool-belt-general-tools-percentile-10"]], "libs.uow_tool_belt.general_tools.percentile_90": [[370, "libs-uow-tool-belt-general-tools-percentile-90"]], "libs.uow_tool_belt.general_tools.percentile_custom": [[371, "libs-uow-tool-belt-general-tools-percentile-custom"]], "libs.uow_tool_belt.general_tools.permutation_test": [[372, "libs-uow-tool-belt-general-tools-permutation-test"]], "libs.uow_tool_belt.general_tools.permutation_test_only_diff": [[373, "libs-uow-tool-belt-general-tools-permutation-test-only-diff"]], "libs.uow_tool_belt.general_tools.proportional": [[374, "libs-uow-tool-belt-general-tools-proportional"]], "libs.uow_tool_belt.general_tools.r_squared": [[375, "libs-uow-tool-belt-general-tools-r-squared"]], "libs.uow_tool_belt.general_tools.read_paras": [[376, "libs-uow-tool-belt-general-tools-read-paras"]], "libs.uow_tool_belt.general_tools.recursive_concat": [[377, "libs-uow-tool-belt-general-tools-recursive-concat"]], "libs.uow_tool_belt.general_tools.recursive_minimization": [[378, "libs-uow-tool-belt-general-tools-recursive-minimization"]], "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists": [[379, "libs-uow-tool-belt-general-tools-remove-nan-coupled-lists"]], "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm": [[380, "libs-uow-tool-belt-general-tools-scale-and-s-from-mean-sigma-lognorm"]], "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm": [[381, "libs-uow-tool-belt-general-tools-scale-and-s-from-quantile-sigma-lognorm"]], "libs.uow_tool_belt.general_tools.set_interval": [[382, "libs-uow-tool-belt-general-tools-set-interval"]], "libs.uow_tool_belt.general_tools.shift_spatial_network": [[383, "libs-uow-tool-belt-general-tools-shift-spatial-network"]], "libs.uow_tool_belt.general_tools.show_dic": [[384, "libs-uow-tool-belt-general-tools-show-dic"]], "libs.uow_tool_belt.general_tools.silence": [[385, "libs-uow-tool-belt-general-tools-silence"]], "libs.uow_tool_belt.general_tools.simple_color_map_function": [[386, "libs-uow-tool-belt-general-tools-simple-color-map-function"]], "libs.uow_tool_belt.general_tools.simple_colormap_object": [[387, "libs-uow-tool-belt-general-tools-simple-colormap-object"]], "libs.uow_tool_belt.general_tools.sol_Bs": [[388, "libs-uow-tool-belt-general-tools-sol-bs"]], "libs.uow_tool_belt.general_tools.sort_lists": [[389, "libs-uow-tool-belt-general-tools-sort-lists"]], "libs.uow_tool_belt.general_tools.sort_paired_values": [[390, "libs-uow-tool-belt-general-tools-sort-paired-values"]], "libs.uow_tool_belt.general_tools.spread_integer": [[391, "libs-uow-tool-belt-general-tools-spread-integer"]], "libs.uow_tool_belt.general_tools.ssh_client_connection": [[392, "libs-uow-tool-belt-general-tools-ssh-client-connection"]], "libs.uow_tool_belt.general_tools.ssh_copy": [[393, "libs-uow-tool-belt-general-tools-ssh-copy"]], "libs.uow_tool_belt.general_tools.ssh_tunnel_connection": [[394, "libs-uow-tool-belt-general-tools-ssh-tunnel-connection"]], "libs.uow_tool_belt.general_tools.starmap_with_kwargs": [[395, "libs-uow-tool-belt-general-tools-starmap-with-kwargs"]], "libs.uow_tool_belt.general_tools.strip_string": [[396, "libs-uow-tool-belt-general-tools-strip-string"]], "libs.uow_tool_belt.general_tools.timeit": [[397, "libs-uow-tool-belt-general-tools-timeit"]], "libs.uow_tool_belt.general_tools.weight_avg": [[398, "libs-uow-tool-belt-general-tools-weight-avg"]], "libs.uow_tool_belt.general_tools.write_on_file": [[399, "libs-uow-tool-belt-general-tools-write-on-file"]], "libs.uow_tool_belt.general_tools.yes": [[400, "libs-uow-tool-belt-general-tools-yes"]], "libs.uow_tool_belt.logging": [[401, "module-libs.uow_tool_belt.logging"]], "libs.uow_tool_belt.network_tools": [[402, "module-libs.uow_tool_belt.network_tools"]], "libs.uow_tool_belt.plot_tools": [[403, "module-libs.uow_tool_belt.plot_tools"]], "libs.uow_tool_belt.plot_tools.bar_plot_template": [[404, "libs-uow-tool-belt-plot-tools-bar-plot-template"]], "libs.uow_tool_belt.plot_tools.savefig": [[405, "libs-uow-tool-belt-plot-tools-savefig"]], "libs.uow_tool_belt.trajectory_tools": [[406, "module-libs.uow_tool_belt.trajectory_tools"]], "libs.uow_tool_belt.trajectory_tools.compute_ab": [[407, "libs-uow-tool-belt-trajectory-tools-compute-ab"]], "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory": [[408, "libs-uow-tool-belt-trajectory-tools-create-vertical-trajectory"]], "libs.uow_tool_belt.trajectory_tools.detect_toc_tod": [[409, "libs-uow-tool-belt-trajectory-tools-detect-toc-tod"]], "libs.uow_tool_belt.trajectory_tools.plot_traj": [[410, "libs-uow-tool-belt-trajectory-tools-plot-traj"]], "mercury": [[411, "module-mercury"]], "mercury.manual_bool_cast": [[412, "mercury-manual-bool-cast"]], "modules": [[413, "module-modules"]], "modules.Auction": [[414, "module-modules.Auction"]], "modules.Auction.Auction": [[415, "module-modules.Auction.Auction"]], "modules.Auction.module_definition": [[416, "module-modules.Auction.module_definition"]], "modules.Auction.paras_Auction": [[417, "module-modules.Auction.paras_Auction"]], "modules.CM": [[418, "module-modules.CM"]], "modules.CM.CM": [[419, "module-modules.CM.CM"]], "modules.CM.CM.compute_adequate_default_parameters": [[420, "modules-cm-cm-compute-adequate-default-parameters"]], "modules.CM.CM.get_metric": [[421, "modules-cm-cm-get-metric"]], "modules.CM.CM.make_hotspot_decision_CM": [[422, "modules-cm-cm-make-hotspot-decision-cm"]], "modules.CM.CM.on_finalise_CM": [[423, "modules-cm-cm-on-finalise-cm"]], "modules.CM.CM.on_init_AOC": [[424, "modules-cm-cm-on-init-aoc"]], "modules.CM.CM.on_prepare_CM": [[425, "modules-cm-cm-on-prepare-cm"]], "modules.CM.module_definition": [[426, "module-modules.CM.module_definition"]], "modules.CM.paras_CM": [[427, "module-modules.CM.paras_CM"]], "modules.FAC": [[428, "module-modules.FAC"]], "modules.FAC.FAC_FIFO_queue": [[429, "module-modules.FAC.FAC_FIFO_queue"]], "modules.FAC.FAC_FIFO_queue.build_arrival_queue": [[430, "modules-fac-fac-fifo-queue-build-arrival-queue"]], "modules.FAC.FAC_FIFO_queue.update_arrival_queue": [[431, "modules-fac-fac-fifo-queue-update-arrival-queue"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue": [[432, "modules-fac-fac-fifo-queue-wait-for-flight-arrival-information-queue"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time": [[433, "modules-fac-fac-fifo-queue-wait-for-flight-arrival-information-request-provide-landing-time"]], "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue": [[434, "modules-fac-fac-fifo-queue-wait-for-flight-in-planning-horizon-queue"]], "modules.FAC.FAC_total_cost": [[435, "module-modules.FAC.FAC_total_cost"]], "modules.FAC.FAC_total_cost.compute_cost_slots_total": [[436, "modules-fac-fac-total-cost-compute-cost-slots-total"]], "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times": [[437, "modules-fac-fac-total-cost-compute-costs-slots-arrival-delay-cost-func-slots-times"]], "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs": [[438, "modules-fac-fac-total-cost-compute-costs-slots-computing-all-costs"]], "modules.FAC.FAC_total_cost.request_cost_delay_function": [[439, "modules-fac-fac-total-cost-request-cost-delay-function"]], "modules.FAC.FAC_total_cost.wait_for_cost_delay_function": [[440, "modules-fac-fac-total-cost-wait-for-cost-delay-function"]], "modules.FAC.FAC_total_delay": [[441, "module-modules.FAC.FAC_total_delay"]], "modules.FAC.FAC_total_delay.compute_total_delay_slots": [[442, "modules-fac-fac-total-delay-compute-total-delay-slots"]], "modules.FAC.FAC_total_delay.request_time_propagate_delay": [[443, "modules-fac-fac-total-delay-request-time-propagate-delay"]], "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time": [[444, "modules-fac-fac-total-delay-wait-for-propagation-delay-time"]], "modules.FAC.module_definition": [[445, "module-modules.FAC.module_definition"]], "modules.FP": [[446, "module-modules.FP"]], "modules.FP.FP_L1": [[447, "module-modules.FP.FP_L1"]], "modules.FP.FP_L1.consider_flight_swap_FP1": [[448, "modules-fp-fp-l1-consider-flight-swap-fp1"]], "modules.FP.FP_L2": [[449, "module-modules.FP.FP_L2"]], "modules.FP.FP_L2.consider_flight_swap_FP2": [[450, "modules-fp-fp-l2-consider-flight-swap-fp2"]], "modules.FP.module_definition": [[451, "module-modules.FP.module_definition"]], "modules.HMI_HOTSPOT": [[452, "module-modules.HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_FP_SEL": [[453, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi": [[454, "modules-hmi-hotspot-hmi-fp-sel-on-init-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi": [[455, "modules-hmi-hotspot-hmi-fp-sel-on-init-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi": [[456, "modules-hmi-hotspot-hmi-fp-sel-receive-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli": [[457, "modules-hmi-hotspot-hmi-fp-sel-select-fp-cli"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi": [[458, "modules-hmi-hotspot-hmi-fp-sel-select-fp-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi": [[459, "modules-hmi-hotspot-hmi-fp-sel-select-fp-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi": [[460, "modules-hmi-hotspot-hmi-fp-sel-send-fp-options-to-hmi"]], "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer": [[461, "modules-hmi-hotspot-hmi-fp-sel-wait-for-fp-remote-hmi-answer"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT": [[462, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision": [[463, "modules-hmi-hotspot-hmi-hotspot-compute-hotspot-decision"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi": [[464, "modules-hmi-hotspot-hmi-hotspot-make-hotspot-decision-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi": [[465, "modules-hmi-hotspot-hmi-hotspot-notify-aocs-of-final-allocation-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi": [[466, "modules-hmi-hotspot-hmi-hotspot-on-init-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation": [[467, "modules-hmi-hotspot-hmi-hotspot-receive-final-allocation"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages": [[468, "modules-hmi-hotspot-hmi-hotspot-receive-new-messages"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi": [[469, "modules-hmi-hotspot-hmi-hotspot-receive-regulation-decisions-remote-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline": [[470, "modules-hmi-hotspot-hmi-hotspot-send-final-allocation-to-airline"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi": [[471, "modules-hmi-hotspot-hmi-hotspot-send-final-allocation-to-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi": [[472, "modules-hmi-hotspot-hmi-hotspot-send-regulation-info-to-hmi"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text": [[473, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient": [[474, "modules-hmi-hotspot-hmi-hotspot-client-text-messageclient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP": [[475, "modules-hmi-hotspot-hmi-hotspot-client-text-windowudpp"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2": [[476, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient": [[477, "modules-hmi-hotspot-hmi-hotspot-client-text2-messageclient"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP": [[478, "modules-hmi-hotspot-hmi-hotspot-client-text2-windowudpp"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3": [[479, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"]], "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient": [[480, "modules-hmi-hotspot-hmi-hotspot-client-text3-messageclient"]], "modules.HMI_HOTSPOT.HMI_server": [[481, "module-modules.HMI_HOTSPOT.HMI_server"]], "modules.HMI_HOTSPOT.HMI_server.MercuryServer": [[482, "modules-hmi-hotspot-hmi-server-mercuryserver"]], "modules.HMI_HOTSPOT.HMI_server.main": [[483, "modules-hmi-hotspot-hmi-server-main"]], "modules.HMI_HOTSPOT.client_test": [[484, "module-modules.HMI_HOTSPOT.client_test"]], "modules.HMI_HOTSPOT.client_test.Client": [[485, "modules-hmi-hotspot-client-test-client"]], "modules.HMI_HOTSPOT.client_test2": [[486, "module-modules.HMI_HOTSPOT.client_test2"]], "modules.HMI_HOTSPOT.client_test2.ClientHMI": [[487, "modules-hmi-hotspot-client-test2-clienthmi"]], "modules.HMI_HOTSPOT.client_test_hmi": [[488, "module-modules.HMI_HOTSPOT.client_test_hmi"]], "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI": [[489, "modules-hmi-hotspot-client-test-hmi-clienthmi"]], "modules.HMI_HOTSPOT.client_test_hmi2": [[490, "module-modules.HMI_HOTSPOT.client_test_hmi2"]], "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI": [[491, "modules-hmi-hotspot-client-test-hmi2-clienthmi"]], "modules.HMI_HOTSPOT.client_test_mercury": [[492, "module-modules.HMI_HOTSPOT.client_test_mercury"]], "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury": [[493, "modules-hmi-hotspot-client-test-mercury-clientmercury"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi": [[494, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient": [[495, "modules-hmi-hotspot-hmi-regulation-test-hmi-messageclient"]], "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP": [[496, "modules-hmi-hotspot-hmi-regulation-test-hmi-windowselectfp"]], "modules.HMI_HOTSPOT.module_definition": [[497, "module-modules.HMI_HOTSPOT.module_definition"]], "modules.HMI_HOTSPOT.paras_HMI_FP_SEL": [[498, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"]], "modules.HMI_HOTSPOT.paras_HMI_HOTSPOT": [[499, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"]], "modules.TA": [[500, "module-modules.TA"]], "modules.TA.TA_L1": [[501, "module-modules.TA.TA_L1"]], "modules.TA.TA_L1.consider_waiting_pax_TA1": [[502, "modules-ta-ta-l1-consider-waiting-pax-ta1"]], "modules.TA.TA_L1.cost_index_assessment_TA1": [[503, "modules-ta-ta-l1-cost-index-assessment-ta1"]], "modules.TA.TA_L1.wait_for_toc_reached_message_TA1": [[504, "modules-ta-ta-l1-wait-for-toc-reached-message-ta1"]], "modules.TA.TA_L2": [[505, "module-modules.TA.TA_L2"]], "modules.TA.TA_L2.consider_waiting_pax_TA2": [[506, "modules-ta-ta-l2-consider-waiting-pax-ta2"]], "modules.TA.TA_L2.cost_index_assessment_TA2": [[507, "modules-ta-ta-l2-cost-index-assessment-ta2"]], "modules.TA.TA_L2.wait_for_toc_reached_message_TA2": [[508, "modules-ta-ta-l2-wait-for-toc-reached-message-ta2"]], "modules.TA.module_definition": [[509, "module-modules.TA.module_definition"]], "modules.nostromo_EAMAN": [[510, "module-modules.nostromo_EAMAN"]], "modules.nostromo_EAMAN.module_definition": [[511, "module-modules.nostromo_EAMAN.module_definition"]], "modules.nostromo_EAMAN.nostromo_EAMAN": [[512, "module-modules.nostromo_EAMAN.nostromo_EAMAN"]], "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW": [[513, "modules-nostromo-eaman-nostromo-eaman-ask-radar-update-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices": [[514, "modules-nostromo-eaman-nostromo-eaman-build-matrices"]], "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff": [[515, "modules-nostromo-eaman-nostromo-eaman-build-stuff"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight": [[516, "modules-nostromo-eaman-nostromo-eaman-compute-allocation-cost-for-flight"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights": [[517, "modules-nostromo-eaman-nostromo-eaman-compute-allocation-for-all-flights"]], "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation": [[518, "modules-nostromo-eaman-nostromo-eaman-compute-initial-allocation"]], "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen": [[519, "modules-nostromo-eaman-nostromo-eaman-generate-probas-speed-gen"]], "modules.nostromo_EAMAN.nostromo_EAMAN.get_p": [[520, "modules-nostromo-eaman-nostromo-eaman-get-p"]], "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon": [[521, "modules-nostromo-eaman-nostromo-eaman-notify-flight-in-data-horizon"]], "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing": [[522, "modules-nostromo-eaman-nostromo-eaman-notify-flight-landing"]], "modules.nostromo_EAMAN.nostromo_EAMAN.on_init": [[523, "modules-nostromo-eaman-nostromo-eaman-on-init"]], "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent": [[524, "modules-nostromo-eaman-nostromo-eaman-on-init-agent"]], "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced": [[525, "modules-nostromo-eaman-nostromo-eaman-prepare-data-for-optimizer-advanced"]], "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline": [[526, "modules-nostromo-eaman-nostromo-eaman-prepare-data-for-optimizer-baseline"]], "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages": [[527, "modules-nostromo-eaman-nostromo-eaman-receive-new-messages"]], "modules.nostromo_EAMAN.nostromo_EAMAN.rescale": [[528, "modules-nostromo-eaman-nostromo-eaman-rescale"]], "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function": [[529, "modules-nostromo-eaman-nostromo-eaman-send-request-for-cost-function"]], "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request": [[530, "modules-nostromo-eaman-nostromo-eaman-send-request-for-potential-delay-recovery-request"]], "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW": [[531, "modules-nostromo-eaman-nostromo-eaman-update-arrival-sequence-planning-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function": [[532, "modules-nostromo-eaman-nostromo-eaman-wait-for-cost-function"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW": [[533, "modules-nostromo-eaman-nostromo-eaman-wait-for-estimated-landing-time-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW": [[534, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-arrival-information-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon": [[535, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-in-data-horizon"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW": [[536, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-in-eaman-new"]], "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information": [[537, "modules-nostromo-eaman-nostromo-eaman-wait-for-flight-potential-delay-recover-information"]], "modules.nostromo_EAMAN.optimiser_advanced": [[538, "module-modules.nostromo_EAMAN.optimiser_advanced"]], "modules.nostromo_EAMAN.optimiser_advanced.DummyFile": [[539, "modules-nostromo-eaman-optimiser-advanced-dummyfile"]], "modules.nostromo_EAMAN.optimiser_advanced.NoSolution": [[540, "modules-nostromo-eaman-optimiser-advanced-nosolution"]], "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable": [[541, "modules-nostromo-eaman-optimiser-advanced-allocation-from-variable"]], "modules.nostromo_EAMAN.optimiser_advanced.clock_time": [[542, "modules-nostromo-eaman-optimiser-advanced-clock-time"]], "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element": [[543, "modules-nostromo-eaman-optimiser-advanced-get-first-matching-element"]], "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced": [[544, "modules-nostromo-eaman-optimiser-advanced-optimizer-advanced"]], "modules.nostromo_EAMAN.optimiser_advanced.silence": [[545, "modules-nostromo-eaman-optimiser-advanced-silence"]], "modules.nostromo_EAMAN.optimiser_baseline": [[546, "module-modules.nostromo_EAMAN.optimiser_baseline"]], "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline": [[547, "modules-nostromo-eaman-optimiser-baseline-optimizer-baseline"]], "modules.nostromo_EAMAN.optimiser_baseline_fast": [[548, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline": [[549, "modules-nostromo-eaman-optimiser-baseline-fast-optimizer-baseline"]]}, "indexentries": {"agents": [[13, "module-agents"]], "module": [[13, "module-agents"], [14, "module-agents.agent_base"], [17, "module-agents.airline_operating_centre"], [25, "module-agents.aman"], [33, "module-agents.commodities"], [34, "module-agents.commodities.aircraft"], [36, "module-agents.commodities.alliance"], [38, "module-agents.commodities.arrival_slot"], [40, "module-agents.commodities.atfm_delay"], [42, "module-agents.commodities.atfm_regulation"], [45, "module-agents.commodities.central_registry"], [47, "module-agents.commodities.debug_flights"], [48, "module-agents.commodities.flight_plan"], [52, "module-agents.commodities.pax_itinerary_group"], [55, "module-agents.commodities.route"], [58, "module-agents.commodities.slot_queue"], [62, "module-agents.commodities.slot_queue_eaman"], [65, "module-agents.dman"], [71, "module-agents.eaman"], [76, "module-agents.flight"], [87, "module-agents.ground_airport"], [94, "module-agents.network_manager"], [100, "module-agents.radar"], [106, "module-agents.seed"], [107, "module-core"], [108, "module-core.delivery_system"], [112, "module-core.module_management"], [118, "module-core.parametriser"], [123, "module-core.read_config"], [134, "module-core.results_aggregator"], [140, "module-core.scenario_loader"], [146, "module-core.simulation_manager"], [150, "module-core.world_builder"], [153, "module-dashboard"], [154, "module-dashboard.mercury_gui"], [155, "module-libs"], [156, "module-libs.airspace_particularities"], [160, "module-libs.db_access_functions"], [231, "module-libs.input_manager"], [237, "module-libs.other_tools"], [246, "module-libs.performance_trajectory"], [247, "module-libs.performance_trajectory.ac_performances"], [252, "module-libs.performance_trajectory.standard_atmosphere"], [257, "module-libs.performance_trajectory.trajectory"], [261, "module-libs.performance_trajectory.unit_conversions"], [267, "module-libs.result_manager"], [269, "module-libs.result_tools"], [288, "module-libs.uow_tool_belt"], [289, "module-libs.uow_tool_belt.DTW"], [292, "module-libs.uow_tool_belt.airspace_particularities"], [296, "module-libs.uow_tool_belt.connection_tools"], [317, "module-libs.uow_tool_belt.general_tools"], [401, "module-libs.uow_tool_belt.logging"], [402, "module-libs.uow_tool_belt.network_tools"], [403, "module-libs.uow_tool_belt.plot_tools"], [406, "module-libs.uow_tool_belt.trajectory_tools"], [411, "module-mercury"], [413, "module-modules"], [414, "module-modules.Auction"], [415, "module-modules.Auction.Auction"], [416, "module-modules.Auction.module_definition"], [417, "module-modules.Auction.paras_Auction"], [418, "module-modules.CM"], [419, "module-modules.CM.CM"], [426, "module-modules.CM.module_definition"], [427, "module-modules.CM.paras_CM"], [428, "module-modules.FAC"], [429, "module-modules.FAC.FAC_FIFO_queue"], [435, "module-modules.FAC.FAC_total_cost"], [441, "module-modules.FAC.FAC_total_delay"], [445, "module-modules.FAC.module_definition"], [446, "module-modules.FP"], [447, "module-modules.FP.FP_L1"], [449, "module-modules.FP.FP_L2"], [451, "module-modules.FP.module_definition"], [452, "module-modules.HMI_HOTSPOT"], [453, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"], [462, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"], [473, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"], [476, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"], [479, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"], [481, "module-modules.HMI_HOTSPOT.HMI_server"], [484, "module-modules.HMI_HOTSPOT.client_test"], [486, "module-modules.HMI_HOTSPOT.client_test2"], [488, "module-modules.HMI_HOTSPOT.client_test_hmi"], [490, "module-modules.HMI_HOTSPOT.client_test_hmi2"], [492, "module-modules.HMI_HOTSPOT.client_test_mercury"], [494, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"], [497, "module-modules.HMI_HOTSPOT.module_definition"], [498, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"], [499, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"], [500, "module-modules.TA"], [501, "module-modules.TA.TA_L1"], [505, "module-modules.TA.TA_L2"], [509, "module-modules.TA.module_definition"], [510, "module-modules.nostromo_EAMAN"], [511, "module-modules.nostromo_EAMAN.module_definition"], [512, "module-modules.nostromo_EAMAN.nostromo_EAMAN"], [538, "module-modules.nostromo_EAMAN.optimiser_advanced"], [546, "module-modules.nostromo_EAMAN.optimiser_baseline"], [548, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "agents.agent_base": [[14, "module-agents.agent_base"]], "agent (class in agents.agent_base)": [[15, "agents.agent_base.Agent"]], "__init__() (agents.agent_base.agent method)": [[15, "agents.agent_base.Agent.__init__"]], "apply_agent_modifications() (agents.agent_base.agent method)": [[15, "agents.agent_base.Agent.apply_agent_modifications"]], "role (class in agents.agent_base)": [[16, "agents.agent_base.Role"]], "__init__() (agents.agent_base.role method)": [[16, "agents.agent_base.Role.__init__"]], "send() (agents.agent_base.role method)": [[16, "agents.agent_base.Role.send"]], "agents.airline_operating_centre": [[17, "module-agents.airline_operating_centre"]], "airlineflightplanner (class in agents.airline_operating_centre)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner"]], "__init__() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.__init__"]], "build_delay_cost_functions_advanced() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_advanced"]], "build_delay_cost_functions_air_heuristic() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_air_heuristic"]], "build_delay_cost_functions_dci_l2() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_dci_l2"]], "build_delay_cost_functions_dci_l2_old() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_dci_l2_old"]], "build_delay_cost_functions_heuristic() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic"]], "build_delay_cost_functions_heuristic_flight() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic_flight"]], "build_delay_cost_functions_heuristic_pax() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.build_delay_cost_functions_heuristic_pax"]], "compute_reactionary_delays() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.compute_reactionary_delays"]], "cost_not_wait_for_pax_group() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.cost_not_wait_for_pax_group"]], "cost_wait_for_pax_group() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.cost_wait_for_pax_group"]], "decide_options_alternatives() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.decide_options_alternatives"]], "reassess_departure_turnaround() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.reassess_departure_turnaround"]], "send() (agents.airline_operating_centre.airlineflightplanner method)": [[18, "agents.airline_operating_centre.AirlineFlightPlanner.send"]], "airlineoperatingcentre (class in agents.airline_operating_centre)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre"]], "__init__() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.__init__"]], "apply_agent_modifications() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.apply_agent_modifications"]], "average_cost_function() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.average_cost_function"]], "average_missed_pax_cost() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.average_missed_pax_cost"]], "get_airline_of_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_airline_of_flight"]], "get_airlines_in_alliance() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_airlines_in_alliance"]], "get_all_airlines() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_all_airlines"]], "get_average_price_on_leg() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_average_price_on_leg"]], "get_curfew_buffer() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_curfew_buffer"]], "get_destination() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_destination"]], "get_first_obt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_first_obt"]], "get_flights() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_flights"]], "get_ibt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_ibt"]], "get_last_ibt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_last_ibt"]], "get_mct() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_mct"]], "get_n_pax_to_board() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_n_pax_to_board"]], "get_number_seats_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_number_seats_flight"]], "get_number_seats_itinerary() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_number_seats_itinerary"]], "get_obt() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_obt"]], "get_origin() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_origin"]], "get_pax_to_board() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_pax_to_board"]], "get_reactionary_buffer() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_reactionary_buffer"]], "get_status() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_status"]], "get_tat() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_tat"]], "get_total_travelling_time() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.get_total_travelling_time"]], "give_compensation_func() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.give_compensation_func"]], "give_delay_distr() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.give_delay_distr"]], "give_duty_of_care_func() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.give_duty_of_care_func"]], "give_non_pax_cost_delay() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.give_non_pax_cost_delay"]], "own_flights() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.own_flights"]], "receive() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.receive"]], "register_aircraft() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_aircraft"]], "register_airport() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_airport"]], "register_flight() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_flight"]], "register_fp_pool() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_fp_pool"]], "register_list_aircraft() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_list_aircraft"]], "register_nm() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_nm"]], "register_pax_itinerary_group() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_pax_itinerary_group"]], "register_trajectories_pool() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.register_trajectories_pool"]], "set_log_file() (agents.airline_operating_centre.airlineoperatingcentre method)": [[19, "agents.airline_operating_centre.AirlineOperatingCentre.set_log_file"]], "airlinepaxhandler (class in agents.airline_operating_centre)": [[20, "agents.airline_operating_centre.AirlinePaxHandler"]], "__init__() (agents.airline_operating_centre.airlinepaxhandler method)": [[20, "agents.airline_operating_centre.AirlinePaxHandler.__init__"]], "arrive_pax() (agents.airline_operating_centre.airlinepaxhandler method)": [[20, "agents.airline_operating_centre.AirlinePaxHandler.arrive_pax"]], "board_pax() (agents.airline_operating_centre.airlinepaxhandler method)": [[20, "agents.airline_operating_centre.AirlinePaxHandler.board_pax"]], "send() (agents.airline_operating_centre.airlinepaxhandler method)": [[20, "agents.airline_operating_centre.AirlinePaxHandler.send"]], "dynamiccostindexcomputer (class in agents.airline_operating_centre)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer"]], "__init__() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.__init__"]], "build_delay_cost_functions_dci_l1() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.build_delay_cost_functions_dci_l1"]], "build_delay_cost_functions_dci_l1_old() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.build_delay_cost_functions_dci_l1_old"]], "cost_index_assessment() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.cost_index_assessment"]], "decide_if_delay_recovery_performed() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.decide_if_delay_recovery_performed"]], "plot_costs_dci() (agents.airline_operating_centre.dynamiccostindexcomputer static method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.plot_costs_dci"]], "reassess_cost_index_ta0() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA0"]], "reassess_cost_index_ta1() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA1"]], "reassess_cost_index_ta2() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.reassess_cost_index_TA2"]], "send() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.send"]], "send_speed_up_msg_to_fpu() (agents.airline_operating_centre.dynamiccostindexcomputer method)": [[21, "agents.airline_operating_centre.DynamicCostIndexComputer.send_speed_up_msg_to_fpu"]], "flightplanselector (class in agents.airline_operating_centre)": [[22, "agents.airline_operating_centre.FlightPlanSelector"]], "__init__() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.__init__"]], "decide_fp() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.decide_fp"]], "select_fp() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.select_fp"]], "send() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.send"]], "send_option_selected() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.send_option_selected"]], "wait_for_fp_selection_request() (agents.airline_operating_centre.flightplanselector method)": [[22, "agents.airline_operating_centre.FlightPlanSelector.wait_for_fp_selection_request"]], "passengerreallocation (class in agents.airline_operating_centre)": [[23, "agents.airline_operating_centre.PassengerReallocation"]], "__init__() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.__init__"]], "compute_reallocation_options() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.compute_reallocation_options"]], "do_reallocation() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.do_reallocation"]], "reallocate_pax() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.reallocate_pax"]], "send() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.send"]], "send_allocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.send_allocation_pax_request"]], "wait_for_allocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.wait_for_allocation_pax_request"]], "wait_for_reallocation_pax_request() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.wait_for_reallocation_pax_request"]], "wait_for_remove_pax_from_boarding_list_request() (agents.airline_operating_centre.passengerreallocation method)": [[23, "agents.airline_operating_centre.PassengerReallocation.wait_for_remove_pax_from_boarding_list_request"]], "turnaroundoperations (class in agents.airline_operating_centre)": [[24, "agents.airline_operating_centre.TurnaroundOperations"]], "__init__() (agents.airline_operating_centre.turnaroundoperations method)": [[24, "agents.airline_operating_centre.TurnaroundOperations.__init__"]], "check_arrival() (agents.airline_operating_centre.turnaroundoperations method)": [[24, "agents.airline_operating_centre.TurnaroundOperations.check_arrival"]], "check_delay_estimation() (agents.airline_operating_centre.turnaroundoperations method)": [[24, "agents.airline_operating_centre.TurnaroundOperations.check_delay_estimation"]], "send() (agents.airline_operating_centre.turnaroundoperations method)": [[24, "agents.airline_operating_centre.TurnaroundOperations.send"]], "agents.aman": [[25, "module-agents.aman"]], "aman (class in agents.aman)": [[26, "agents.aman.AMAN"]], "__init__() (agents.aman.aman method)": [[26, "agents.aman.AMAN.__init__"]], "apply_agent_modifications() (agents.aman.aman method)": [[26, "agents.aman.AMAN.apply_agent_modifications"]], "arrivalcancellationhandler (class in agents.aman)": [[27, "agents.aman.ArrivalCancellationHandler"]], "__init__() (agents.aman.arrivalcancellationhandler method)": [[27, "agents.aman.ArrivalCancellationHandler.__init__"]], "send() (agents.aman.arrivalcancellationhandler method)": [[27, "agents.aman.ArrivalCancellationHandler.send"]], "arrivalqueueplannedupdater (class in agents.aman)": [[28, "agents.aman.ArrivalQueuePlannedUpdater"]], "__init__() (agents.aman.arrivalqueueplannedupdater method)": [[28, "agents.aman.ArrivalQueuePlannedUpdater.__init__"]], "send() (agents.aman.arrivalqueueplannedupdater method)": [[28, "agents.aman.ArrivalQueuePlannedUpdater.send"]], "arrivaltacticalprovider (class in agents.aman)": [[29, "agents.aman.ArrivalTacticalProvider"]], "__init__() (agents.aman.arrivaltacticalprovider method)": [[29, "agents.aman.ArrivalTacticalProvider.__init__"]], "send() (agents.aman.arrivaltacticalprovider method)": [[29, "agents.aman.ArrivalTacticalProvider.send"]], "flightinamanhandler (class in agents.aman)": [[30, "agents.aman.FlightInAMANHandler"]], "__init__() (agents.aman.flightinamanhandler method)": [[30, "agents.aman.FlightInAMANHandler.__init__"]], "send() (agents.aman.flightinamanhandler method)": [[30, "agents.aman.FlightInAMANHandler.send"]], "slotassigner (class in agents.aman)": [[31, "agents.aman.SlotAssigner"]], "__init__() (agents.aman.slotassigner method)": [[31, "agents.aman.SlotAssigner.__init__"]], "send() (agents.aman.slotassigner method)": [[31, "agents.aman.SlotAssigner.send"]], "strategicarrivalqueuebuilder (class in agents.aman)": [[32, "agents.aman.StrategicArrivalQueueBuilder"]], "__init__() (agents.aman.strategicarrivalqueuebuilder method)": [[32, "agents.aman.StrategicArrivalQueueBuilder.__init__"]], "send() (agents.aman.strategicarrivalqueuebuilder method)": [[32, "agents.aman.StrategicArrivalQueueBuilder.send"]], "agents.commodities": [[33, "module-agents.commodities"]], "agents.commodities.aircraft": [[34, "module-agents.commodities.aircraft"]], "aircraft (class in agents.commodities.aircraft)": [[35, "agents.commodities.aircraft.Aircraft"]], "getqueue (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.GetQueue"]], "putqueue (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.PutQueue"]], "__init__() (agents.commodities.aircraft.aircraft method)": [[35, "agents.commodities.aircraft.Aircraft.__init__"]], "add_flight() (agents.commodities.aircraft.aircraft method)": [[35, "agents.commodities.aircraft.Aircraft.add_flight"]], "capacity (agents.commodities.aircraft.aircraft property)": [[35, "agents.commodities.aircraft.Aircraft.capacity"]], "count (agents.commodities.aircraft.aircraft property)": [[35, "agents.commodities.aircraft.Aircraft.count"]], "get (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.get"]], "get_queue (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.get_queue"]], "put (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.put"]], "put_queue (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.put_queue"]], "queue (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.queue"]], "release (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.release"]], "request (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.request"]], "users (agents.commodities.aircraft.aircraft attribute)": [[35, "agents.commodities.aircraft.Aircraft.users"]], "agents.commodities.alliance": [[36, "module-agents.commodities.alliance"]], "alliance (class in agents.commodities.alliance)": [[37, "agents.commodities.alliance.Alliance"]], "__init__() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.__init__"]], "clear() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.clear"]], "copy() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.copy"]], "fromkeys() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.fromkeys"]], "get() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.get"]], "items() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.items"]], "keys() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.keys"]], "pop() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.pop"]], "popitem() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.popitem"]], "setdefault() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.setdefault"]], "update() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.update"]], "values() (agents.commodities.alliance.alliance method)": [[37, "agents.commodities.alliance.Alliance.values"]], "agents.commodities.arrival_slot": [[38, "module-agents.commodities.arrival_slot"]], "arrivalslot (class in agents.commodities.arrival_slot)": [[39, "agents.commodities.arrival_slot.ArrivalSlot"]], "__init__() (agents.commodities.arrival_slot.arrivalslot method)": [[39, "agents.commodities.arrival_slot.ArrivalSlot.__init__"]], "agents.commodities.atfm_delay": [[40, "module-agents.commodities.atfm_delay"]], "atfmdelay (class in agents.commodities.atfm_delay)": [[41, "agents.commodities.atfm_delay.ATFMDelay"]], "__init__() (agents.commodities.atfm_delay.atfmdelay method)": [[41, "agents.commodities.atfm_delay.ATFMDelay.__init__"]], "agents.commodities.atfm_regulation": [[42, "module-agents.commodities.atfm_regulation"]], "atfmbooker (class in agents.commodities.atfm_regulation)": [[43, "agents.commodities.atfm_regulation.ATFMBooker"]], "getqueue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.GetQueue"]], "putqueue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.PutQueue"]], "__init__() (agents.commodities.atfm_regulation.atfmbooker method)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.__init__"]], "capacity (agents.commodities.atfm_regulation.atfmbooker property)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.capacity"]], "count (agents.commodities.atfm_regulation.atfmbooker property)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.count"]], "get (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.get"]], "get_queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.get_queue"]], "put (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.put"]], "put_queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.put_queue"]], "queue (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.queue"]], "release() (agents.commodities.atfm_regulation.atfmbooker method)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.release"]], "request (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.request"]], "users (agents.commodities.atfm_regulation.atfmbooker attribute)": [[43, "agents.commodities.atfm_regulation.ATFMBooker.users"]], "atfmregulation (class in agents.commodities.atfm_regulation)": [[44, "agents.commodities.atfm_regulation.ATFMRegulation"]], "__init__() (agents.commodities.atfm_regulation.atfmregulation method)": [[44, "agents.commodities.atfm_regulation.ATFMRegulation.__init__"]], "agents.commodities.central_registry": [[45, "module-agents.commodities.central_registry"]], "centralregistry (class in agents.commodities.central_registry)": [[46, "agents.commodities.central_registry.CentralRegistry"]], "__init__() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.__init__"]], "get_average_price_on_leg() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.get_average_price_on_leg"]], "get_reactionary_buffer() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.get_reactionary_buffer"]], "get_tat() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.get_tat"]], "get_total_travelling_time() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.get_total_travelling_time"]], "register_agent() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.register_agent"]], "register_airline() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.register_airline"]], "register_network_manager() (agents.commodities.central_registry.centralregistry method)": [[46, "agents.commodities.central_registry.CentralRegistry.register_network_manager"]], "agents.commodities.debug_flights": [[47, "module-agents.commodities.debug_flights"]], "agents.commodities.flight_plan": [[48, "module-agents.commodities.flight_plan"]], "flightplan (class in agents.commodities.flight_plan)": [[49, "agents.commodities.flight_plan.FlightPlan"]], "__init__() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.__init__"]], "add_point_original_planned() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.add_point_original_planned"]], "find_intersecting_point() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.find_intersecting_point"]], "get_estimated_fuel_consumption() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.get_estimated_fuel_consumption"]], "get_eta_wo_atfm() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.get_eta_wo_atfm"]], "get_planned_flying_time_to_landing() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.get_planned_flying_time_to_landing"]], "name_point() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.name_point"]], "recompute_speeds_new_point() (agents.commodities.flight_plan.flightplan method)": [[49, "agents.commodities.flight_plan.FlightPlan.recompute_speeds_new_point"]], "flightplanpoint (class in agents.commodities.flight_plan)": [[50, "agents.commodities.flight_plan.FlightPlanPoint"]], "__init__() (agents.commodities.flight_plan.flightplanpoint method)": [[50, "agents.commodities.flight_plan.FlightPlanPoint.__init__"]], "my_deep_copy() (agents.commodities.flight_plan.flightplanpoint method)": [[50, "agents.commodities.flight_plan.FlightPlanPoint.my_deep_copy"]], "print_full() (agents.commodities.flight_plan.flightplanpoint method)": [[50, "agents.commodities.flight_plan.FlightPlanPoint.print_full"]], "set_event() (agents.commodities.flight_plan.flightplanpoint method)": [[50, "agents.commodities.flight_plan.FlightPlanPoint.set_event"]], "set_name() (agents.commodities.flight_plan.flightplanpoint method)": [[50, "agents.commodities.flight_plan.FlightPlanPoint.set_name"]], "build_proj() (in module agents.commodities.flight_plan)": [[51, "agents.commodities.flight_plan.build_proj"]], "agents.commodities.pax_itinerary_group": [[52, "module-agents.commodities.pax_itinerary_group"]], "paxitinerarygroup (class in agents.commodities.pax_itinerary_group)": [[53, "agents.commodities.pax_itinerary_group.PaxItineraryGroup"]], "__init__() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[53, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.__init__"]], "get_itinerary_so_far() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[53, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.get_itinerary_so_far"]], "give_itinerary() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[53, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.give_itinerary"]], "give_new_itinerary_from_last_flight() (agents.commodities.pax_itinerary_group.paxitinerarygroup method)": [[53, "agents.commodities.pax_itinerary_group.PaxItineraryGroup.give_new_itinerary_from_last_flight"]], "func() (in module agents.commodities.pax_itinerary_group)": [[54, "agents.commodities.pax_itinerary_group.func"]], "agents.commodities.route": [[55, "module-agents.commodities.route"]], "route (class in agents.commodities.route)": [[56, "agents.commodities.route.Route"]], "__init__() (agents.commodities.route.route method)": [[56, "agents.commodities.route.Route.__init__"]], "routepoint (class in agents.commodities.route)": [[57, "agents.commodities.route.RoutePoint"]], "__init__() (agents.commodities.route.routepoint method)": [[57, "agents.commodities.route.RoutePoint.__init__"]], "agents.commodities.slot_queue": [[58, "module-agents.commodities.slot_queue"]], "capacityperiod (class in agents.commodities.slot_queue)": [[59, "agents.commodities.slot_queue.CapacityPeriod"]], "__init__() (agents.commodities.slot_queue.capacityperiod method)": [[59, "agents.commodities.slot_queue.CapacityPeriod.__init__"]], "get_slot_from_time() (agents.commodities.slot_queue.capacityperiod method)": [[59, "agents.commodities.slot_queue.CapacityPeriod.get_slot_from_time"]], "get_slot_number() (agents.commodities.slot_queue.capacityperiod method)": [[59, "agents.commodities.slot_queue.CapacityPeriod.get_slot_number"]], "get_time_from_slot_number() (agents.commodities.slot_queue.capacityperiod method)": [[59, "agents.commodities.slot_queue.CapacityPeriod.get_time_from_slot_number"]], "slot (class in agents.commodities.slot_queue)": [[60, "agents.commodities.slot_queue.Slot"]], "__init__() (agents.commodities.slot_queue.slot method)": [[60, "agents.commodities.slot_queue.Slot.__init__"]], "print_info() (agents.commodities.slot_queue.slot method)": [[60, "agents.commodities.slot_queue.Slot.print_info"]], "slotqueue (class in agents.commodities.slot_queue)": [[61, "agents.commodities.slot_queue.SlotQueue"]], "__init__() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.__init__"]], "assign_to_slot() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.assign_to_slot"]], "consolidate_queue() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.consolidate_queue"]], "get_slots_available() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.get_slots_available"]], "print_selector() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.print_selector"]], "swap_flights() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.swap_flights"]], "update_arrival_assigned() (agents.commodities.slot_queue.slotqueue method)": [[61, "agents.commodities.slot_queue.SlotQueue.update_arrival_assigned"]], "agents.commodities.slot_queue_eaman": [[62, "module-agents.commodities.slot_queue_eaman"]], "eamanslot (class in agents.commodities.slot_queue_eaman)": [[63, "agents.commodities.slot_queue_eaman.EAMANSlot"]], "__init__() (agents.commodities.slot_queue_eaman.eamanslot method)": [[63, "agents.commodities.slot_queue_eaman.EAMANSlot.__init__"]], "print_info() (agents.commodities.slot_queue_eaman.eamanslot method)": [[63, "agents.commodities.slot_queue_eaman.EAMANSlot.print_info"]], "eamanslotqueue (class in agents.commodities.slot_queue_eaman)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue"]], "__init__() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.__init__"]], "assign_to_slot() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.assign_to_slot"]], "consolidate_queue() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.consolidate_queue"]], "get_slots_available() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.get_slots_available"]], "print_selector() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.print_selector"]], "swap_flights() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.swap_flights"]], "update_arrival_assigned() (agents.commodities.slot_queue_eaman.eamanslotqueue method)": [[64, "agents.commodities.slot_queue_eaman.EAMANSlotQueue.update_arrival_assigned"]], "agents.dman": [[65, "module-agents.dman"]], "dman (class in agents.dman)": [[66, "agents.dman.DMAN"]], "__init__() (agents.dman.dman method)": [[66, "agents.dman.DMAN.__init__"]], "apply_agent_modifications() (agents.dman.dman method)": [[66, "agents.dman.DMAN.apply_agent_modifications"]], "receive() (agents.dman.dman method)": [[66, "agents.dman.DMAN.receive"]], "register_airport() (agents.dman.dman method)": [[66, "agents.dman.DMAN.register_airport"]], "register_radar() (agents.dman.dman method)": [[66, "agents.dman.DMAN.register_radar"]], "set_log_file() (agents.dman.dman method)": [[66, "agents.dman.DMAN.set_log_file"]], "departurecancellationhandler (class in agents.dman)": [[67, "agents.dman.DepartureCancellationHandler"]], "__init__() (agents.dman.departurecancellationhandler method)": [[67, "agents.dman.DepartureCancellationHandler.__init__"]], "send() (agents.dman.departurecancellationhandler method)": [[67, "agents.dman.DepartureCancellationHandler.send"]], "departurequeueupdater (class in agents.dman)": [[68, "agents.dman.DepartureQueueUpdater"]], "__init__() (agents.dman.departurequeueupdater method)": [[68, "agents.dman.DepartureQueueUpdater.__init__"]], "send() (agents.dman.departurequeueupdater method)": [[68, "agents.dman.DepartureQueueUpdater.send"]], "departureslotprovider (class in agents.dman)": [[69, "agents.dman.DepartureSlotProvider"]], "__init__() (agents.dman.departureslotprovider method)": [[69, "agents.dman.DepartureSlotProvider.__init__"]], "send() (agents.dman.departureslotprovider method)": [[69, "agents.dman.DepartureSlotProvider.send"]], "strategicdeparturequeuebuilder (class in agents.dman)": [[70, "agents.dman.StrategicDepartureQueueBuilder"]], "__init__() (agents.dman.strategicdeparturequeuebuilder method)": [[70, "agents.dman.StrategicDepartureQueueBuilder.__init__"]], "build_departure_queue() (agents.dman.strategicdeparturequeuebuilder method)": [[70, "agents.dman.StrategicDepartureQueueBuilder.build_departure_queue"]], "send() (agents.dman.strategicdeparturequeuebuilder method)": [[70, "agents.dman.StrategicDepartureQueueBuilder.send"]], "agents.eaman": [[71, "module-agents.eaman"]], "arrivalplannerprovider (class in agents.eaman)": [[72, "agents.eaman.ArrivalPlannerProvider"]], "__init__() (agents.eaman.arrivalplannerprovider method)": [[72, "agents.eaman.ArrivalPlannerProvider.__init__"]], "send() (agents.eaman.arrivalplannerprovider method)": [[72, "agents.eaman.ArrivalPlannerProvider.send"]], "arrivalqueueplannedupdatere (class in agents.eaman)": [[73, "agents.eaman.ArrivalQueuePlannedUpdaterE"]], "__init__() (agents.eaman.arrivalqueueplannedupdatere method)": [[73, "agents.eaman.ArrivalQueuePlannedUpdaterE.__init__"]], "send() (agents.eaman.arrivalqueueplannedupdatere method)": [[73, "agents.eaman.ArrivalQueuePlannedUpdaterE.send"]], "eaman (class in agents.eaman)": [[74, "agents.eaman.EAMAN"]], "__init__() (agents.eaman.eaman method)": [[74, "agents.eaman.EAMAN.__init__"]], "apply_agent_modifications() (agents.eaman.eaman method)": [[74, "agents.eaman.EAMAN.apply_agent_modifications"]], "flightinamanhandlere (class in agents.eaman)": [[75, "agents.eaman.FlightInAMANHandlerE"]], "__init__() (agents.eaman.flightinamanhandlere method)": [[75, "agents.eaman.FlightInAMANHandlerE.__init__"]], "send() (agents.eaman.flightinamanhandlere method)": [[75, "agents.eaman.FlightInAMANHandlerE.send"]], "agents.flight": [[76, "module-agents.flight"]], "aircraftdepartinghandler (class in agents.flight)": [[77, "agents.flight.AircraftDepartingHandler"]], "__init__() (agents.flight.aircraftdepartinghandler method)": [[77, "agents.flight.AircraftDepartingHandler.__init__"]], "check_push_back() (agents.flight.aircraftdepartinghandler method)": [[77, "agents.flight.AircraftDepartingHandler.check_push_back"]], "do_taxi_out() (agents.flight.aircraftdepartinghandler method)": [[77, "agents.flight.AircraftDepartingHandler.do_taxi_out"]], "send() (agents.flight.aircraftdepartinghandler method)": [[77, "agents.flight.AircraftDepartingHandler.send"]], "wait_for_taxi_out_time() (agents.flight.aircraftdepartinghandler method)": [[77, "agents.flight.AircraftDepartingHandler.wait_for_taxi_out_time"]], "departureslotrequester (class in agents.flight)": [[78, "agents.flight.DepartureSlotRequester"]], "__init__() (agents.flight.departureslotrequester method)": [[78, "agents.flight.DepartureSlotRequester.__init__"]], "check_push_back_ready() (agents.flight.departureslotrequester method)": [[78, "agents.flight.DepartureSlotRequester.check_push_back_ready"]], "send() (agents.flight.departureslotrequester method)": [[78, "agents.flight.DepartureSlotRequester.send"]], "wait_for_departure_slot() (agents.flight.departureslotrequester method)": [[78, "agents.flight.DepartureSlotRequester.wait_for_departure_slot"]], "wait_for_taxi_out_time_estimation() (agents.flight.departureslotrequester method)": [[78, "agents.flight.DepartureSlotRequester.wait_for_taxi_out_time_estimation"]], "fpinfoprovider (class in agents.flight)": [[79, "agents.flight.FPInfoProvider"]], "__init__() (agents.flight.fpinfoprovider method)": [[79, "agents.flight.FPInfoProvider.__init__"]], "compute_fp_metrics() (agents.flight.fpinfoprovider method)": [[79, "agents.flight.FPInfoProvider.compute_fp_metrics"]], "send() (agents.flight.fpinfoprovider method)": [[79, "agents.flight.FPInfoProvider.send"]], "flight (class in agents.flight)": [[80, "agents.flight.Flight"]], "__init__() (agents.flight.flight method)": [[80, "agents.flight.Flight.__init__"]], "apply_agent_modifications() (agents.flight.flight method)": [[80, "agents.flight.Flight.apply_agent_modifications"]], "print_full() (agents.flight.flight method)": [[80, "agents.flight.Flight.print_full"]], "receive() (agents.flight.flight method)": [[80, "agents.flight.Flight.receive"]], "reschedule_fai_request() (agents.flight.flight method)": [[80, "agents.flight.Flight.reschedule_fai_request"]], "set_log_file() (agents.flight.flight method)": [[80, "agents.flight.Flight.set_log_file"]], "transfer_to_aoc() (agents.flight.flight method)": [[80, "agents.flight.Flight.transfer_to_aoc"]], "flightarrivalinformationprovider (class in agents.flight)": [[81, "agents.flight.FlightArrivalInformationProvider"]], "__init__() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.__init__"]], "check_fai_request() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.check_fai_request"]], "compute_cost_slots() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.compute_cost_slots"]], "provide_flight_arrival_information() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.provide_flight_arrival_information"]], "provide_flight_estimated_landing_time() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.provide_flight_estimated_landing_time"]], "send() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.send"]], "wait_for_flight_arrival_information_request() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.wait_for_flight_arrival_information_request"]], "wait_for_flight_estimated_landing_time_request() (agents.flight.flightarrivalinformationprovider method)": [[81, "agents.flight.FlightArrivalInformationProvider.wait_for_flight_estimated_landing_time_request"]], "flightplanconstraintupdater (class in agents.flight)": [[82, "agents.flight.FlightPlanConstraintUpdater"]], "__init__() (agents.flight.flightplanconstraintupdater method)": [[82, "agents.flight.FlightPlanConstraintUpdater.__init__"]], "send() (agents.flight.flightplanconstraintupdater method)": [[82, "agents.flight.FlightPlanConstraintUpdater.send"]], "update_flight_plan_constraint_controlled_landing_time() (agents.flight.flightplanconstraintupdater method)": [[82, "agents.flight.FlightPlanConstraintUpdater.update_flight_plan_constraint_controlled_landing_time"]], "wait_for_flight_plan_controlled_landing_time_constraint_update_request() (agents.flight.flightplanconstraintupdater method)": [[82, "agents.flight.FlightPlanConstraintUpdater.wait_for_flight_plan_controlled_landing_time_constraint_update_request"]], "flightplanupdater (class in agents.flight)": [[83, "agents.flight.FlightPlanUpdater"]], "__init__() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.__init__"]], "assing_fp_no_compute() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.assing_FP_no_compute"]], "send() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.send"]], "update_fp_information() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.update_FP_information"]], "update_eobt() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.update_eobt"]], "update_speed() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.update_speed"]], "wait_for_fp_assigment_no_compute() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.wait_for_FP_assigment_no_compute"]], "wait_for_fp_update() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.wait_for_FP_update"]], "wait_for_eobt_update() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.wait_for_eobt_update"]], "wait_for_speed_update() (agents.flight.flightplanupdater method)": [[83, "agents.flight.FlightPlanUpdater.wait_for_speed_update"]], "groundarrivalhandler (class in agents.flight)": [[84, "agents.flight.GroundArrivalHandler"]], "__init__() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.__init__"]], "check_landed() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.check_landed"]], "do_taxi_in() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.do_taxi_in"]], "request_taxi_in_time() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.request_taxi_in_time"]], "send() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.send"]], "wait_for_taxi_in_time() (agents.flight.groundarrivalhandler method)": [[84, "agents.flight.GroundArrivalHandler.wait_for_taxi_in_time"]], "operatetrajectory (class in agents.flight)": [[85, "agents.flight.OperateTrajectory"]], "__init__() (agents.flight.operatetrajectory method)": [[85, "agents.flight.OperateTrajectory.__init__"]], "check_taxi_out_done() (agents.flight.operatetrajectory method)": [[85, "agents.flight.OperateTrajectory.check_taxi_out_done"]], "send() (agents.flight.operatetrajectory method)": [[85, "agents.flight.OperateTrajectory.send"]], "potentialdelayrecoveryprovider (class in agents.flight)": [[86, "agents.flight.PotentialDelayRecoveryProvider"]], "__init__() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.__init__"]], "compute_potential_delay_recovery() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.compute_potential_delay_recovery"]], "estimate_time_fuel_at_speed_change() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.estimate_time_fuel_at_speed_change"]], "estimate_time_fuel_speed_changes() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.estimate_time_fuel_speed_changes"]], "provide_potential_delay_recover_information() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.provide_potential_delay_recover_information"]], "send() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.send"]], "wait_for_potential_delay_recover_request() (agents.flight.potentialdelayrecoveryprovider method)": [[86, "agents.flight.PotentialDelayRecoveryProvider.wait_for_potential_delay_recover_request"]], "agents.ground_airport": [[87, "module-agents.ground_airport"]], "groundairport (class in agents.ground_airport)": [[88, "agents.ground_airport.GroundAirport"]], "__init__() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.__init__"]], "apply_agent_modifications() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.apply_agent_modifications"]], "give_connecting_time_dist() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.give_connecting_time_dist"]], "give_taxi_in_time_estimation_dist() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.give_taxi_in_time_estimation_dist"]], "give_taxi_out_time_estimation_dist() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.give_taxi_out_time_estimation_dist"]], "give_taxi_time_add_dist() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.give_taxi_time_add_dist"]], "give_turnaround_time_dists() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.give_turnaround_time_dists"]], "receive() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.receive"]], "register_dman() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.register_dman"]], "register_eaman() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.register_eaman"]], "register_flight() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.register_flight"]], "set_log_file() (agents.ground_airport.groundairport method)": [[88, "agents.ground_airport.GroundAirport.set_log_file"]], "groundhandler (class in agents.ground_airport)": [[89, "agents.ground_airport.GroundHandler"]], "__init__() (agents.ground_airport.groundhandler method)": [[89, "agents.ground_airport.GroundHandler.__init__"]], "compute_turnaround_time() (agents.ground_airport.groundhandler method)": [[89, "agents.ground_airport.GroundHandler.compute_turnaround_time"]], "do_turnaround() (agents.ground_airport.groundhandler method)": [[89, "agents.ground_airport.GroundHandler.do_turnaround"]], "send() (agents.ground_airport.groundhandler method)": [[89, "agents.ground_airport.GroundHandler.send"]], "wait_for_turnaround_request() (agents.ground_airport.groundhandler method)": [[89, "agents.ground_airport.GroundHandler.wait_for_turnaround_request"]], "provideconnectingtime (class in agents.ground_airport)": [[90, "agents.ground_airport.ProvideConnectingTime"]], "__init__() (agents.ground_airport.provideconnectingtime method)": [[90, "agents.ground_airport.ProvideConnectingTime.__init__"]], "send() (agents.ground_airport.provideconnectingtime method)": [[90, "agents.ground_airport.ProvideConnectingTime.send"]], "taxiinprovider (class in agents.ground_airport)": [[91, "agents.ground_airport.TaxiInProvider"]], "__init__() (agents.ground_airport.taxiinprovider method)": [[91, "agents.ground_airport.TaxiInProvider.__init__"]], "compute_taxi_in_time() (agents.ground_airport.taxiinprovider method)": [[91, "agents.ground_airport.TaxiInProvider.compute_taxi_in_time"]], "send() (agents.ground_airport.taxiinprovider method)": [[91, "agents.ground_airport.TaxiInProvider.send"]], "taxioutestimator (class in agents.ground_airport)": [[92, "agents.ground_airport.TaxiOutEstimator"]], "__init__() (agents.ground_airport.taxioutestimator method)": [[92, "agents.ground_airport.TaxiOutEstimator.__init__"]], "send() (agents.ground_airport.taxioutestimator method)": [[92, "agents.ground_airport.TaxiOutEstimator.send"]], "taxioutprovider (class in agents.ground_airport)": [[93, "agents.ground_airport.TaxiOutProvider"]], "__init__() (agents.ground_airport.taxioutprovider method)": [[93, "agents.ground_airport.TaxiOutProvider.__init__"]], "compute_taxi_out_time() (agents.ground_airport.taxioutprovider method)": [[93, "agents.ground_airport.TaxiOutProvider.compute_taxi_out_time"]], "send() (agents.ground_airport.taxioutprovider method)": [[93, "agents.ground_airport.TaxiOutProvider.send"]], "agents.network_manager": [[94, "module-agents.network_manager"]], "hotspotmanager (class in agents.network_manager)": [[95, "agents.network_manager.HotspotManager"]], "__init__() (agents.network_manager.hotspotmanager method)": [[95, "agents.network_manager.HotspotManager.__init__"]], "send() (agents.network_manager.hotspotmanager method)": [[95, "agents.network_manager.HotspotManager.send"]], "networkmanager (class in agents.network_manager)": [[96, "agents.network_manager.NetworkManager"]], "__init__() (agents.network_manager.networkmanager method)": [[96, "agents.network_manager.NetworkManager.__init__"]], "apply_agent_modifications() (agents.network_manager.networkmanager method)": [[96, "agents.network_manager.NetworkManager.apply_agent_modifications"]], "register_atfm_regulation() (agents.network_manager.networkmanager method)": [[96, "agents.network_manager.NetworkManager.register_atfm_regulation"]], "remove_regulation_slots_except() (agents.network_manager.networkmanager method)": [[96, "agents.network_manager.NetworkManager.remove_regulation_slots_except"]], "networkmanageracceptanddisseminatefp (class in agents.network_manager)": [[97, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP"]], "__init__() (agents.network_manager.networkmanageracceptanddisseminatefp method)": [[97, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP.__init__"]], "send() (agents.network_manager.networkmanageracceptanddisseminatefp method)": [[97, "agents.network_manager.NetworkManagerAcceptAndDisseminateFP.send"]], "networkmanagercancelfp (class in agents.network_manager)": [[98, "agents.network_manager.NetworkManagerCancelFP"]], "__init__() (agents.network_manager.networkmanagercancelfp method)": [[98, "agents.network_manager.NetworkManagerCancelFP.__init__"]], "send() (agents.network_manager.networkmanagercancelfp method)": [[98, "agents.network_manager.NetworkManagerCancelFP.send"]], "networkmanagerflightplanprocessing (class in agents.network_manager)": [[99, "agents.network_manager.NetworkManagerFlightPlanProcessing"]], "__init__() (agents.network_manager.networkmanagerflightplanprocessing method)": [[99, "agents.network_manager.NetworkManagerFlightPlanProcessing.__init__"]], "compute_atfm_delay() (agents.network_manager.networkmanagerflightplanprocessing method)": [[99, "agents.network_manager.NetworkManagerFlightPlanProcessing.compute_atfm_delay"]], "send() (agents.network_manager.networkmanagerflightplanprocessing method)": [[99, "agents.network_manager.NetworkManagerFlightPlanProcessing.send"]], "agents.radar": [[100, "module-agents.radar"]], "disseminatecancellationflightplan (class in agents.radar)": [[101, "agents.radar.DisseminateCancellationFlightPlan"]], "__init__() (agents.radar.disseminatecancellationflightplan method)": [[101, "agents.radar.DisseminateCancellationFlightPlan.__init__"]], "send() (agents.radar.disseminatecancellationflightplan method)": [[101, "agents.radar.DisseminateCancellationFlightPlan.send"]], "disseminateflightplan (class in agents.radar)": [[102, "agents.radar.DisseminateFlightPlan"]], "__init__() (agents.radar.disseminateflightplan method)": [[102, "agents.radar.DisseminateFlightPlan.__init__"]], "add_subscription() (agents.radar.disseminateflightplan method)": [[102, "agents.radar.DisseminateFlightPlan.add_subscription"]], "disseminate_flight_plan() (agents.radar.disseminateflightplan method)": [[102, "agents.radar.DisseminateFlightPlan.disseminate_flight_plan"]], "send() (agents.radar.disseminateflightplan method)": [[102, "agents.radar.DisseminateFlightPlan.send"]], "disseminateflightpositionupdate (class in agents.radar)": [[103, "agents.radar.DisseminateFlightPositionUpdate"]], "__init__() (agents.radar.disseminateflightpositionupdate method)": [[103, "agents.radar.DisseminateFlightPositionUpdate.__init__"]], "check_flight_crossing_point() (agents.radar.disseminateflightpositionupdate method)": [[103, "agents.radar.DisseminateFlightPositionUpdate.check_flight_crossing_point"]], "send() (agents.radar.disseminateflightpositionupdate method)": [[103, "agents.radar.DisseminateFlightPositionUpdate.send"]], "radar (class in agents.radar)": [[104, "agents.radar.Radar"]], "__init__() (agents.radar.radar method)": [[104, "agents.radar.Radar.__init__"]], "apply_agent_modifications() (agents.radar.radar method)": [[104, "agents.radar.Radar.apply_agent_modifications"]], "receive() (agents.radar.radar method)": [[104, "agents.radar.Radar.receive"]], "register_airport() (agents.radar.radar method)": [[104, "agents.radar.Radar.register_airport"]], "set_log_file() (agents.radar.radar method)": [[104, "agents.radar.Radar.set_log_file"]], "radaraugmentflightplan (class in agents.radar)": [[105, "agents.radar.RadarAugmentFlightPlan"]], "__init__() (agents.radar.radaraugmentflightplan method)": [[105, "agents.radar.RadarAugmentFlightPlan.__init__"]], "augment_flight_plan() (agents.radar.radaraugmentflightplan method)": [[105, "agents.radar.RadarAugmentFlightPlan.augment_flight_plan"]], "send() (agents.radar.radaraugmentflightplan method)": [[105, "agents.radar.RadarAugmentFlightPlan.send"]], "agents.seed": [[106, "module-agents.seed"]], "core": [[107, "module-core"]], "core.delivery_system": [[108, "module-core.delivery_system"]], "letter (class in core.delivery_system)": [[109, "core.delivery_system.Letter"]], "__init__() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.__init__"]], "clear() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.clear"]], "copy() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.copy"]], "fromkeys() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.fromkeys"]], "get() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.get"]], "items() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.items"]], "keys() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.keys"]], "pop() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.pop"]], "popitem() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.popitem"]], "setdefault() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.setdefault"]], "update() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.update"]], "values() (core.delivery_system.letter method)": [[109, "core.delivery_system.Letter.values"]], "letterbox (class in core.delivery_system)": [[110, "core.delivery_system.LetterBox"]], "__init__() (core.delivery_system.letterbox method)": [[110, "core.delivery_system.LetterBox.__init__"]], "postman (class in core.delivery_system)": [[111, "core.delivery_system.Postman"]], "__init__() (core.delivery_system.postman method)": [[111, "core.delivery_system.Postman.__init__"]], "register_agent() (core.delivery_system.postman method)": [[111, "core.delivery_system.Postman.register_agent"]], "send_hmi() (core.delivery_system.postman method)": [[111, "core.delivery_system.Postman.send_hmi"]], "core.module_management": [[112, "module-core.module_management"]], "check_incompatibilities() (in module core.module_management)": [[113, "core.module_management.check_incompatibilities"]], "find_actual_module_name() (in module core.module_management)": [[114, "core.module_management.find_actual_module_name"]], "get_all_modules() (in module core.module_management)": [[115, "core.module_management.get_all_modules"]], "get_module_paras() (in module core.module_management)": [[116, "core.module_management.get_module_paras"]], "load_mercury_module() (in module core.module_management)": [[117, "core.module_management.load_mercury_module"]], "core.parametriser": [[118, "module-core.parametriser"]], "parametriser (class in core.parametriser)": [[119, "core.parametriser.Parametriser"]], "__init__() (core.parametriser.parametriser method)": [[119, "core.parametriser.Parametriser.__init__"]], "parametrisercapacity (class in core.parametriser)": [[120, "core.parametriser.ParametriserCapacity"]], "__init__() (core.parametriser.parametrisercapacity method)": [[120, "core.parametriser.ParametriserCapacity.__init__"]], "parametriserselector (class in core.parametriser)": [[121, "core.parametriser.ParametriserSelector"]], "__init__() (core.parametriser.parametriserselector method)": [[121, "core.parametriser.ParametriserSelector.__init__"]], "parametriserstandard (class in core.parametriser)": [[122, "core.parametriser.ParametriserStandard"]], "__init__() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.__init__"]], "apply_alpha_compensation_magnitude() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_alpha_compensation_magnitude"]], "apply_alpha_doc_magnitude() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_alpha_doc_magnitude"]], "apply_alpha_mct() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_alpha_mct"]], "apply_alpha_non_atfm() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_alpha_non_ATFM"]], "apply_alpha_tat_mean() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_alpha_tat_mean"]], "apply_anchor() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_anchor"]], "apply_dci_max_threshold() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_dci_max_threshold"]], "apply_dci_min_threshold() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_dci_min_threshold"]], "apply_delta_mct() (core.parametriser.parametriserstandard method)": [[122, "core.parametriser.ParametriserStandard.apply_delta_mct"]], "core.read_config": [[123, "module-core.read_config"]], "add_output_process() (in module core.read_config)": [[124, "core.read_config.add_output_process"]], "find_paras_categories() (in module core.read_config)": [[125, "core.read_config.find_paras_categories"]], "flatten_paras_dict() (in module core.read_config)": [[126, "core.read_config.flatten_paras_dict"]], "read_mercury_config() (in module core.read_config)": [[127, "core.read_config.read_mercury_config"]], "read_scenario_config() (in module core.read_config)": [[128, "core.read_config.read_scenario_config"]], "read_toml() (in module core.read_config)": [[129, "core.read_config.read_toml"]], "transform_conf_paras() (in module core.read_config)": [[130, "core.read_config.transform_conf_paras"]], "unflatten_profiles() (in module core.read_config)": [[131, "core.read_config.unflatten_profiles"]], "unfold_paras_dict() (in module core.read_config)": [[132, "core.read_config.unfold_paras_dict"]], "update_scenario_paras_based_on_case_study() (in module core.read_config)": [[133, "core.read_config.update_scenario_paras_based_on_case_study"]], "core.results_aggregator": [[134, "module-core.results_aggregator"]], "resultaggregatoradvanced (class in core.results_aggregator)": [[135, "core.results_aggregator.ResultAggregatorAdvanced"]], "__init__() (core.results_aggregator.resultaggregatoradvanced method)": [[135, "core.results_aggregator.ResultAggregatorAdvanced.__init__"]], "resultsaggregator (class in core.results_aggregator)": [[136, "core.results_aggregator.ResultsAggregator"]], "__init__() (core.results_aggregator.resultsaggregator method)": [[136, "core.results_aggregator.ResultsAggregator.__init__"]], "resultsaggregatorselector (class in core.results_aggregator)": [[137, "core.results_aggregator.ResultsAggregatorSelector"]], "__init__() (core.results_aggregator.resultsaggregatorselector method)": [[137, "core.results_aggregator.ResultsAggregatorSelector.__init__"]], "resultsaggregatorsimple (class in core.results_aggregator)": [[138, "core.results_aggregator.ResultsAggregatorSimple"]], "__init__() (core.results_aggregator.resultsaggregatorsimple method)": [[138, "core.results_aggregator.ResultsAggregatorSimple.__init__"]], "resultsaggregatorsimplereduced (class in core.results_aggregator)": [[139, "core.results_aggregator.ResultsAggregatorSimpleReduced"]], "__init__() (core.results_aggregator.resultsaggregatorsimplereduced method)": [[139, "core.results_aggregator.ResultsAggregatorSimpleReduced.__init__"]], "core.scenario_loader": [[140, "module-core.scenario_loader"]], "scenarioloader (class in core.scenario_loader)": [[141, "core.scenario_loader.ScenarioLoader"]], "__init__() (core.scenario_loader.scenarioloader method)": [[141, "core.scenario_loader.ScenarioLoader.__init__"]], "scenarioloaderselector (class in core.scenario_loader)": [[142, "core.scenario_loader.ScenarioLoaderSelector"]], "__init__() (core.scenario_loader.scenarioloaderselector method)": [[142, "core.scenario_loader.ScenarioLoaderSelector.__init__"]], "scenarioloadersimple (class in core.scenario_loader)": [[143, "core.scenario_loader.ScenarioLoaderSimple"]], "__init__() (core.scenario_loader.scenarioloadersimple method)": [[143, "core.scenario_loader.ScenarioLoaderSimple.__init__"]], "reload() (core.scenario_loader.scenarioloadersimple method)": [[143, "core.scenario_loader.ScenarioLoaderSimple.reload"]], "scenarioloaderstandard (class in core.scenario_loader)": [[144, "core.scenario_loader.ScenarioLoaderStandard"]], "__init__() (core.scenario_loader.scenarioloaderstandard method)": [[144, "core.scenario_loader.ScenarioLoaderStandard.__init__"]], "create_flight_plans() (core.scenario_loader.scenarioloaderstandard method)": [[144, "core.scenario_loader.ScenarioLoaderStandard.create_flight_plans"]], "reload() (core.scenario_loader.scenarioloaderstandard method)": [[144, "core.scenario_loader.ScenarioLoaderStandard.reload"]], "scenarioloaderstandardlocal (class in core.scenario_loader)": [[145, "core.scenario_loader.ScenarioLoaderStandardLocal"]], "__init__() (core.scenario_loader.scenarioloaderstandardlocal method)": [[145, "core.scenario_loader.ScenarioLoaderStandardLocal.__init__"]], "create_flight_plans() (core.scenario_loader.scenarioloaderstandardlocal method)": [[145, "core.scenario_loader.ScenarioLoaderStandardLocal.create_flight_plans"]], "reload() (core.scenario_loader.scenarioloaderstandardlocal method)": [[145, "core.scenario_loader.ScenarioLoaderStandardLocal.reload"]], "core.simulation_manager": [[146, "module-core.simulation_manager"]], "mercury (class in core.simulation_manager)": [[147, "core.simulation_manager.Mercury"]], "__init__() (core.simulation_manager.mercury method)": [[147, "core.simulation_manager.Mercury.__init__"]], "build_agents() (core.simulation_manager.mercury method)": [[147, "core.simulation_manager.Mercury.build_agents"]], "compute_path() (core.simulation_manager.mercury method)": [[147, "core.simulation_manager.Mercury.compute_path"]], "run() (core.simulation_manager.mercury method)": [[147, "core.simulation_manager.Mercury.run"]], "build_command() (in module core.simulation_manager)": [[148, "core.simulation_manager.build_command"]], "create_paras_file_from_dict() (in module core.simulation_manager)": [[149, "core.simulation_manager.create_paras_file_from_dict"]], "core.world_builder": [[150, "module-core.world_builder"]], "world (class in core.world_builder)": [[151, "core.world_builder.World"]], "__init__() (core.world_builder.world method)": [[151, "core.world_builder.World.__init__"]], "create_amans() (core.world_builder.world method)": [[151, "core.world_builder.World.create_AMANs"]], "load_scenario() (core.world_builder.world method)": [[151, "core.world_builder.World.load_scenario"]], "trace() (in module core.world_builder)": [[152, "core.world_builder.trace"]], "dashboard": [[153, "module-dashboard"]], "dashboard.mercury_gui": [[154, "module-dashboard.mercury_gui"]], "libs": [[155, "module-libs"]], "libs.airspace_particularities": [[156, "module-libs.airspace_particularities"]], "get_nas_airport() (in module libs.airspace_particularities)": [[157, "libs.airspace_particularities.get_nas_airport"]], "is_atfm_area() (in module libs.airspace_particularities)": [[158, "libs.airspace_particularities.is_ATFM_AREA"]], "is_ecac() (in module libs.airspace_particularities)": [[159, "libs.airspace_particularities.is_ECAC"]], "libs.db_access_functions": [[160, "module-libs.db_access_functions"]], "dataaccessbada4 (class in libs.db_access_functions)": [[161, "libs.db_access_functions.DataAccessBADA4"]], "__init__() (libs.db_access_functions.dataaccessbada4 method)": [[161, "libs.db_access_functions.DataAccessBADA4.__init__"]], "read_dict_wtc_engine_model() (libs.db_access_functions.dataaccessbada4 method)": [[161, "libs.db_access_functions.DataAccessBADA4.read_dict_wtc_engine_model"]], "dataaccessperformance (class in libs.db_access_functions)": [[162, "libs.db_access_functions.DataAccessPerformance"]], "__init__() (libs.db_access_functions.dataaccessperformance method)": [[162, "libs.db_access_functions.DataAccessPerformance.__init__"]], "read_dict_wtc_engine_model() (libs.db_access_functions.dataaccessperformance method)": [[162, "libs.db_access_functions.DataAccessPerformance.read_dict_wtc_engine_model"]], "add_crco_to_flights_in_db() (in module libs.db_access_functions)": [[163, "libs.db_access_functions.add_crco_to_flights_in_db"]], "get_information_routes_o_d_generated() (in module libs.db_access_functions)": [[164, "libs.db_access_functions.get_information_routes_o_d_generated"]], "read_atfm_at_airports() (in module libs.db_access_functions)": [[165, "libs.db_access_functions.read_ATFM_at_airports"]], "read_atfm_at_airports_days() (in module libs.db_access_functions)": [[166, "libs.db_access_functions.read_ATFM_at_airports_days"]], "read_atfm_at_airports_manual() (in module libs.db_access_functions)": [[167, "libs.db_access_functions.read_ATFM_at_airports_manual"]], "read_atfm_at_airports_old() (in module libs.db_access_functions)": [[168, "libs.db_access_functions.read_ATFM_at_airports_old"]], "read_mct() (in module libs.db_access_functions)": [[169, "libs.db_access_functions.read_MCT"]], "read_airlines_data() (in module libs.db_access_functions)": [[170, "libs.db_access_functions.read_airlines_data"]], "read_airport_coords() (in module libs.db_access_functions)": [[171, "libs.db_access_functions.read_airport_coords"]], "read_airports_curfew_data() (in module libs.db_access_functions)": [[172, "libs.db_access_functions.read_airports_curfew_data"]], "read_airports_data() (in module libs.db_access_functions)": [[173, "libs.db_access_functions.read_airports_data"]], "read_airports_modif_data() (in module libs.db_access_functions)": [[174, "libs.db_access_functions.read_airports_modif_data"]], "read_airspace_static() (in module libs.db_access_functions)": [[175, "libs.db_access_functions.read_airspace_static"]], "read_all_regulation_days() (in module libs.db_access_functions)": [[176, "libs.db_access_functions.read_all_regulation_days"]], "read_compensation_data() (in module libs.db_access_functions)": [[177, "libs.db_access_functions.read_compensation_data"]], "read_coord_trajectory_route() (in module libs.db_access_functions)": [[178, "libs.db_access_functions.read_coord_trajectory_route"]], "read_coord_trajectory_route_based_on_id() (in module libs.db_access_functions)": [[179, "libs.db_access_functions.read_coord_trajectory_route_based_on_id"]], "read_countries_atfm_nas() (in module libs.db_access_functions)": [[180, "libs.db_access_functions.read_countries_ATFM_NAS"]], "read_crco() (in module libs.db_access_functions)": [[181, "libs.db_access_functions.read_crco"]], "read_crco_charges() (in module libs.db_access_functions)": [[182, "libs.db_access_functions.read_crco_charges"]], "read_dict_ac_bada_code_ac_model() (in module libs.db_access_functions)": [[183, "libs.db_access_functions.read_dict_ac_bada_code_ac_model"]], "read_dict_ac_type_wtc() (in module libs.db_access_functions)": [[184, "libs.db_access_functions.read_dict_ac_type_wtc"]], "read_dict_fp_pool_ids() (in module libs.db_access_functions)": [[185, "libs.db_access_functions.read_dict_fp_pool_ids"]], "read_doc_data() (in module libs.db_access_functions)": [[186, "libs.db_access_functions.read_doc_data"]], "read_eamans_data() (in module libs.db_access_functions)": [[187, "libs.db_access_functions.read_eamans_data"]], "read_estimated_avg_costs_curfews() (in module libs.db_access_functions)": [[188, "libs.db_access_functions.read_estimated_avg_costs_curfews"]], "read_extra_cruise_if_dci() (in module libs.db_access_functions)": [[189, "libs.db_access_functions.read_extra_cruise_if_dci"]], "read_flight_plan_ansps_weights_for_crco() (in module libs.db_access_functions)": [[190, "libs.db_access_functions.read_flight_plan_ansps_weights_for_crco"]], "read_flight_schedules() (in module libs.db_access_functions)": [[191, "libs.db_access_functions.read_flight_schedules"]], "read_flight_schedules2() (in module libs.db_access_functions)": [[192, "libs.db_access_functions.read_flight_schedules2"]], "read_flight_set() (in module libs.db_access_functions)": [[193, "libs.db_access_functions.read_flight_set"]], "read_flight_uncertainty() (in module libs.db_access_functions)": [[194, "libs.db_access_functions.read_flight_uncertainty"]], "read_fp_pool() (in module libs.db_access_functions)": [[195, "libs.db_access_functions.read_fp_pool"]], "read_fp_pool_missing() (in module libs.db_access_functions)": [[196, "libs.db_access_functions.read_fp_pool_missing"]], "read_fp_routes_without_crco() (in module libs.db_access_functions)": [[197, "libs.db_access_functions.read_fp_routes_without_crco"]], "read_iedf_atfm() (in module libs.db_access_functions)": [[198, "libs.db_access_functions.read_iedf_atfm"]], "read_iedf_wind_dict() (in module libs.db_access_functions)": [[199, "libs.db_access_functions.read_iedf_wind_dict"]], "read_itineraries_data() (in module libs.db_access_functions)": [[200, "libs.db_access_functions.read_itineraries_data"]], "read_nas_route_pool() (in module libs.db_access_functions)": [[201, "libs.db_access_functions.read_nas_route_pool"]], "read_nas_route_pool_static_o_d() (in module libs.db_access_functions)": [[202, "libs.db_access_functions.read_nas_route_pool_static_o_d"]], "read_non_pax_cost_data() (in module libs.db_access_functions)": [[203, "libs.db_access_functions.read_non_pax_cost_data"]], "read_non_pax_cost_fit_data() (in module libs.db_access_functions)": [[204, "libs.db_access_functions.read_non_pax_cost_fit_data"]], "read_nonpax_cost_curfews() (in module libs.db_access_functions)": [[205, "libs.db_access_functions.read_nonpax_cost_curfews"]], "read_od_in_historic_od_computed_pool() (in module libs.db_access_functions)": [[206, "libs.db_access_functions.read_od_in_historic_od_computed_pool"]], "read_orig_destination_via_intermediate_shortest() (in module libs.db_access_functions)": [[207, "libs.db_access_functions.read_orig_destination_via_intermediate_shortest"]], "read_passenger_flows() (in module libs.db_access_functions)": [[208, "libs.db_access_functions.read_passenger_flows"]], "read_passenger_options() (in module libs.db_access_functions)": [[209, "libs.db_access_functions.read_passenger_options"]], "read_perc_min_perc_max_regulations_days() (in module libs.db_access_functions)": [[210, "libs.db_access_functions.read_perc_min_perc_max_regulations_days"]], "read_prob_atfm() (in module libs.db_access_functions)": [[211, "libs.db_access_functions.read_prob_atfm"]], "read_regulation_days_at_an_airport() (in module libs.db_access_functions)": [[212, "libs.db_access_functions.read_regulation_days_at_an_airport"]], "read_route_pool() (in module libs.db_access_functions)": [[213, "libs.db_access_functions.read_route_pool"]], "read_route_pool_o_d_generated() (in module libs.db_access_functions)": [[214, "libs.db_access_functions.read_route_pool_o_d_generated"]], "read_route_pool_static() (in module libs.db_access_functions)": [[215, "libs.db_access_functions.read_route_pool_static"]], "read_scenario() (in module libs.db_access_functions)": [[216, "libs.db_access_functions.read_scenario"]], "read_scenario_paras() (in module libs.db_access_functions)": [[217, "libs.db_access_functions.read_scenario_paras"]], "read_schedules() (in module libs.db_access_functions)": [[218, "libs.db_access_functions.read_schedules"]], "read_seed() (in module libs.db_access_functions)": [[219, "libs.db_access_functions.read_seed"]], "read_soft_cost_date() (in module libs.db_access_functions)": [[220, "libs.db_access_functions.read_soft_cost_date"]], "read_trajectories() (in module libs.db_access_functions)": [[221, "libs.db_access_functions.read_trajectories"]], "read_trajectories_dataframe() (in module libs.db_access_functions)": [[222, "libs.db_access_functions.read_trajectories_dataframe"]], "read_trajectories_ids() (in module libs.db_access_functions)": [[223, "libs.db_access_functions.read_trajectories_ids"]], "read_trajectories_missing() (in module libs.db_access_functions)": [[224, "libs.db_access_functions.read_trajectories_missing"]], "read_trajectories_missing_in_interval() (in module libs.db_access_functions)": [[225, "libs.db_access_functions.read_trajectories_missing_in_interval"]], "read_trajectories_options() (in module libs.db_access_functions)": [[226, "libs.db_access_functions.read_trajectories_options"]], "read_trajectories_pool() (in module libs.db_access_functions)": [[227, "libs.db_access_functions.read_trajectories_pool"]], "read_turnaround_data() (in module libs.db_access_functions)": [[228, "libs.db_access_functions.read_turnaround_data"]], "save_trajectories_pool() (in module libs.db_access_functions)": [[229, "libs.db_access_functions.save_trajectories_pool"]], "save_trajectories_segments() (in module libs.db_access_functions)": [[230, "libs.db_access_functions.save_trajectories_segments"]], "libs.input_manager": [[231, "module-libs.input_manager"]], "input_manager (class in libs.input_manager)": [[232, "libs.input_manager.Input_manager"]], "__init__() (libs.input_manager.input_manager method)": [[232, "libs.input_manager.Input_manager.__init__"]], "filter_df() (in module libs.input_manager)": [[233, "libs.input_manager.filter_df"]], "filter_sql() (in module libs.input_manager)": [[234, "libs.input_manager.filter_sql"]], "read_data_from_dict() (in module libs.input_manager)": [[235, "libs.input_manager.read_data_from_dict"]], "write_toml() (in module libs.input_manager)": [[236, "libs.input_manager.write_toml"]], "libs.other_tools": [[237, "module-libs.other_tools"]], "flightdummy (class in libs.other_tools)": [[238, "libs.other_tools.FlightDummy"]], "__init__() (libs.other_tools.flightdummy method)": [[238, "libs.other_tools.FlightDummy.__init__"]], "slotdummy (class in libs.other_tools)": [[239, "libs.other_tools.SlotDummy"]], "__init__() (libs.other_tools.slotdummy method)": [[239, "libs.other_tools.SlotDummy.__init__"]], "allocation_from_flights() (in module libs.other_tools)": [[240, "libs.other_tools.allocation_from_flights"]], "clone_pax() (in module libs.other_tools)": [[241, "libs.other_tools.clone_pax"]], "compatible_slots() (in module libs.other_tools)": [[242, "libs.other_tools.compatible_slots"]], "compute_fpfs_allocation() (in module libs.other_tools)": [[243, "libs.other_tools.compute_FPFS_allocation"]], "distance_func() (in module libs.other_tools)": [[244, "libs.other_tools.distance_func"]], "flight_str() (in module libs.other_tools)": [[245, "libs.other_tools.flight_str"]], "libs.performance_trajectory": [[246, "module-libs.performance_trajectory"]], "libs.performance_trajectory.ac_performances": [[247, "module-libs.performance_trajectory.ac_performances"]], "aircraftperformance (class in libs.performance_trajectory.ac_performances)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.avg_climb_descent_ff"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformance static method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformance static method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.estimate_descent_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformance method)": [[248, "libs.performance_trajectory.ac_performances.AircraftPerformance.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3 (class in libs.performance_trajectory.ac_performances)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 static method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 static method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3 method)": [[249, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3jet (class in libs.performance_trajectory.ac_performances)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet static method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet static method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3jet method)": [[250, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3Jet.trajectory_segment_descent_estimation_from_lnd"]], "aircraftperformancebada3tp (class in libs.performance_trajectory.ac_performances)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP"]], "__init__() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.__init__"]], "apu_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.apu_fuel_flow"]], "arrival_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.arrival_costs_per_minute"]], "at_gate_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.at_gate_costs_per_minute"]], "avg_climb_descent_ff() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.avg_climb_descent_ff"]], "compute_drag() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.compute_drag"]], "compute_sr() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.compute_sr"]], "en_route_costs_per_minute() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.en_route_costs_per_minute"]], "error_climb_weight_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp static method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.error_climb_weight_from_toc"]], "error_extra_cruise() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp static method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.error_extra_cruise"]], "estimate_climb_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_climb_fuel_flow"]], "estimate_descent_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_descent_fuel_flow"]], "estimate_holding_fuel_flow() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.estimate_holding_fuel_flow"]], "interpolate_climb_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_climb_performances"]], "interpolate_cruise_nominal_mach() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_cruise_nominal_mach"]], "interpolate_descent_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.interpolate_descent_performances"]], "set_climb_descent_fuel_flow_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_climb_descent_fuel_flow_performances"]], "set_climb_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_climb_fuel_flow_detailled_rate_performances"]], "set_descent_fuel_flow_detailled_rate_performances() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_descent_fuel_flow_detailled_rate_performances"]], "set_detailled_mach_nominal() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.set_detailled_mach_nominal"]], "trajectory_cruise_estimation_with_fl_change() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_cruise_estimation_with_fl_change"]], "trajectory_segment_climb_estimation_from_to() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_climb_estimation_from_to"]], "trajectory_segment_climb_estimation_from_toc() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_climb_estimation_from_toc"]], "trajectory_segment_cruise_estimation() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_cruise_estimation"]], "trajectory_segment_descent_estimation_from_lnd() (libs.performance_trajectory.ac_performances.aircraftperformancebada3tp method)": [[251, "libs.performance_trajectory.ac_performances.AircraftPerformanceBada3TP.trajectory_segment_descent_estimation_from_lnd"]], "libs.performance_trajectory.standard_atmosphere": [[252, "module-libs.performance_trajectory.standard_atmosphere"]], "density() (in module libs.performance_trajectory.standard_atmosphere)": [[253, "libs.performance_trajectory.standard_atmosphere.density"]], "pressure() (in module libs.performance_trajectory.standard_atmosphere)": [[254, "libs.performance_trajectory.standard_atmosphere.pressure"]], "sound_speed() (in module libs.performance_trajectory.standard_atmosphere)": [[255, "libs.performance_trajectory.standard_atmosphere.sound_speed"]], "temperature() (in module libs.performance_trajectory.standard_atmosphere)": [[256, "libs.performance_trajectory.standard_atmosphere.temperature"]], "libs.performance_trajectory.trajectory": [[257, "module-libs.performance_trajectory.trajectory"]], "trajectory (class in libs.performance_trajectory.trajectory)": [[258, "libs.performance_trajectory.trajectory.Trajectory"]], "__init__() (libs.performance_trajectory.trajectory.trajectory method)": [[258, "libs.performance_trajectory.trajectory.Trajectory.__init__"]], "trajectorycomponent (class in libs.performance_trajectory.trajectory)": [[259, "libs.performance_trajectory.trajectory.TrajectoryComponent"]], "__init__() (libs.performance_trajectory.trajectory.trajectorycomponent method)": [[259, "libs.performance_trajectory.trajectory.TrajectoryComponent.__init__"]], "trajectorysegment (class in libs.performance_trajectory.trajectory)": [[260, "libs.performance_trajectory.trajectory.TrajectorySegment"]], "__init__() (libs.performance_trajectory.trajectory.trajectorysegment method)": [[260, "libs.performance_trajectory.trajectory.TrajectorySegment.__init__"]], "libs.performance_trajectory.unit_conversions": [[261, "module-libs.performance_trajectory.unit_conversions"]], "cas2tas() (in module libs.performance_trajectory.unit_conversions)": [[262, "libs.performance_trajectory.unit_conversions.cas2tas"]], "km2kt() (in module libs.performance_trajectory.unit_conversions)": [[263, "libs.performance_trajectory.unit_conversions.km2kt"]], "km2m() (in module libs.performance_trajectory.unit_conversions)": [[264, "libs.performance_trajectory.unit_conversions.km2m"]], "kt2m() (in module libs.performance_trajectory.unit_conversions)": [[265, "libs.performance_trajectory.unit_conversions.kt2m"]], "m2kt() (in module libs.performance_trajectory.unit_conversions)": [[266, "libs.performance_trajectory.unit_conversions.m2kt"]], "libs.result_manager": [[267, "module-libs.result_manager"]], "result_manager (class in libs.result_manager)": [[268, "libs.result_manager.Result_manager"]], "__init__() (libs.result_manager.result_manager method)": [[268, "libs.result_manager.Result_manager.__init__"]], "libs.result_tools": [[269, "module-libs.result_tools"]], "binarise() (in module libs.result_tools)": [[270, "libs.result_tools.binarise"]], "build_aligned_pax_flight_df() (in module libs.result_tools)": [[271, "libs.result_tools.build_aligned_pax_flight_df"]], "build_single_iteration_df() (in module libs.result_tools)": [[272, "libs.result_tools.build_single_iteration_df"]], "clone_pax() (in module libs.result_tools)": [[273, "libs.result_tools.clone_pax"]], "compute_derived_metrics_hist_sim() (in module libs.result_tools)": [[274, "libs.result_tools.compute_derived_metrics_hist_sim"]], "compute_derived_metrics_historical() (in module libs.result_tools)": [[275, "libs.result_tools.compute_derived_metrics_historical"]], "compute_derived_metrics_pax_generic() (in module libs.result_tools)": [[276, "libs.result_tools.compute_derived_metrics_pax_generic"]], "compute_derived_metrics_simulations() (in module libs.result_tools)": [[277, "libs.result_tools.compute_derived_metrics_simulations"]], "compute_metrics_flights() (in module libs.result_tools)": [[278, "libs.result_tools.compute_metrics_flights"]], "compute_metrics_pax() (in module libs.result_tools)": [[279, "libs.result_tools.compute_metrics_pax"]], "find_destination_generic() (in module libs.result_tools)": [[280, "libs.result_tools.find_destination_generic"]], "find_origin_generic() (in module libs.result_tools)": [[281, "libs.result_tools.find_origin_generic"]], "get_historical_flights() (in module libs.result_tools)": [[282, "libs.result_tools.get_historical_flights"]], "get_pax_schedules() (in module libs.result_tools)": [[283, "libs.result_tools.get_pax_schedules"]], "merge_hist_sim() (in module libs.result_tools)": [[284, "libs.result_tools.merge_hist_sim"]], "merge_pax_flights() (in module libs.result_tools)": [[285, "libs.result_tools.merge_pax_flights"]], "produce_hist_sim_df() (in module libs.result_tools)": [[286, "libs.result_tools.produce_hist_sim_df"]], "produce_historical_flight_pax_df() (in module libs.result_tools)": [[287, "libs.result_tools.produce_historical_flight_pax_df"]], "libs.uow_tool_belt": [[288, "module-libs.uow_tool_belt"]], "libs.uow_tool_belt.dtw": [[289, "module-libs.uow_tool_belt.DTW"]], "dtw() (in module libs.uow_tool_belt.dtw)": [[290, "libs.uow_tool_belt.DTW.dtw"]], "dtw_path() (in module libs.uow_tool_belt.dtw)": [[291, "libs.uow_tool_belt.DTW.dtw_path"]], "libs.uow_tool_belt.airspace_particularities": [[292, "module-libs.uow_tool_belt.airspace_particularities"]], "get_nas_airport() (in module libs.uow_tool_belt.airspace_particularities)": [[293, "libs.uow_tool_belt.airspace_particularities.get_nas_airport"]], "is_atfm_area() (in module libs.uow_tool_belt.airspace_particularities)": [[294, "libs.uow_tool_belt.airspace_particularities.is_ATFM_AREA"]], "is_ecac() (in module libs.uow_tool_belt.airspace_particularities)": [[295, "libs.uow_tool_belt.airspace_particularities.is_ECAC"]], "libs.uow_tool_belt.connection_tools": [[296, "module-libs.uow_tool_belt.connection_tools"]], "emptyconnection (class in libs.uow_tool_belt.connection_tools)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection"]], "__init__() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.__init__"]], "clear() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.clear"]], "copy() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.copy"]], "fromkeys() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.fromkeys"]], "get() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.get"]], "items() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.items"]], "keys() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.keys"]], "pop() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.pop"]], "popitem() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.popitem"]], "setdefault() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.setdefault"]], "update() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.update"]], "values() (libs.uow_tool_belt.connection_tools.emptyconnection method)": [[297, "libs.uow_tool_belt.connection_tools.EmptyConnection.values"]], "create_indexes_in_table() (in module libs.uow_tool_belt.connection_tools)": [[298, "libs.uow_tool_belt.connection_tools.create_indexes_in_table"]], "do_query() (in module libs.uow_tool_belt.connection_tools)": [[299, "libs.uow_tool_belt.connection_tools.do_query"]], "extract_ssh_parameters() (in module libs.uow_tool_belt.connection_tools)": [[300, "libs.uow_tool_belt.connection_tools.extract_ssh_parameters"]], "file_connection() (in module libs.uow_tool_belt.connection_tools)": [[301, "libs.uow_tool_belt.connection_tools.file_connection"]], "generic_connection() (in module libs.uow_tool_belt.connection_tools)": [[302, "libs.uow_tool_belt.connection_tools.generic_connection"]], "load_data_infile() (in module libs.uow_tool_belt.connection_tools)": [[303, "libs.uow_tool_belt.connection_tools.load_data_infile"]], "mysql_connection() (in module libs.uow_tool_belt.connection_tools)": [[304, "libs.uow_tool_belt.connection_tools.mysql_connection"]], "parquet_connection() (in module libs.uow_tool_belt.connection_tools)": [[305, "libs.uow_tool_belt.connection_tools.parquet_connection"]], "read_cred() (in module libs.uow_tool_belt.connection_tools)": [[306, "libs.uow_tool_belt.connection_tools.read_cred"]], "read_csv() (in module libs.uow_tool_belt.connection_tools)": [[307, "libs.uow_tool_belt.connection_tools.read_csv"]], "read_data() (in module libs.uow_tool_belt.connection_tools)": [[308, "libs.uow_tool_belt.connection_tools.read_data"]], "read_mysql() (in module libs.uow_tool_belt.connection_tools)": [[309, "libs.uow_tool_belt.connection_tools.read_mysql"]], "read_parquet() (in module libs.uow_tool_belt.connection_tools)": [[310, "libs.uow_tool_belt.connection_tools.read_parquet"]], "read_pickle() (in module libs.uow_tool_belt.connection_tools)": [[311, "libs.uow_tool_belt.connection_tools.read_pickle"]], "run_mysql_query() (in module libs.uow_tool_belt.connection_tools)": [[312, "libs.uow_tool_belt.connection_tools.run_mysql_query"]], "write_csv() (in module libs.uow_tool_belt.connection_tools)": [[313, "libs.uow_tool_belt.connection_tools.write_csv"]], "write_data() (in module libs.uow_tool_belt.connection_tools)": [[314, "libs.uow_tool_belt.connection_tools.write_data"]], "write_mysql() (in module libs.uow_tool_belt.connection_tools)": [[315, "libs.uow_tool_belt.connection_tools.write_mysql"]], "write_pickle() (in module libs.uow_tool_belt.connection_tools)": [[316, "libs.uow_tool_belt.connection_tools.write_pickle"]], "libs.uow_tool_belt.general_tools": [[317, "module-libs.uow_tool_belt.general_tools"]], "a_b() (in module libs.uow_tool_belt.general_tools)": [[318, "libs.uow_tool_belt.general_tools.A_B"]], "dummyfile (class in libs.uow_tool_belt.general_tools)": [[319, "libs.uow_tool_belt.general_tools.DummyFile"]], "__init__() (libs.uow_tool_belt.general_tools.dummyfile method)": [[319, "libs.uow_tool_belt.general_tools.DummyFile.__init__"]], "hiddenprints (class in libs.uow_tool_belt.general_tools)": [[320, "libs.uow_tool_belt.general_tools.HiddenPrints"]], "__init__() (libs.uow_tool_belt.general_tools.hiddenprints method)": [[320, "libs.uow_tool_belt.general_tools.HiddenPrints.__init__"]], "paras (class in libs.uow_tool_belt.general_tools)": [[321, "libs.uow_tool_belt.general_tools.Paras"]], "__init__() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.__init__"]], "analyse_dependance() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.analyse_dependance"]], "clear() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.clear"]], "copy() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.copy"]], "fromkeys() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.fromkeys"]], "get() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.get"]], "items() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.items"]], "keys() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.keys"]], "pop() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.pop"]], "popitem() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.popitem"]], "setdefault() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.setdefault"]], "update() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.update"]], "update_with_levels() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.update_with_levels"]], "values() (libs.uow_tool_belt.general_tools.paras method)": [[321, "libs.uow_tool_belt.general_tools.Paras.values"]], "twowaydict (class in libs.uow_tool_belt.general_tools)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict"]], "__init__() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.__init__"]], "clear() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.clear"]], "copy() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.copy"]], "fromkeys() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.fromkeys"]], "get() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.get"]], "items() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.items"]], "keys() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.keys"]], "pop() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.pop"]], "popitem() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.popitem"]], "setdefault() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.setdefault"]], "update() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.update"]], "values() (libs.uow_tool_belt.general_tools.twowaydict method)": [[322, "libs.uow_tool_belt.general_tools.TwoWayDict.values"]], "add_dicts() (in module libs.uow_tool_belt.general_tools)": [[323, "libs.uow_tool_belt.general_tools.add_dicts"]], "alert_print() (in module libs.uow_tool_belt.general_tools)": [[324, "libs.uow_tool_belt.general_tools.alert_print"]], "alphabet() (in module libs.uow_tool_belt.general_tools)": [[325, "libs.uow_tool_belt.general_tools.alphabet"]], "apply_args_and_kwargs() (in module libs.uow_tool_belt.general_tools)": [[326, "libs.uow_tool_belt.general_tools.apply_args_and_kwargs"]], "average_on_downsampled_interval() (in module libs.uow_tool_belt.general_tools)": [[327, "libs.uow_tool_belt.general_tools.average_on_downsampled_interval"]], "average_on_intervals() (in module libs.uow_tool_belt.general_tools)": [[328, "libs.uow_tool_belt.general_tools.average_on_intervals"]], "average_on_quantiles() (in module libs.uow_tool_belt.general_tools)": [[329, "libs.uow_tool_belt.general_tools.average_on_quantiles"]], "bootstrap_mean_test() (in module libs.uow_tool_belt.general_tools)": [[330, "libs.uow_tool_belt.general_tools.bootstrap_mean_test"]], "bootstrap_test() (in module libs.uow_tool_belt.general_tools)": [[331, "libs.uow_tool_belt.general_tools.bootstrap_test"]], "build_col_print_func() (in module libs.uow_tool_belt.general_tools)": [[332, "libs.uow_tool_belt.general_tools.build_col_print_func"]], "build_step_bivariate_function() (in module libs.uow_tool_belt.general_tools)": [[333, "libs.uow_tool_belt.general_tools.build_step_bivariate_function"]], "build_step_multi_valued_function() (in module libs.uow_tool_belt.general_tools)": [[334, "libs.uow_tool_belt.general_tools.build_step_multi_valued_function"]], "build_triangular() (in module libs.uow_tool_belt.general_tools)": [[335, "libs.uow_tool_belt.general_tools.build_triangular"]], "center_spatial_network() (in module libs.uow_tool_belt.general_tools)": [[336, "libs.uow_tool_belt.general_tools.center_spatial_network"]], "clock_time() (in module libs.uow_tool_belt.general_tools)": [[337, "libs.uow_tool_belt.general_tools.clock_time"]], "compute_percentile_with_weight() (in module libs.uow_tool_belt.general_tools)": [[338, "libs.uow_tool_belt.general_tools.compute_percentile_with_weight"]], "counter() (in module libs.uow_tool_belt.general_tools)": [[339, "libs.uow_tool_belt.general_tools.counter"]], "create_dir() (in module libs.uow_tool_belt.general_tools)": [[340, "libs.uow_tool_belt.general_tools.create_dir"]], "dict_depth() (in module libs.uow_tool_belt.general_tools)": [[341, "libs.uow_tool_belt.general_tools.dict_depth"]], "distance_euclidean() (in module libs.uow_tool_belt.general_tools)": [[342, "libs.uow_tool_belt.general_tools.distance_euclidean"]], "fit() (in module libs.uow_tool_belt.general_tools)": [[343, "libs.uow_tool_belt.general_tools.fit"]], "get_first_matching_element() (in module libs.uow_tool_belt.general_tools)": [[344, "libs.uow_tool_belt.general_tools.get_first_matching_element"]], "gini() (in module libs.uow_tool_belt.general_tools)": [[345, "libs.uow_tool_belt.general_tools.gini"]], "groupby_on_downsampled_interval() (in module libs.uow_tool_belt.general_tools)": [[346, "libs.uow_tool_belt.general_tools.groupby_on_downsampled_interval"]], "groupby_on_intervals() (in module libs.uow_tool_belt.general_tools)": [[347, "libs.uow_tool_belt.general_tools.groupby_on_intervals"]], "groupby_on_quantiles() (in module libs.uow_tool_belt.general_tools)": [[348, "libs.uow_tool_belt.general_tools.groupby_on_quantiles"]], "haversine() (in module libs.uow_tool_belt.general_tools)": [[349, "libs.uow_tool_belt.general_tools.haversine"]], "haversine_old() (in module libs.uow_tool_belt.general_tools)": [[350, "libs.uow_tool_belt.general_tools.haversine_old"]], "hex_to_rgb() (in module libs.uow_tool_belt.general_tools)": [[351, "libs.uow_tool_belt.general_tools.hex_to_rgb"]], "human_format() (in module libs.uow_tool_belt.general_tools)": [[352, "libs.uow_tool_belt.general_tools.human_format"]], "human_format_for_ticks() (in module libs.uow_tool_belt.general_tools)": [[353, "libs.uow_tool_belt.general_tools.human_format_for_ticks"]], "intermediate_point() (in module libs.uow_tool_belt.general_tools)": [[354, "libs.uow_tool_belt.general_tools.intermediate_point"]], "inv_mu_sig_lognorm() (in module libs.uow_tool_belt.general_tools)": [[355, "libs.uow_tool_belt.general_tools.inv_mu_sig_lognorm"]], "inv_s_loc_scale_lognorm() (in module libs.uow_tool_belt.general_tools)": [[356, "libs.uow_tool_belt.general_tools.inv_s_loc_scale_lognorm"]], "inv_s_scale_lognorm() (in module libs.uow_tool_belt.general_tools)": [[357, "libs.uow_tool_belt.general_tools.inv_s_scale_lognorm"]], "inverted_edf() (in module libs.uow_tool_belt.general_tools)": [[358, "libs.uow_tool_belt.general_tools.inverted_edf"]], "keep_time() (in module libs.uow_tool_belt.general_tools)": [[359, "libs.uow_tool_belt.general_tools.keep_time"]], "loading() (in module libs.uow_tool_belt.general_tools)": [[360, "libs.uow_tool_belt.general_tools.loading"]], "logging() (in module libs.uow_tool_belt.general_tools)": [[361, "libs.uow_tool_belt.general_tools.logging"]], "loop() (in module libs.uow_tool_belt.general_tools)": [[362, "libs.uow_tool_belt.general_tools.loop"]], "make_df_with_3_levels() (in module libs.uow_tool_belt.general_tools)": [[363, "libs.uow_tool_belt.general_tools.make_df_with_3_levels"]], "make_df_with_3_levels_quick() (in module libs.uow_tool_belt.general_tools)": [[364, "libs.uow_tool_belt.general_tools.make_df_with_3_levels_quick"]], "make_nested_dict_from_df() (in module libs.uow_tool_belt.general_tools)": [[365, "libs.uow_tool_belt.general_tools.make_nested_dict_from_df"]], "mysql_server() (in module libs.uow_tool_belt.general_tools)": [[366, "libs.uow_tool_belt.general_tools.mysql_server"]], "parallelize() (in module libs.uow_tool_belt.general_tools)": [[367, "libs.uow_tool_belt.general_tools.parallelize"]], "partial_corr() (in module libs.uow_tool_belt.general_tools)": [[368, "libs.uow_tool_belt.general_tools.partial_corr"]], "percentile_10() (in module libs.uow_tool_belt.general_tools)": [[369, "libs.uow_tool_belt.general_tools.percentile_10"]], "percentile_90() (in module libs.uow_tool_belt.general_tools)": [[370, "libs.uow_tool_belt.general_tools.percentile_90"]], "percentile_custom() (in module libs.uow_tool_belt.general_tools)": [[371, "libs.uow_tool_belt.general_tools.percentile_custom"]], "permutation_test() (in module libs.uow_tool_belt.general_tools)": [[372, "libs.uow_tool_belt.general_tools.permutation_test"]], "permutation_test_only_diff() (in module libs.uow_tool_belt.general_tools)": [[373, "libs.uow_tool_belt.general_tools.permutation_test_only_diff"]], "proportional() (in module libs.uow_tool_belt.general_tools)": [[374, "libs.uow_tool_belt.general_tools.proportional"]], "r_squared() (in module libs.uow_tool_belt.general_tools)": [[375, "libs.uow_tool_belt.general_tools.r_squared"]], "read_paras() (in module libs.uow_tool_belt.general_tools)": [[376, "libs.uow_tool_belt.general_tools.read_paras"]], "recursive_concat() (in module libs.uow_tool_belt.general_tools)": [[377, "libs.uow_tool_belt.general_tools.recursive_concat"]], "recursive_minimization() (in module libs.uow_tool_belt.general_tools)": [[378, "libs.uow_tool_belt.general_tools.recursive_minimization"]], "remove_nan_coupled_lists() (in module libs.uow_tool_belt.general_tools)": [[379, "libs.uow_tool_belt.general_tools.remove_nan_coupled_lists"]], "scale_and_s_from_mean_sigma_lognorm() (in module libs.uow_tool_belt.general_tools)": [[380, "libs.uow_tool_belt.general_tools.scale_and_s_from_mean_sigma_lognorm"]], "scale_and_s_from_quantile_sigma_lognorm() (in module libs.uow_tool_belt.general_tools)": [[381, "libs.uow_tool_belt.general_tools.scale_and_s_from_quantile_sigma_lognorm"]], "set_interval() (in module libs.uow_tool_belt.general_tools)": [[382, "libs.uow_tool_belt.general_tools.set_interval"]], "shift_spatial_network() (in module libs.uow_tool_belt.general_tools)": [[383, "libs.uow_tool_belt.general_tools.shift_spatial_network"]], "show_dic() (in module libs.uow_tool_belt.general_tools)": [[384, "libs.uow_tool_belt.general_tools.show_dic"]], "silence() (in module libs.uow_tool_belt.general_tools)": [[385, "libs.uow_tool_belt.general_tools.silence"]], "simple_color_map_function() (in module libs.uow_tool_belt.general_tools)": [[386, "libs.uow_tool_belt.general_tools.simple_color_map_function"]], "simple_colormap_object() (in module libs.uow_tool_belt.general_tools)": [[387, "libs.uow_tool_belt.general_tools.simple_colormap_object"]], "sol_bs() (in module libs.uow_tool_belt.general_tools)": [[388, "libs.uow_tool_belt.general_tools.sol_Bs"]], "sort_lists() (in module libs.uow_tool_belt.general_tools)": [[389, "libs.uow_tool_belt.general_tools.sort_lists"]], "sort_paired_values() (in module libs.uow_tool_belt.general_tools)": [[390, "libs.uow_tool_belt.general_tools.sort_paired_values"]], "spread_integer() (in module libs.uow_tool_belt.general_tools)": [[391, "libs.uow_tool_belt.general_tools.spread_integer"]], "ssh_client_connection() (in module libs.uow_tool_belt.general_tools)": [[392, "libs.uow_tool_belt.general_tools.ssh_client_connection"]], "ssh_copy() (in module libs.uow_tool_belt.general_tools)": [[393, "libs.uow_tool_belt.general_tools.ssh_copy"]], "ssh_tunnel_connection() (in module libs.uow_tool_belt.general_tools)": [[394, "libs.uow_tool_belt.general_tools.ssh_tunnel_connection"]], "starmap_with_kwargs() (in module libs.uow_tool_belt.general_tools)": [[395, "libs.uow_tool_belt.general_tools.starmap_with_kwargs"]], "strip_string() (in module libs.uow_tool_belt.general_tools)": [[396, "libs.uow_tool_belt.general_tools.strip_string"]], "timeit() (in module libs.uow_tool_belt.general_tools)": [[397, "libs.uow_tool_belt.general_tools.timeit"]], "weight_avg() (in module libs.uow_tool_belt.general_tools)": [[398, "libs.uow_tool_belt.general_tools.weight_avg"]], "write_on_file() (in module libs.uow_tool_belt.general_tools)": [[399, "libs.uow_tool_belt.general_tools.write_on_file"]], "yes() (in module libs.uow_tool_belt.general_tools)": [[400, "libs.uow_tool_belt.general_tools.yes"]], "libs.uow_tool_belt.logging": [[401, "module-libs.uow_tool_belt.logging"]], "libs.uow_tool_belt.network_tools": [[402, "module-libs.uow_tool_belt.network_tools"]], "libs.uow_tool_belt.plot_tools": [[403, "module-libs.uow_tool_belt.plot_tools"]], "bar_plot_template() (in module libs.uow_tool_belt.plot_tools)": [[404, "libs.uow_tool_belt.plot_tools.bar_plot_template"]], "savefig() (in module libs.uow_tool_belt.plot_tools)": [[405, "libs.uow_tool_belt.plot_tools.savefig"]], "libs.uow_tool_belt.trajectory_tools": [[406, "module-libs.uow_tool_belt.trajectory_tools"]], "compute_ab() (in module libs.uow_tool_belt.trajectory_tools)": [[407, "libs.uow_tool_belt.trajectory_tools.compute_ab"]], "create_vertical_trajectory() (in module libs.uow_tool_belt.trajectory_tools)": [[408, "libs.uow_tool_belt.trajectory_tools.create_vertical_trajectory"]], "detect_toc_tod() (in module libs.uow_tool_belt.trajectory_tools)": [[409, "libs.uow_tool_belt.trajectory_tools.detect_toc_tod"]], "plot_traj() (in module libs.uow_tool_belt.trajectory_tools)": [[410, "libs.uow_tool_belt.trajectory_tools.plot_traj"]], "mercury": [[411, "module-mercury"]], "manual_bool_cast() (in module mercury)": [[412, "mercury.manual_bool_cast"]], "modules": [[413, "module-modules"]], "modules.auction": [[414, "module-modules.Auction"]], "modules.auction.auction": [[415, "module-modules.Auction.Auction"]], "modules.auction.module_definition": [[416, "module-modules.Auction.module_definition"]], "modules.auction.paras_auction": [[417, "module-modules.Auction.paras_Auction"]], "modules.cm": [[418, "module-modules.CM"]], "modules.cm.cm": [[419, "module-modules.CM.CM"]], "compute_adequate_default_parameters() (in module modules.cm.cm)": [[420, "modules.CM.CM.compute_adequate_default_parameters"]], "get_metric() (in module modules.cm.cm)": [[421, "modules.CM.CM.get_metric"]], "make_hotspot_decision_cm() (in module modules.cm.cm)": [[422, "modules.CM.CM.make_hotspot_decision_CM"]], "on_finalise_cm() (in module modules.cm.cm)": [[423, "modules.CM.CM.on_finalise_CM"]], "on_init_aoc() (in module modules.cm.cm)": [[424, "modules.CM.CM.on_init_AOC"]], "on_prepare_cm() (in module modules.cm.cm)": [[425, "modules.CM.CM.on_prepare_CM"]], "modules.cm.module_definition": [[426, "module-modules.CM.module_definition"]], "modules.cm.paras_cm": [[427, "module-modules.CM.paras_CM"]], "modules.fac": [[428, "module-modules.FAC"]], "modules.fac.fac_fifo_queue": [[429, "module-modules.FAC.FAC_FIFO_queue"]], "build_arrival_queue() (in module modules.fac.fac_fifo_queue)": [[430, "modules.FAC.FAC_FIFO_queue.build_arrival_queue"]], "update_arrival_queue() (in module modules.fac.fac_fifo_queue)": [[431, "modules.FAC.FAC_FIFO_queue.update_arrival_queue"]], "wait_for_flight_arrival_information_queue() (in module modules.fac.fac_fifo_queue)": [[432, "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_queue"]], "wait_for_flight_arrival_information_request_provide_landing_time() (in module modules.fac.fac_fifo_queue)": [[433, "modules.FAC.FAC_FIFO_queue.wait_for_flight_arrival_information_request_provide_landing_time"]], "wait_for_flight_in_planning_horizon_queue() (in module modules.fac.fac_fifo_queue)": [[434, "modules.FAC.FAC_FIFO_queue.wait_for_flight_in_planning_horizon_queue"]], "modules.fac.fac_total_cost": [[435, "module-modules.FAC.FAC_total_cost"]], "compute_cost_slots_total() (in module modules.fac.fac_total_cost)": [[436, "modules.FAC.FAC_total_cost.compute_cost_slots_total"]], "compute_costs_slots_arrival_delay_cost_func_slots_times() (in module modules.fac.fac_total_cost)": [[437, "modules.FAC.FAC_total_cost.compute_costs_slots_arrival_delay_cost_func_slots_times"]], "compute_costs_slots_computing_all_costs() (in module modules.fac.fac_total_cost)": [[438, "modules.FAC.FAC_total_cost.compute_costs_slots_computing_all_costs"]], "request_cost_delay_function() (in module modules.fac.fac_total_cost)": [[439, "modules.FAC.FAC_total_cost.request_cost_delay_function"]], "wait_for_cost_delay_function() (in module modules.fac.fac_total_cost)": [[440, "modules.FAC.FAC_total_cost.wait_for_cost_delay_function"]], "modules.fac.fac_total_delay": [[441, "module-modules.FAC.FAC_total_delay"]], "compute_total_delay_slots() (in module modules.fac.fac_total_delay)": [[442, "modules.FAC.FAC_total_delay.compute_total_delay_slots"]], "request_time_propagate_delay() (in module modules.fac.fac_total_delay)": [[443, "modules.FAC.FAC_total_delay.request_time_propagate_delay"]], "wait_for_propagation_delay_time() (in module modules.fac.fac_total_delay)": [[444, "modules.FAC.FAC_total_delay.wait_for_propagation_delay_time"]], "modules.fac.module_definition": [[445, "module-modules.FAC.module_definition"]], "modules.fp": [[446, "module-modules.FP"]], "modules.fp.fp_l1": [[447, "module-modules.FP.FP_L1"]], "consider_flight_swap_fp1() (in module modules.fp.fp_l1)": [[448, "modules.FP.FP_L1.consider_flight_swap_FP1"]], "modules.fp.fp_l2": [[449, "module-modules.FP.FP_L2"]], "consider_flight_swap_fp2() (in module modules.fp.fp_l2)": [[450, "modules.FP.FP_L2.consider_flight_swap_FP2"]], "modules.fp.module_definition": [[451, "module-modules.FP.module_definition"]], "modules.hmi_hotspot": [[452, "module-modules.HMI_HOTSPOT"]], "modules.hmi_hotspot.hmi_fp_sel": [[453, "module-modules.HMI_HOTSPOT.HMI_FP_SEL"]], "on_init_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[454, "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_hmi"]], "on_init_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[455, "modules.HMI_HOTSPOT.HMI_FP_SEL.on_init_remote_hmi"]], "receive_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[456, "modules.HMI_HOTSPOT.HMI_FP_SEL.receive_remote_hmi"]], "select_fp_cli() (in module modules.hmi_hotspot.hmi_fp_sel)": [[457, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_cli"]], "select_fp_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[458, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_hmi"]], "select_fp_remote_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[459, "modules.HMI_HOTSPOT.HMI_FP_SEL.select_fp_remote_hmi"]], "send_fp_options_to_hmi() (in module modules.hmi_hotspot.hmi_fp_sel)": [[460, "modules.HMI_HOTSPOT.HMI_FP_SEL.send_fp_options_to_hmi"]], "wait_for_fp_remote_hmi_answer() (in module modules.hmi_hotspot.hmi_fp_sel)": [[461, "modules.HMI_HOTSPOT.HMI_FP_SEL.wait_for_fp_remote_hmi_answer"]], "modules.hmi_hotspot.hmi_hotspot": [[462, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT"]], "compute_hotspot_decision() (in module modules.hmi_hotspot.hmi_hotspot)": [[463, "modules.HMI_HOTSPOT.HMI_HOTSPOT.compute_hotspot_decision"]], "make_hotspot_decision_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[464, "modules.HMI_HOTSPOT.HMI_HOTSPOT.make_hotspot_decision_hmi"]], "notify_aocs_of_final_allocation_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[465, "modules.HMI_HOTSPOT.HMI_HOTSPOT.notify_AOCs_of_final_allocation_hmi"]], "on_init_remote_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[466, "modules.HMI_HOTSPOT.HMI_HOTSPOT.on_init_remote_hmi"]], "receive_final_allocation() (in module modules.hmi_hotspot.hmi_hotspot)": [[467, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_final_allocation"]], "receive_new_messages() (in module modules.hmi_hotspot.hmi_hotspot)": [[468, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_new_messages"]], "receive_regulation_decisions_remote_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[469, "modules.HMI_HOTSPOT.HMI_HOTSPOT.receive_regulation_decisions_remote_hmi"]], "send_final_allocation_to_airline() (in module modules.hmi_hotspot.hmi_hotspot)": [[470, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_airline"]], "send_final_allocation_to_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[471, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_final_allocation_to_hmi"]], "send_regulation_info_to_hmi() (in module modules.hmi_hotspot.hmi_hotspot)": [[472, "modules.HMI_HOTSPOT.HMI_HOTSPOT.send_regulation_info_to_hmi"]], "modules.hmi_hotspot.hmi_hotspot_client_text": [[473, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text)": [[474, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text.messageclient method)": [[474, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.MessageClient.__init__"]], "windowudpp (class in modules.hmi_hotspot.hmi_hotspot_client_text)": [[475, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text.windowudpp method)": [[475, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text.WindowUDPP.__init__"]], "modules.hmi_hotspot.hmi_hotspot_client_text2": [[476, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text2)": [[477, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text2.messageclient method)": [[477, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.MessageClient.__init__"]], "windowudpp (class in modules.hmi_hotspot.hmi_hotspot_client_text2)": [[478, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text2.windowudpp method)": [[478, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text2.WindowUDPP.__init__"]], "modules.hmi_hotspot.hmi_hotspot_client_text3": [[479, "module-modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3"]], "messageclient (class in modules.hmi_hotspot.hmi_hotspot_client_text3)": [[480, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient"]], "__init__() (modules.hmi_hotspot.hmi_hotspot_client_text3.messageclient method)": [[480, "modules.HMI_HOTSPOT.HMI_HOTSPOT_client_text3.MessageClient.__init__"]], "modules.hmi_hotspot.hmi_server": [[481, "module-modules.HMI_HOTSPOT.HMI_server"]], "mercuryserver (class in modules.hmi_hotspot.hmi_server)": [[482, "modules.HMI_HOTSPOT.HMI_server.MercuryServer"]], "__init__() (modules.hmi_hotspot.hmi_server.mercuryserver method)": [[482, "modules.HMI_HOTSPOT.HMI_server.MercuryServer.__init__"]], "main() (in module modules.hmi_hotspot.hmi_server)": [[483, "modules.HMI_HOTSPOT.HMI_server.main"]], "modules.hmi_hotspot.client_test": [[484, "module-modules.HMI_HOTSPOT.client_test"]], "client (class in modules.hmi_hotspot.client_test)": [[485, "modules.HMI_HOTSPOT.client_test.Client"]], "__init__() (modules.hmi_hotspot.client_test.client method)": [[485, "modules.HMI_HOTSPOT.client_test.Client.__init__"]], "modules.hmi_hotspot.client_test2": [[486, "module-modules.HMI_HOTSPOT.client_test2"]], "clienthmi (class in modules.hmi_hotspot.client_test2)": [[487, "modules.HMI_HOTSPOT.client_test2.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test2.clienthmi method)": [[487, "modules.HMI_HOTSPOT.client_test2.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_hmi": [[488, "module-modules.HMI_HOTSPOT.client_test_hmi"]], "clienthmi (class in modules.hmi_hotspot.client_test_hmi)": [[489, "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test_hmi.clienthmi method)": [[489, "modules.HMI_HOTSPOT.client_test_hmi.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_hmi2": [[490, "module-modules.HMI_HOTSPOT.client_test_hmi2"]], "clienthmi (class in modules.hmi_hotspot.client_test_hmi2)": [[491, "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI"]], "__init__() (modules.hmi_hotspot.client_test_hmi2.clienthmi method)": [[491, "modules.HMI_HOTSPOT.client_test_hmi2.ClientHMI.__init__"]], "modules.hmi_hotspot.client_test_mercury": [[492, "module-modules.HMI_HOTSPOT.client_test_mercury"]], "clientmercury (class in modules.hmi_hotspot.client_test_mercury)": [[493, "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury"]], "__init__() (modules.hmi_hotspot.client_test_mercury.clientmercury method)": [[493, "modules.HMI_HOTSPOT.client_test_mercury.ClientMercury.__init__"]], "modules.hmi_hotspot.hmi_regulation_test_hmi": [[494, "module-modules.HMI_HOTSPOT.hmi_regulation_test_hmi"]], "messageclient (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient"]], "messageclient.letter (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter"]], "__init__() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.__init__"]], "clear() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.clear"]], "copy() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.copy"]], "fromkeys() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.fromkeys"]], "get() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.get"]], "items() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.items"]], "keys() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.keys"]], "pop() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.pop"]], "popitem() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.popitem"]], "setdefault() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.setdefault"]], "update() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.update"]], "values() (modules.hmi_hotspot.hmi_regulation_test_hmi.messageclient.letter method)": [[495, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.MessageClient.Letter.values"]], "windowselectfp (class in modules.hmi_hotspot.hmi_regulation_test_hmi)": [[496, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP"]], "__init__() (modules.hmi_hotspot.hmi_regulation_test_hmi.windowselectfp method)": [[496, "modules.HMI_HOTSPOT.hmi_regulation_test_hmi.WindowSelectFP.__init__"]], "modules.hmi_hotspot.module_definition": [[497, "module-modules.HMI_HOTSPOT.module_definition"]], "modules.hmi_hotspot.paras_hmi_fp_sel": [[498, "module-modules.HMI_HOTSPOT.paras_HMI_FP_SEL"]], "modules.hmi_hotspot.paras_hmi_hotspot": [[499, "module-modules.HMI_HOTSPOT.paras_HMI_HOTSPOT"]], "modules.ta": [[500, "module-modules.TA"]], "modules.ta.ta_l1": [[501, "module-modules.TA.TA_L1"]], "consider_waiting_pax_ta1() (in module modules.ta.ta_l1)": [[502, "modules.TA.TA_L1.consider_waiting_pax_TA1"]], "cost_index_assessment_ta1() (in module modules.ta.ta_l1)": [[503, "modules.TA.TA_L1.cost_index_assessment_TA1"]], "wait_for_toc_reached_message_ta1() (in module modules.ta.ta_l1)": [[504, "modules.TA.TA_L1.wait_for_toc_reached_message_TA1"]], "modules.ta.ta_l2": [[505, "module-modules.TA.TA_L2"]], "consider_waiting_pax_ta2() (in module modules.ta.ta_l2)": [[506, "modules.TA.TA_L2.consider_waiting_pax_TA2"]], "cost_index_assessment_ta2() (in module modules.ta.ta_l2)": [[507, "modules.TA.TA_L2.cost_index_assessment_TA2"]], "wait_for_toc_reached_message_ta2() (in module modules.ta.ta_l2)": [[508, "modules.TA.TA_L2.wait_for_toc_reached_message_TA2"]], "modules.ta.module_definition": [[509, "module-modules.TA.module_definition"]], "modules.nostromo_eaman": [[510, "module-modules.nostromo_EAMAN"]], "modules.nostromo_eaman.module_definition": [[511, "module-modules.nostromo_EAMAN.module_definition"]], "modules.nostromo_eaman.nostromo_eaman": [[512, "module-modules.nostromo_EAMAN.nostromo_EAMAN"]], "ask_radar_update_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[513, "modules.nostromo_EAMAN.nostromo_EAMAN.ask_radar_update_NEW"]], "build_matrices() (in module modules.nostromo_eaman.nostromo_eaman)": [[514, "modules.nostromo_EAMAN.nostromo_EAMAN.build_matrices"]], "build_stuff() (in module modules.nostromo_eaman.nostromo_eaman)": [[515, "modules.nostromo_EAMAN.nostromo_EAMAN.build_stuff"]], "compute_allocation_cost_for_flight() (in module modules.nostromo_eaman.nostromo_eaman)": [[516, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_cost_for_flight"]], "compute_allocation_for_all_flights() (in module modules.nostromo_eaman.nostromo_eaman)": [[517, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_allocation_for_all_flights"]], "compute_initial_allocation() (in module modules.nostromo_eaman.nostromo_eaman)": [[518, "modules.nostromo_EAMAN.nostromo_EAMAN.compute_initial_allocation"]], "generate_probas_speed_gen() (in module modules.nostromo_eaman.nostromo_eaman)": [[519, "modules.nostromo_EAMAN.nostromo_EAMAN.generate_probas_speed_gen"]], "get_p() (in module modules.nostromo_eaman.nostromo_eaman)": [[520, "modules.nostromo_EAMAN.nostromo_EAMAN.get_p"]], "notify_flight_in_data_horizon() (in module modules.nostromo_eaman.nostromo_eaman)": [[521, "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_in_data_horizon"]], "notify_flight_landing() (in module modules.nostromo_eaman.nostromo_eaman)": [[522, "modules.nostromo_EAMAN.nostromo_EAMAN.notify_flight_landing"]], "on_init() (in module modules.nostromo_eaman.nostromo_eaman)": [[523, "modules.nostromo_EAMAN.nostromo_EAMAN.on_init"]], "on_init_agent() (in module modules.nostromo_eaman.nostromo_eaman)": [[524, "modules.nostromo_EAMAN.nostromo_EAMAN.on_init_agent"]], "prepare_data_for_optimizer_advanced() (in module modules.nostromo_eaman.nostromo_eaman)": [[525, "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_advanced"]], "prepare_data_for_optimizer_baseline() (in module modules.nostromo_eaman.nostromo_eaman)": [[526, "modules.nostromo_EAMAN.nostromo_EAMAN.prepare_data_for_optimizer_baseline"]], "receive_new_messages() (in module modules.nostromo_eaman.nostromo_eaman)": [[527, "modules.nostromo_EAMAN.nostromo_EAMAN.receive_new_messages"]], "rescale() (in module modules.nostromo_eaman.nostromo_eaman)": [[528, "modules.nostromo_EAMAN.nostromo_EAMAN.rescale"]], "send_request_for_cost_function() (in module modules.nostromo_eaman.nostromo_eaman)": [[529, "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_cost_function"]], "send_request_for_potential_delay_recovery_request() (in module modules.nostromo_eaman.nostromo_eaman)": [[530, "modules.nostromo_EAMAN.nostromo_EAMAN.send_request_for_potential_delay_recovery_request"]], "update_arrival_sequence_planning_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[531, "modules.nostromo_EAMAN.nostromo_EAMAN.update_arrival_sequence_planning_NEW"]], "wait_for_cost_function() (in module modules.nostromo_eaman.nostromo_eaman)": [[532, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_cost_function"]], "wait_for_estimated_landing_time_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[533, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_estimated_landing_time_NEW"]], "wait_for_flight_arrival_information_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[534, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_arrival_information_NEW"]], "wait_for_flight_in_data_horizon() (in module modules.nostromo_eaman.nostromo_eaman)": [[535, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_data_horizon"]], "wait_for_flight_in_eaman_new() (in module modules.nostromo_eaman.nostromo_eaman)": [[536, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_in_eaman_NEW"]], "wait_for_flight_potential_delay_recover_information() (in module modules.nostromo_eaman.nostromo_eaman)": [[537, "modules.nostromo_EAMAN.nostromo_EAMAN.wait_for_flight_potential_delay_recover_information"]], "modules.nostromo_eaman.optimiser_advanced": [[538, "module-modules.nostromo_EAMAN.optimiser_advanced"]], "dummyfile (class in modules.nostromo_eaman.optimiser_advanced)": [[539, "modules.nostromo_EAMAN.optimiser_advanced.DummyFile"]], "__init__() (modules.nostromo_eaman.optimiser_advanced.dummyfile method)": [[539, "modules.nostromo_EAMAN.optimiser_advanced.DummyFile.__init__"]], "nosolution": [[540, "modules.nostromo_EAMAN.optimiser_advanced.NoSolution"]], "allocation_from_variable() (in module modules.nostromo_eaman.optimiser_advanced)": [[541, "modules.nostromo_EAMAN.optimiser_advanced.allocation_from_variable"]], "clock_time() (in module modules.nostromo_eaman.optimiser_advanced)": [[542, "modules.nostromo_EAMAN.optimiser_advanced.clock_time"]], "get_first_matching_element() (in module modules.nostromo_eaman.optimiser_advanced)": [[543, "modules.nostromo_EAMAN.optimiser_advanced.get_first_matching_element"]], "optimizer_advanced() (in module modules.nostromo_eaman.optimiser_advanced)": [[544, "modules.nostromo_EAMAN.optimiser_advanced.optimizer_advanced"]], "silence() (in module modules.nostromo_eaman.optimiser_advanced)": [[545, "modules.nostromo_EAMAN.optimiser_advanced.silence"]], "modules.nostromo_eaman.optimiser_baseline": [[546, "module-modules.nostromo_EAMAN.optimiser_baseline"]], "optimizer_baseline() (in module modules.nostromo_eaman.optimiser_baseline)": [[547, "modules.nostromo_EAMAN.optimiser_baseline.optimizer_baseline"]], "modules.nostromo_eaman.optimiser_baseline_fast": [[548, "module-modules.nostromo_EAMAN.optimiser_baseline_fast"]], "optimizer_baseline() (in module modules.nostromo_eaman.optimiser_baseline_fast)": [[549, "modules.nostromo_EAMAN.optimiser_baseline_fast.optimizer_baseline"]]}})